// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct AssociateEipToVlanOutput {
    /// <p>The VLANs that Amazon EVS creates during environment creation.</p>
    pub vlan: ::std::option::Option<crate::types::Vlan>,
    _request_id: Option<String>,
}
impl AssociateEipToVlanOutput {
    /// <p>The VLANs that Amazon EVS creates during environment creation.</p>
    pub fn vlan(&self) -> ::std::option::Option<&crate::types::Vlan> {
        self.vlan.as_ref()
    }
}
impl ::aws_types::request_id::RequestId for AssociateEipToVlanOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl AssociateEipToVlanOutput {
    /// Creates a new builder-style object to manufacture [`AssociateEipToVlanOutput`](crate::operation::associate_eip_to_vlan::AssociateEipToVlanOutput).
    pub fn builder() -> crate::operation::associate_eip_to_vlan::builders::AssociateEipToVlanOutputBuilder {
        crate::operation::associate_eip_to_vlan::builders::AssociateEipToVlanOutputBuilder::default()
    }
}

/// A builder for [`AssociateEipToVlanOutput`](crate::operation::associate_eip_to_vlan::AssociateEipToVlanOutput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct AssociateEipToVlanOutputBuilder {
    pub(crate) vlan: ::std::option::Option<crate::types::Vlan>,
    _request_id: Option<String>,
}
impl AssociateEipToVlanOutputBuilder {
    /// <p>The VLANs that Amazon EVS creates during environment creation.</p>
    pub fn vlan(mut self, input: crate::types::Vlan) -> Self {
        self.vlan = ::std::option::Option::Some(input);
        self
    }
    /// <p>The VLANs that Amazon EVS creates during environment creation.</p>
    pub fn set_vlan(mut self, input: ::std::option::Option<crate::types::Vlan>) -> Self {
        self.vlan = input;
        self
    }
    /// <p>The VLANs that Amazon EVS creates during environment creation.</p>
    pub fn get_vlan(&self) -> &::std::option::Option<crate::types::Vlan> {
        &self.vlan
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`AssociateEipToVlanOutput`](crate::operation::associate_eip_to_vlan::AssociateEipToVlanOutput).
    pub fn build(self) -> crate::operation::associate_eip_to_vlan::AssociateEipToVlanOutput {
        crate::operation::associate_eip_to_vlan::AssociateEipToVlanOutput {
            vlan: self.vlan,
            _request_id: self._request_id,
        }
    }
}
