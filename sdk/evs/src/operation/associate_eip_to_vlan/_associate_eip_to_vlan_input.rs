// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct AssociateEipToVlanInput {
    /// <note>
    /// <p>This parameter is not used in Amazon EVS currently. If you supply input for this parameter, it will have no effect.</p>
    /// </note>
    /// <p>A unique, case-sensitive identifier that you provide to ensure the idempotency of the environment creation request. If you do not specify a client token, a randomly generated token is used for the request to ensure idempotency.</p>
    pub client_token: ::std::option::Option<::std::string::String>,
    /// <p>A unique ID for the environment containing the VLAN that the Elastic IP address associates with.</p>
    pub environment_id: ::std::option::Option<::std::string::String>,
    /// <p>The name of the VLAN. <code>hcx</code> is the only accepted VLAN name at this time.</p>
    pub vlan_name: ::std::option::Option<::std::string::String>,
    /// <p>The Elastic IP address allocation ID.</p>
    pub allocation_id: ::std::option::Option<::std::string::String>,
}
impl AssociateEipToVlanInput {
    /// <note>
    /// <p>This parameter is not used in Amazon EVS currently. If you supply input for this parameter, it will have no effect.</p>
    /// </note>
    /// <p>A unique, case-sensitive identifier that you provide to ensure the idempotency of the environment creation request. If you do not specify a client token, a randomly generated token is used for the request to ensure idempotency.</p>
    pub fn client_token(&self) -> ::std::option::Option<&str> {
        self.client_token.as_deref()
    }
    /// <p>A unique ID for the environment containing the VLAN that the Elastic IP address associates with.</p>
    pub fn environment_id(&self) -> ::std::option::Option<&str> {
        self.environment_id.as_deref()
    }
    /// <p>The name of the VLAN. <code>hcx</code> is the only accepted VLAN name at this time.</p>
    pub fn vlan_name(&self) -> ::std::option::Option<&str> {
        self.vlan_name.as_deref()
    }
    /// <p>The Elastic IP address allocation ID.</p>
    pub fn allocation_id(&self) -> ::std::option::Option<&str> {
        self.allocation_id.as_deref()
    }
}
impl AssociateEipToVlanInput {
    /// Creates a new builder-style object to manufacture [`AssociateEipToVlanInput`](crate::operation::associate_eip_to_vlan::AssociateEipToVlanInput).
    pub fn builder() -> crate::operation::associate_eip_to_vlan::builders::AssociateEipToVlanInputBuilder {
        crate::operation::associate_eip_to_vlan::builders::AssociateEipToVlanInputBuilder::default()
    }
}

/// A builder for [`AssociateEipToVlanInput`](crate::operation::associate_eip_to_vlan::AssociateEipToVlanInput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct AssociateEipToVlanInputBuilder {
    pub(crate) client_token: ::std::option::Option<::std::string::String>,
    pub(crate) environment_id: ::std::option::Option<::std::string::String>,
    pub(crate) vlan_name: ::std::option::Option<::std::string::String>,
    pub(crate) allocation_id: ::std::option::Option<::std::string::String>,
}
impl AssociateEipToVlanInputBuilder {
    /// <note>
    /// <p>This parameter is not used in Amazon EVS currently. If you supply input for this parameter, it will have no effect.</p>
    /// </note>
    /// <p>A unique, case-sensitive identifier that you provide to ensure the idempotency of the environment creation request. If you do not specify a client token, a randomly generated token is used for the request to ensure idempotency.</p>
    pub fn client_token(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.client_token = ::std::option::Option::Some(input.into());
        self
    }
    /// <note>
    /// <p>This parameter is not used in Amazon EVS currently. If you supply input for this parameter, it will have no effect.</p>
    /// </note>
    /// <p>A unique, case-sensitive identifier that you provide to ensure the idempotency of the environment creation request. If you do not specify a client token, a randomly generated token is used for the request to ensure idempotency.</p>
    pub fn set_client_token(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.client_token = input;
        self
    }
    /// <note>
    /// <p>This parameter is not used in Amazon EVS currently. If you supply input for this parameter, it will have no effect.</p>
    /// </note>
    /// <p>A unique, case-sensitive identifier that you provide to ensure the idempotency of the environment creation request. If you do not specify a client token, a randomly generated token is used for the request to ensure idempotency.</p>
    pub fn get_client_token(&self) -> &::std::option::Option<::std::string::String> {
        &self.client_token
    }
    /// <p>A unique ID for the environment containing the VLAN that the Elastic IP address associates with.</p>
    /// This field is required.
    pub fn environment_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.environment_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>A unique ID for the environment containing the VLAN that the Elastic IP address associates with.</p>
    pub fn set_environment_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.environment_id = input;
        self
    }
    /// <p>A unique ID for the environment containing the VLAN that the Elastic IP address associates with.</p>
    pub fn get_environment_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.environment_id
    }
    /// <p>The name of the VLAN. <code>hcx</code> is the only accepted VLAN name at this time.</p>
    /// This field is required.
    pub fn vlan_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.vlan_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of the VLAN. <code>hcx</code> is the only accepted VLAN name at this time.</p>
    pub fn set_vlan_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.vlan_name = input;
        self
    }
    /// <p>The name of the VLAN. <code>hcx</code> is the only accepted VLAN name at this time.</p>
    pub fn get_vlan_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.vlan_name
    }
    /// <p>The Elastic IP address allocation ID.</p>
    /// This field is required.
    pub fn allocation_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.allocation_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Elastic IP address allocation ID.</p>
    pub fn set_allocation_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.allocation_id = input;
        self
    }
    /// <p>The Elastic IP address allocation ID.</p>
    pub fn get_allocation_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.allocation_id
    }
    /// Consumes the builder and constructs a [`AssociateEipToVlanInput`](crate::operation::associate_eip_to_vlan::AssociateEipToVlanInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<crate::operation::associate_eip_to_vlan::AssociateEipToVlanInput, ::aws_smithy_types::error::operation::BuildError>
    {
        ::std::result::Result::Ok(crate::operation::associate_eip_to_vlan::AssociateEipToVlanInput {
            client_token: self.client_token,
            environment_id: self.environment_id,
            vlan_name: self.vlan_name,
            allocation_id: self.allocation_id,
        })
    }
}
