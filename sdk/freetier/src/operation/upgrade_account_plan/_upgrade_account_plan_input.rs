// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct UpgradeAccountPlanInput {
    /// <p>The target account plan type. This makes it explicit about the change and latest value of the <code>accountPlanType</code>.</p>
    pub account_plan_type: ::std::option::Option<crate::types::AccountPlanType>,
}
impl UpgradeAccountPlanInput {
    /// <p>The target account plan type. This makes it explicit about the change and latest value of the <code>accountPlanType</code>.</p>
    pub fn account_plan_type(&self) -> ::std::option::Option<&crate::types::AccountPlanType> {
        self.account_plan_type.as_ref()
    }
}
impl UpgradeAccountPlanInput {
    /// Creates a new builder-style object to manufacture [`UpgradeAccountPlanInput`](crate::operation::upgrade_account_plan::UpgradeAccountPlanInput).
    pub fn builder() -> crate::operation::upgrade_account_plan::builders::UpgradeAccountPlanInputBuilder {
        crate::operation::upgrade_account_plan::builders::UpgradeAccountPlanInputBuilder::default()
    }
}

/// A builder for [`UpgradeAccountPlanInput`](crate::operation::upgrade_account_plan::UpgradeAccountPlanInput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct UpgradeAccountPlanInputBuilder {
    pub(crate) account_plan_type: ::std::option::Option<crate::types::AccountPlanType>,
}
impl UpgradeAccountPlanInputBuilder {
    /// <p>The target account plan type. This makes it explicit about the change and latest value of the <code>accountPlanType</code>.</p>
    /// This field is required.
    pub fn account_plan_type(mut self, input: crate::types::AccountPlanType) -> Self {
        self.account_plan_type = ::std::option::Option::Some(input);
        self
    }
    /// <p>The target account plan type. This makes it explicit about the change and latest value of the <code>accountPlanType</code>.</p>
    pub fn set_account_plan_type(mut self, input: ::std::option::Option<crate::types::AccountPlanType>) -> Self {
        self.account_plan_type = input;
        self
    }
    /// <p>The target account plan type. This makes it explicit about the change and latest value of the <code>accountPlanType</code>.</p>
    pub fn get_account_plan_type(&self) -> &::std::option::Option<crate::types::AccountPlanType> {
        &self.account_plan_type
    }
    /// Consumes the builder and constructs a [`UpgradeAccountPlanInput`](crate::operation::upgrade_account_plan::UpgradeAccountPlanInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<crate::operation::upgrade_account_plan::UpgradeAccountPlanInput, ::aws_smithy_types::error::operation::BuildError>
    {
        ::std::result::Result::Ok(crate::operation::upgrade_account_plan::UpgradeAccountPlanInput {
            account_plan_type: self.account_plan_type,
        })
    }
}
