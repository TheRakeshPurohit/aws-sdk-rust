// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`StartPracticeRun`](crate::operation::start_practice_run::builders::StartPracticeRunFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`resource_identifier(impl Into<String>)`](crate::operation::start_practice_run::builders::StartPracticeRunFluentBuilder::resource_identifier) / [`set_resource_identifier(Option<String>)`](crate::operation::start_practice_run::builders::StartPracticeRunFluentBuilder::set_resource_identifier):<br>required: **true**<br><p>The identifier for the resource that you want to start a practice run zonal shift for. The identifier is the Amazon Resource Name (ARN) for the resource.</p><br>
    ///   - [`away_from(impl Into<String>)`](crate::operation::start_practice_run::builders::StartPracticeRunFluentBuilder::away_from) / [`set_away_from(Option<String>)`](crate::operation::start_practice_run::builders::StartPracticeRunFluentBuilder::set_away_from):<br>required: **true**<br><p>The Availability Zone (for example, <code>use1-az1</code>) that traffic is shifted away from for the resource that you specify for the practice run.</p><br>
    ///   - [`comment(impl Into<String>)`](crate::operation::start_practice_run::builders::StartPracticeRunFluentBuilder::comment) / [`set_comment(Option<String>)`](crate::operation::start_practice_run::builders::StartPracticeRunFluentBuilder::set_comment):<br>required: **true**<br><p>The initial comment that you enter about the practice run. Be aware that this comment can be overwritten by Amazon Web Services if the automatic check for balanced capacity fails. For more information, see <a href="https://docs.aws.amazon.com/r53recovery/latest/dg/arc-zonal-autoshift.how-it-works.capacity-check.html"> Capacity checks for practice runs</a> in the Amazon Application Recovery Controller Developer Guide.</p><br>
    /// - On success, responds with [`StartPracticeRunOutput`](crate::operation::start_practice_run::StartPracticeRunOutput) with field(s):
    ///   - [`zonal_shift_id(String)`](crate::operation::start_practice_run::StartPracticeRunOutput::zonal_shift_id): <p>The identifier of a practice run zonal shift.</p>
    ///   - [`resource_identifier(String)`](crate::operation::start_practice_run::StartPracticeRunOutput::resource_identifier): <p>The identifier for the resource that you want to shift traffic for. The identifier is the Amazon Resource Name (ARN) for the resource.</p>
    ///   - [`away_from(String)`](crate::operation::start_practice_run::StartPracticeRunOutput::away_from): <p>The Availability Zone (for example, <code>use1-az1</code>) that traffic is shifted away from for the resource that you specify for the practice run.</p>
    ///   - [`expiry_time(DateTime)`](crate::operation::start_practice_run::StartPracticeRunOutput::expiry_time): <p>The expiry time (expiration time) for an on-demand practice run zonal shift is 30 minutes from the time when you start the practice run, unless you cancel it before that time. However, be aware that the <code>expiryTime</code> field for practice run zonal shifts always has a value of 1 minute.</p>
    ///   - [`start_time(DateTime)`](crate::operation::start_practice_run::StartPracticeRunOutput::start_time): <p>The time (UTC) when the zonal shift starts.</p>
    ///   - [`status(ZonalShiftStatus)`](crate::operation::start_practice_run::StartPracticeRunOutput::status): <p>A status for the practice run (expected status is <b>ACTIVE</b>).</p>
    ///   - [`comment(String)`](crate::operation::start_practice_run::StartPracticeRunOutput::comment): <p>The initial comment that you enter about the practice run. Be aware that this comment can be overwritten by Amazon Web Services if the automatic check for balanced capacity fails. For more information, see <a href="https://docs.aws.amazon.com/r53recovery/latest/dg/arc-zonal-autoshift.how-it-works.capacity-check.html"> Capacity checks for practice runs</a> in the Amazon Application Recovery Controller Developer Guide.</p>
    /// - On failure, responds with [`SdkError<StartPracticeRunError>`](crate::operation::start_practice_run::StartPracticeRunError)
    pub fn start_practice_run(&self) -> crate::operation::start_practice_run::builders::StartPracticeRunFluentBuilder {
        crate::operation::start_practice_run::builders::StartPracticeRunFluentBuilder::new(self.handle.clone())
    }
}
