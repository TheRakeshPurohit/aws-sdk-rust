// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct PutApplicationSessionConfigurationInput {
    /// <p>The Amazon Resource Name (ARN) of the application for which to update the session configuration.</p>
    pub application_arn: ::std::option::Option<::std::string::String>,
    /// <p>The status of user background sessions for the application.</p>
    pub user_background_session_application_status: ::std::option::Option<crate::types::UserBackgroundSessionApplicationStatus>,
}
impl PutApplicationSessionConfigurationInput {
    /// <p>The Amazon Resource Name (ARN) of the application for which to update the session configuration.</p>
    pub fn application_arn(&self) -> ::std::option::Option<&str> {
        self.application_arn.as_deref()
    }
    /// <p>The status of user background sessions for the application.</p>
    pub fn user_background_session_application_status(&self) -> ::std::option::Option<&crate::types::UserBackgroundSessionApplicationStatus> {
        self.user_background_session_application_status.as_ref()
    }
}
impl PutApplicationSessionConfigurationInput {
    /// Creates a new builder-style object to manufacture [`PutApplicationSessionConfigurationInput`](crate::operation::put_application_session_configuration::PutApplicationSessionConfigurationInput).
    pub fn builder() -> crate::operation::put_application_session_configuration::builders::PutApplicationSessionConfigurationInputBuilder {
        crate::operation::put_application_session_configuration::builders::PutApplicationSessionConfigurationInputBuilder::default()
    }
}

/// A builder for [`PutApplicationSessionConfigurationInput`](crate::operation::put_application_session_configuration::PutApplicationSessionConfigurationInput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct PutApplicationSessionConfigurationInputBuilder {
    pub(crate) application_arn: ::std::option::Option<::std::string::String>,
    pub(crate) user_background_session_application_status: ::std::option::Option<crate::types::UserBackgroundSessionApplicationStatus>,
}
impl PutApplicationSessionConfigurationInputBuilder {
    /// <p>The Amazon Resource Name (ARN) of the application for which to update the session configuration.</p>
    /// This field is required.
    pub fn application_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.application_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the application for which to update the session configuration.</p>
    pub fn set_application_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.application_arn = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the application for which to update the session configuration.</p>
    pub fn get_application_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.application_arn
    }
    /// <p>The status of user background sessions for the application.</p>
    pub fn user_background_session_application_status(mut self, input: crate::types::UserBackgroundSessionApplicationStatus) -> Self {
        self.user_background_session_application_status = ::std::option::Option::Some(input);
        self
    }
    /// <p>The status of user background sessions for the application.</p>
    pub fn set_user_background_session_application_status(
        mut self,
        input: ::std::option::Option<crate::types::UserBackgroundSessionApplicationStatus>,
    ) -> Self {
        self.user_background_session_application_status = input;
        self
    }
    /// <p>The status of user background sessions for the application.</p>
    pub fn get_user_background_session_application_status(&self) -> &::std::option::Option<crate::types::UserBackgroundSessionApplicationStatus> {
        &self.user_background_session_application_status
    }
    /// Consumes the builder and constructs a [`PutApplicationSessionConfigurationInput`](crate::operation::put_application_session_configuration::PutApplicationSessionConfigurationInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::put_application_session_configuration::PutApplicationSessionConfigurationInput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(
            crate::operation::put_application_session_configuration::PutApplicationSessionConfigurationInput {
                application_arn: self.application_arn,
                user_background_session_application_status: self.user_background_session_application_status,
            },
        )
    }
}
