// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`UpdateApplicationWithTokenExchangeGrant`](crate::operation::update_application_with_token_exchange_grant::builders::UpdateApplicationWithTokenExchangeGrantFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`aws_account_id(impl Into<String>)`](crate::operation::update_application_with_token_exchange_grant::builders::UpdateApplicationWithTokenExchangeGrantFluentBuilder::aws_account_id) / [`set_aws_account_id(Option<String>)`](crate::operation::update_application_with_token_exchange_grant::builders::UpdateApplicationWithTokenExchangeGrantFluentBuilder::set_aws_account_id):<br>required: **true**<br><p>The ID of the Amazon Web Services account to be updated with a token exchange grant.</p><br>
    ///   - [`namespace(impl Into<String>)`](crate::operation::update_application_with_token_exchange_grant::builders::UpdateApplicationWithTokenExchangeGrantFluentBuilder::namespace) / [`set_namespace(Option<String>)`](crate::operation::update_application_with_token_exchange_grant::builders::UpdateApplicationWithTokenExchangeGrantFluentBuilder::set_namespace):<br>required: **true**<br><p>The namespace of the QuickSight application.</p><br>
    /// - On success, responds with [`UpdateApplicationWithTokenExchangeGrantOutput`](crate::operation::update_application_with_token_exchange_grant::UpdateApplicationWithTokenExchangeGrantOutput) with field(s):
    ///   - [`status(i32)`](crate::operation::update_application_with_token_exchange_grant::UpdateApplicationWithTokenExchangeGrantOutput::status): <p>The HTTP status of the request.</p>
    ///   - [`request_id(Option<String>)`](crate::operation::update_application_with_token_exchange_grant::UpdateApplicationWithTokenExchangeGrantOutput::request_id): <p>The Amazon Web Services request ID for this operation.</p>
    /// - On failure, responds with [`SdkError<UpdateApplicationWithTokenExchangeGrantError>`](crate::operation::update_application_with_token_exchange_grant::UpdateApplicationWithTokenExchangeGrantError)
    pub fn update_application_with_token_exchange_grant(
        &self,
    ) -> crate::operation::update_application_with_token_exchange_grant::builders::UpdateApplicationWithTokenExchangeGrantFluentBuilder {
        crate::operation::update_application_with_token_exchange_grant::builders::UpdateApplicationWithTokenExchangeGrantFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
