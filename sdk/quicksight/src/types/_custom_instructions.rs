// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Instructions that provide additional guidance and context for response generation.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq)]
pub struct CustomInstructions {
    /// <p>A text field for providing additional guidance or context for response generation.</p>
    pub custom_instructions_string: ::std::string::String,
}
impl CustomInstructions {
    /// <p>A text field for providing additional guidance or context for response generation.</p>
    pub fn custom_instructions_string(&self) -> &str {
        use std::ops::Deref;
        self.custom_instructions_string.deref()
    }
}
impl ::std::fmt::Debug for CustomInstructions {
    fn fmt(&self, f: &mut ::std::fmt::Formatter<'_>) -> ::std::fmt::Result {
        let mut formatter = f.debug_struct("CustomInstructions");
        formatter.field("custom_instructions_string", &"*** Sensitive Data Redacted ***");
        formatter.finish()
    }
}
impl CustomInstructions {
    /// Creates a new builder-style object to manufacture [`CustomInstructions`](crate::types::CustomInstructions).
    pub fn builder() -> crate::types::builders::CustomInstructionsBuilder {
        crate::types::builders::CustomInstructionsBuilder::default()
    }
}

/// A builder for [`CustomInstructions`](crate::types::CustomInstructions).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default)]
#[non_exhaustive]
pub struct CustomInstructionsBuilder {
    pub(crate) custom_instructions_string: ::std::option::Option<::std::string::String>,
}
impl CustomInstructionsBuilder {
    /// <p>A text field for providing additional guidance or context for response generation.</p>
    /// This field is required.
    pub fn custom_instructions_string(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.custom_instructions_string = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>A text field for providing additional guidance or context for response generation.</p>
    pub fn set_custom_instructions_string(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.custom_instructions_string = input;
        self
    }
    /// <p>A text field for providing additional guidance or context for response generation.</p>
    pub fn get_custom_instructions_string(&self) -> &::std::option::Option<::std::string::String> {
        &self.custom_instructions_string
    }
    /// Consumes the builder and constructs a [`CustomInstructions`](crate::types::CustomInstructions).
    /// This method will fail if any of the following fields are not set:
    /// - [`custom_instructions_string`](crate::types::builders::CustomInstructionsBuilder::custom_instructions_string)
    pub fn build(self) -> ::std::result::Result<crate::types::CustomInstructions, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::CustomInstructions {
            custom_instructions_string: self.custom_instructions_string.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "custom_instructions_string",
                    "custom_instructions_string was not specified but it is required when building CustomInstructions",
                )
            })?,
        })
    }
}
impl ::std::fmt::Debug for CustomInstructionsBuilder {
    fn fmt(&self, f: &mut ::std::fmt::Formatter<'_>) -> ::std::fmt::Result {
        let mut formatter = f.debug_struct("CustomInstructionsBuilder");
        formatter.field("custom_instructions_string", &"*** Sensitive Data Redacted ***");
        formatter.finish()
    }
}
