// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The parameters that are required to connect to a custom connection data source.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct CustomConnectionParameters {
    /// <p>The type of custom connector.</p>
    pub connection_type: ::std::option::Option<::std::string::String>,
}
impl CustomConnectionParameters {
    /// <p>The type of custom connector.</p>
    pub fn connection_type(&self) -> ::std::option::Option<&str> {
        self.connection_type.as_deref()
    }
}
impl CustomConnectionParameters {
    /// Creates a new builder-style object to manufacture [`CustomConnectionParameters`](crate::types::CustomConnectionParameters).
    pub fn builder() -> crate::types::builders::CustomConnectionParametersBuilder {
        crate::types::builders::CustomConnectionParametersBuilder::default()
    }
}

/// A builder for [`CustomConnectionParameters`](crate::types::CustomConnectionParameters).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct CustomConnectionParametersBuilder {
    pub(crate) connection_type: ::std::option::Option<::std::string::String>,
}
impl CustomConnectionParametersBuilder {
    /// <p>The type of custom connector.</p>
    pub fn connection_type(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.connection_type = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The type of custom connector.</p>
    pub fn set_connection_type(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.connection_type = input;
        self
    }
    /// <p>The type of custom connector.</p>
    pub fn get_connection_type(&self) -> &::std::option::Option<::std::string::String> {
        &self.connection_type
    }
    /// Consumes the builder and constructs a [`CustomConnectionParameters`](crate::types::CustomConnectionParameters).
    pub fn build(self) -> crate::types::CustomConnectionParameters {
        crate::types::CustomConnectionParameters {
            connection_type: self.connection_type,
        }
    }
}
