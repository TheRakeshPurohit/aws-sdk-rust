// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`UpdateManagedThing`](crate::operation::update_managed_thing::builders::UpdateManagedThingFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`identifier(impl Into<String>)`](crate::operation::update_managed_thing::builders::UpdateManagedThingFluentBuilder::identifier) / [`set_identifier(Option<String>)`](crate::operation::update_managed_thing::builders::UpdateManagedThingFluentBuilder::set_identifier):<br>required: **true**<br><p>The id of the managed thing.</p><br>
    ///   - [`owner(impl Into<String>)`](crate::operation::update_managed_thing::builders::UpdateManagedThingFluentBuilder::owner) / [`set_owner(Option<String>)`](crate::operation::update_managed_thing::builders::UpdateManagedThingFluentBuilder::set_owner):<br>required: **false**<br><p>Owner of the device, usually an indication of whom the device belongs to. This value should not contain personal identifiable information.</p><br>
    ///   - [`credential_locker_id(impl Into<String>)`](crate::operation::update_managed_thing::builders::UpdateManagedThingFluentBuilder::credential_locker_id) / [`set_credential_locker_id(Option<String>)`](crate::operation::update_managed_thing::builders::UpdateManagedThingFluentBuilder::set_credential_locker_id):<br>required: **false**<br><p>The identifier of the credential for the managed thing.</p><br>
    ///   - [`serial_number(impl Into<String>)`](crate::operation::update_managed_thing::builders::UpdateManagedThingFluentBuilder::serial_number) / [`set_serial_number(Option<String>)`](crate::operation::update_managed_thing::builders::UpdateManagedThingFluentBuilder::set_serial_number):<br>required: **false**<br><p>The serial number of the device.</p><br>
    ///   - [`brand(impl Into<String>)`](crate::operation::update_managed_thing::builders::UpdateManagedThingFluentBuilder::brand) / [`set_brand(Option<String>)`](crate::operation::update_managed_thing::builders::UpdateManagedThingFluentBuilder::set_brand):<br>required: **false**<br><p>The brand of the device.</p><br>
    ///   - [`model(impl Into<String>)`](crate::operation::update_managed_thing::builders::UpdateManagedThingFluentBuilder::model) / [`set_model(Option<String>)`](crate::operation::update_managed_thing::builders::UpdateManagedThingFluentBuilder::set_model):<br>required: **false**<br><p>The model of the device.</p><br>
    ///   - [`name(impl Into<String>)`](crate::operation::update_managed_thing::builders::UpdateManagedThingFluentBuilder::name) / [`set_name(Option<String>)`](crate::operation::update_managed_thing::builders::UpdateManagedThingFluentBuilder::set_name):<br>required: **false**<br><p>The name of the managed thing representing the physical device.</p><br>
    ///   - [`capability_report(CapabilityReport)`](crate::operation::update_managed_thing::builders::UpdateManagedThingFluentBuilder::capability_report) / [`set_capability_report(Option<CapabilityReport>)`](crate::operation::update_managed_thing::builders::UpdateManagedThingFluentBuilder::set_capability_report):<br>required: **false**<br><p>A report of the capabilities for the managed thing.</p><br>
    ///   - [`capability_schemas(CapabilitySchemaItem)`](crate::operation::update_managed_thing::builders::UpdateManagedThingFluentBuilder::capability_schemas) / [`set_capability_schemas(Option<Vec::<CapabilitySchemaItem>>)`](crate::operation::update_managed_thing::builders::UpdateManagedThingFluentBuilder::set_capability_schemas):<br>required: **false**<br><p>The updated capability schemas that define the functionality and features supported by the managed thing.</p><br>
    ///   - [`capabilities(impl Into<String>)`](crate::operation::update_managed_thing::builders::UpdateManagedThingFluentBuilder::capabilities) / [`set_capabilities(Option<String>)`](crate::operation::update_managed_thing::builders::UpdateManagedThingFluentBuilder::set_capabilities):<br>required: **false**<br><p>The capabilities of the device such as light bulb.</p><br>
    ///   - [`classification(impl Into<String>)`](crate::operation::update_managed_thing::builders::UpdateManagedThingFluentBuilder::classification) / [`set_classification(Option<String>)`](crate::operation::update_managed_thing::builders::UpdateManagedThingFluentBuilder::set_classification):<br>required: **false**<br><p>The classification of the managed thing such as light bulb or thermostat.</p><br>
    ///   - [`hub_network_mode(HubNetworkMode)`](crate::operation::update_managed_thing::builders::UpdateManagedThingFluentBuilder::hub_network_mode) / [`set_hub_network_mode(Option<HubNetworkMode>)`](crate::operation::update_managed_thing::builders::UpdateManagedThingFluentBuilder::set_hub_network_mode):<br>required: **false**<br><p>The network mode for the hub-connected device.</p><br>
    ///   - [`meta_data(impl Into<String>, impl Into<String>)`](crate::operation::update_managed_thing::builders::UpdateManagedThingFluentBuilder::meta_data) / [`set_meta_data(Option<HashMap::<String, String>>)`](crate::operation::update_managed_thing::builders::UpdateManagedThingFluentBuilder::set_meta_data):<br>required: **false**<br><p>The metadata for the managed thing.</p><br>
    /// - On success, responds with [`UpdateManagedThingOutput`](crate::operation::update_managed_thing::UpdateManagedThingOutput)
    /// - On failure, responds with [`SdkError<UpdateManagedThingError>`](crate::operation::update_managed_thing::UpdateManagedThingError)
    pub fn update_managed_thing(&self) -> crate::operation::update_managed_thing::builders::UpdateManagedThingFluentBuilder {
        crate::operation::update_managed_thing::builders::UpdateManagedThingFluentBuilder::new(self.handle.clone())
    }
}
