// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`GetManagedThing`](crate::operation::get_managed_thing::builders::GetManagedThingFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`identifier(impl Into<String>)`](crate::operation::get_managed_thing::builders::GetManagedThingFluentBuilder::identifier) / [`set_identifier(Option<String>)`](crate::operation::get_managed_thing::builders::GetManagedThingFluentBuilder::set_identifier):<br>required: **true**<br><p>The id of the managed thing.</p><br>
    /// - On success, responds with [`GetManagedThingOutput`](crate::operation::get_managed_thing::GetManagedThingOutput) with field(s):
    ///   - [`id(Option<String>)`](crate::operation::get_managed_thing::GetManagedThingOutput::id): <p>The id of the managed thing.</p>
    ///   - [`arn(Option<String>)`](crate::operation::get_managed_thing::GetManagedThingOutput::arn): <p>The Amazon Resource Name (ARN) of the managed thing.</p>
    ///   - [`owner(Option<String>)`](crate::operation::get_managed_thing::GetManagedThingOutput::owner): <p>Owner of the device, usually an indication of whom the device belongs to. This value should not contain personal identifiable information.</p>
    ///   - [`credential_locker_id(Option<String>)`](crate::operation::get_managed_thing::GetManagedThingOutput::credential_locker_id): <p>The identifier of the credential locker for the managed thing.</p>
    ///   - [`advertised_product_id(Option<String>)`](crate::operation::get_managed_thing::GetManagedThingOutput::advertised_product_id): <p>The id of the advertised product.</p>
    ///   - [`role(Option<Role>)`](crate::operation::get_managed_thing::GetManagedThingOutput::role): <p>The type of device used. This will be the Amazon Web Services hub controller, cloud device, or IoT device.</p>
    ///   - [`provisioning_status(Option<ProvisioningStatus>)`](crate::operation::get_managed_thing::GetManagedThingOutput::provisioning_status): <p>The provisioning status of the device in the provisioning workflow for onboarding to IoT managed integrations.</p>
    ///   - [`name(Option<String>)`](crate::operation::get_managed_thing::GetManagedThingOutput::name): <p>The name of the managed thing representing the physical device.</p>
    ///   - [`model(Option<String>)`](crate::operation::get_managed_thing::GetManagedThingOutput::model): <p>The model of the device.</p>
    ///   - [`brand(Option<String>)`](crate::operation::get_managed_thing::GetManagedThingOutput::brand): <p>The brand of the device.</p>
    ///   - [`serial_number(Option<String>)`](crate::operation::get_managed_thing::GetManagedThingOutput::serial_number): <p>The serial number of the device.</p>
    ///   - [`universal_product_code(Option<String>)`](crate::operation::get_managed_thing::GetManagedThingOutput::universal_product_code): <p>The universal product code (UPC) of the device model. The UPC is typically used in the United States of America and Canada.</p>
    ///   - [`international_article_number(Option<String>)`](crate::operation::get_managed_thing::GetManagedThingOutput::international_article_number): <p>The unique 13 digit number that identifies the managed thing.</p>
    ///   - [`connector_policy_id(Option<String>)`](crate::operation::get_managed_thing::GetManagedThingOutput::connector_policy_id): <p>The id of the connector policy.</p><note>  <p>This parameter is used for cloud-to-cloud devices only.</p> </note>
    ///   - [`connector_destination_id(Option<String>)`](crate::operation::get_managed_thing::GetManagedThingOutput::connector_destination_id): <p>The identifier of the connector destination associated with this managed thing.</p>
    ///   - [`connector_device_id(Option<String>)`](crate::operation::get_managed_thing::GetManagedThingOutput::connector_device_id): <p>The third-party device id as defined by the connector. This device id must not contain personal identifiable information (PII).</p><note>  <p>This parameter is used for cloud-to-cloud devices only.</p> </note>
    ///   - [`device_specific_key(Option<String>)`](crate::operation::get_managed_thing::GetManagedThingOutput::device_specific_key): <p>A Zwave device-specific key used during device activation.</p><note>  <p>This parameter is used for Zwave devices only.</p> </note>
    ///   - [`mac_address(Option<String>)`](crate::operation::get_managed_thing::GetManagedThingOutput::mac_address): <p>The media access control (MAC) address for the device represented by the managed thing.</p><note>  <p>This parameter is used for Zigbee devices only.</p> </note>
    ///   - [`parent_controller_id(Option<String>)`](crate::operation::get_managed_thing::GetManagedThingOutput::parent_controller_id): <p>Id of the controller device used for the discovery job.</p>
    ///   - [`classification(Option<String>)`](crate::operation::get_managed_thing::GetManagedThingOutput::classification): <p>The classification of the managed thing such as light bulb or thermostat.</p>
    ///   - [`created_at(Option<DateTime>)`](crate::operation::get_managed_thing::GetManagedThingOutput::created_at): <p>The timestamp value of when the device creation request occurred.</p>
    ///   - [`updated_at(Option<DateTime>)`](crate::operation::get_managed_thing::GetManagedThingOutput::updated_at): <p>The timestamp value of when the managed thing was last updated at.</p>
    ///   - [`activated_at(Option<DateTime>)`](crate::operation::get_managed_thing::GetManagedThingOutput::activated_at): <p>The timestampe value of when the device was activated.</p>
    ///   - [`hub_network_mode(Option<HubNetworkMode>)`](crate::operation::get_managed_thing::GetManagedThingOutput::hub_network_mode): <p>The network mode for the hub-connected device.</p>
    ///   - [`meta_data(Option<HashMap::<String, String>>)`](crate::operation::get_managed_thing::GetManagedThingOutput::meta_data): <p>The metadata for the managed thing.</p>
    ///   - [`tags(Option<HashMap::<String, String>>)`](crate::operation::get_managed_thing::GetManagedThingOutput::tags): <p>A set of key/value pairs that are used to manage the managed thing.</p>
    /// - On failure, responds with [`SdkError<GetManagedThingError>`](crate::operation::get_managed_thing::GetManagedThingError)
    pub fn get_managed_thing(&self) -> crate::operation::get_managed_thing::builders::GetManagedThingFluentBuilder {
        crate::operation::get_managed_thing::builders::GetManagedThingFluentBuilder::new(self.handle.clone())
    }
}
