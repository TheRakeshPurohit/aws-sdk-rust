// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateConnectorDestination`](crate::operation::create_connector_destination::builders::CreateConnectorDestinationFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`name(impl Into<String>)`](crate::operation::create_connector_destination::builders::CreateConnectorDestinationFluentBuilder::name) / [`set_name(Option<String>)`](crate::operation::create_connector_destination::builders::CreateConnectorDestinationFluentBuilder::set_name):<br>required: **false**<br><p>The display name of the connector destination.</p><br>
    ///   - [`description(impl Into<String>)`](crate::operation::create_connector_destination::builders::CreateConnectorDestinationFluentBuilder::description) / [`set_description(Option<String>)`](crate::operation::create_connector_destination::builders::CreateConnectorDestinationFluentBuilder::set_description):<br>required: **false**<br><p>A description of the connector destination.</p><br>
    ///   - [`cloud_connector_id(impl Into<String>)`](crate::operation::create_connector_destination::builders::CreateConnectorDestinationFluentBuilder::cloud_connector_id) / [`set_cloud_connector_id(Option<String>)`](crate::operation::create_connector_destination::builders::CreateConnectorDestinationFluentBuilder::set_cloud_connector_id):<br>required: **true**<br><p>The identifier of the C2C connector.</p><br>
    ///   - [`auth_type(AuthType)`](crate::operation::create_connector_destination::builders::CreateConnectorDestinationFluentBuilder::auth_type) / [`set_auth_type(Option<AuthType>)`](crate::operation::create_connector_destination::builders::CreateConnectorDestinationFluentBuilder::set_auth_type):<br>required: **true**<br><p>The authentication type used for the connector destination, which determines how credentials and access are managed.</p><br>
    ///   - [`auth_config(AuthConfig)`](crate::operation::create_connector_destination::builders::CreateConnectorDestinationFluentBuilder::auth_config) / [`set_auth_config(Option<AuthConfig>)`](crate::operation::create_connector_destination::builders::CreateConnectorDestinationFluentBuilder::set_auth_config):<br>required: **true**<br><p>The authentication configuration details for the connector destination, including OAuth settings and other authentication parameters.</p><br>
    ///   - [`secrets_manager(SecretsManager)`](crate::operation::create_connector_destination::builders::CreateConnectorDestinationFluentBuilder::secrets_manager) / [`set_secrets_manager(Option<SecretsManager>)`](crate::operation::create_connector_destination::builders::CreateConnectorDestinationFluentBuilder::set_secrets_manager):<br>required: **true**<br><p>The AWS Secrets Manager configuration used to securely store and manage sensitive information for the connector destination.</p><br>
    ///   - [`client_token(impl Into<String>)`](crate::operation::create_connector_destination::builders::CreateConnectorDestinationFluentBuilder::client_token) / [`set_client_token(Option<String>)`](crate::operation::create_connector_destination::builders::CreateConnectorDestinationFluentBuilder::set_client_token):<br>required: **false**<br><p>An idempotency token. If you retry a request that completed successfully initially using the same client token and parameters, then the retry attempt will succeed without performing any further actions.</p><br>
    /// - On success, responds with [`CreateConnectorDestinationOutput`](crate::operation::create_connector_destination::CreateConnectorDestinationOutput) with field(s):
    ///   - [`id(Option<String>)`](crate::operation::create_connector_destination::CreateConnectorDestinationOutput::id): <p>The identifier of the C2C connector destination creation request.</p>
    /// - On failure, responds with [`SdkError<CreateConnectorDestinationError>`](crate::operation::create_connector_destination::CreateConnectorDestinationError)
    pub fn create_connector_destination(&self) -> crate::operation::create_connector_destination::builders::CreateConnectorDestinationFluentBuilder {
        crate::operation::create_connector_destination::builders::CreateConnectorDestinationFluentBuilder::new(self.handle.clone())
    }
}
