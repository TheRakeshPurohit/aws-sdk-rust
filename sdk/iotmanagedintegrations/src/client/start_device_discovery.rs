// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`StartDeviceDiscovery`](crate::operation::start_device_discovery::builders::StartDeviceDiscoveryFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`discovery_type(DiscoveryType)`](crate::operation::start_device_discovery::builders::StartDeviceDiscoveryFluentBuilder::discovery_type) / [`set_discovery_type(Option<DiscoveryType>)`](crate::operation::start_device_discovery::builders::StartDeviceDiscoveryFluentBuilder::set_discovery_type):<br>required: **true**<br><p>The discovery type supporting the type of device to be discovered in the device discovery task request.</p><br>
    ///   - [`custom_protocol_detail(impl Into<String>, impl Into<String>)`](crate::operation::start_device_discovery::builders::StartDeviceDiscoveryFluentBuilder::custom_protocol_detail) / [`set_custom_protocol_detail(Option<HashMap::<String, String>>)`](crate::operation::start_device_discovery::builders::StartDeviceDiscoveryFluentBuilder::set_custom_protocol_detail):<br>required: **false**<br><p>Additional protocol-specific details required for device discovery, which vary based on the discovery type.</p><note>  <p>For a <code>DiscoveryType</code> of <code>CUSTOM</code>, the string-to-string map must have a key value of <code>Name</code> set to a non-empty-string.</p> </note><br>
    ///   - [`controller_identifier(impl Into<String>)`](crate::operation::start_device_discovery::builders::StartDeviceDiscoveryFluentBuilder::controller_identifier) / [`set_controller_identifier(Option<String>)`](crate::operation::start_device_discovery::builders::StartDeviceDiscoveryFluentBuilder::set_controller_identifier):<br>required: **false**<br><p>The id of the end-user's IoT hub.</p><br>
    ///   - [`connector_association_identifier(impl Into<String>)`](crate::operation::start_device_discovery::builders::StartDeviceDiscoveryFluentBuilder::connector_association_identifier) / [`set_connector_association_identifier(Option<String>)`](crate::operation::start_device_discovery::builders::StartDeviceDiscoveryFluentBuilder::set_connector_association_identifier):<br>required: **false**<br><p>The id of the connector association.</p><br>
    ///   - [`account_association_id(impl Into<String>)`](crate::operation::start_device_discovery::builders::StartDeviceDiscoveryFluentBuilder::account_association_id) / [`set_account_association_id(Option<String>)`](crate::operation::start_device_discovery::builders::StartDeviceDiscoveryFluentBuilder::set_account_association_id):<br>required: **false**<br><p>The identifier of the cloud-to-cloud account association to use for discovery of third-party devices.</p><br>
    ///   - [`authentication_material(impl Into<String>)`](crate::operation::start_device_discovery::builders::StartDeviceDiscoveryFluentBuilder::authentication_material) / [`set_authentication_material(Option<String>)`](crate::operation::start_device_discovery::builders::StartDeviceDiscoveryFluentBuilder::set_authentication_material):<br>required: **false**<br><p>The authentication material required to start the local device discovery job request.</p><br>
    ///   - [`authentication_material_type(DiscoveryAuthMaterialType)`](crate::operation::start_device_discovery::builders::StartDeviceDiscoveryFluentBuilder::authentication_material_type) / [`set_authentication_material_type(Option<DiscoveryAuthMaterialType>)`](crate::operation::start_device_discovery::builders::StartDeviceDiscoveryFluentBuilder::set_authentication_material_type):<br>required: **false**<br><p>The type of authentication material used for device discovery jobs.</p><br>
    ///   - [`client_token(impl Into<String>)`](crate::operation::start_device_discovery::builders::StartDeviceDiscoveryFluentBuilder::client_token) / [`set_client_token(Option<String>)`](crate::operation::start_device_discovery::builders::StartDeviceDiscoveryFluentBuilder::set_client_token):<br>required: **false**<br><p>An idempotency token. If you retry a request that completed successfully initially using the same client token and parameters, then the retry attempt will succeed without performing any further actions.</p><br>
    ///   - [`tags(impl Into<String>, impl Into<String>)`](crate::operation::start_device_discovery::builders::StartDeviceDiscoveryFluentBuilder::tags) / [`set_tags(Option<HashMap::<String, String>>)`](crate::operation::start_device_discovery::builders::StartDeviceDiscoveryFluentBuilder::set_tags):<br>required: **false**<br><p>A set of key/value pairs that are used to manage the device discovery request.</p><br>
    /// - On success, responds with [`StartDeviceDiscoveryOutput`](crate::operation::start_device_discovery::StartDeviceDiscoveryOutput) with field(s):
    ///   - [`id(Option<String>)`](crate::operation::start_device_discovery::StartDeviceDiscoveryOutput::id): <p>The id of the device discovery job request.</p>
    ///   - [`started_at(Option<DateTime>)`](crate::operation::start_device_discovery::StartDeviceDiscoveryOutput::started_at): <p>The timestamp value for the start time of the device discovery.</p>
    /// - On failure, responds with [`SdkError<StartDeviceDiscoveryError>`](crate::operation::start_device_discovery::StartDeviceDiscoveryError)
    pub fn start_device_discovery(&self) -> crate::operation::start_device_discovery::builders::StartDeviceDiscoveryFluentBuilder {
        crate::operation::start_device_discovery::builders::StartDeviceDiscoveryFluentBuilder::new(self.handle.clone())
    }
}
