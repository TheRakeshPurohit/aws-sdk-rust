// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateAccountAssociation`](crate::operation::create_account_association::builders::CreateAccountAssociationFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`client_token(impl Into<String>)`](crate::operation::create_account_association::builders::CreateAccountAssociationFluentBuilder::client_token) / [`set_client_token(Option<String>)`](crate::operation::create_account_association::builders::CreateAccountAssociationFluentBuilder::set_client_token):<br>required: **false**<br><p>An idempotency token. If you retry a request that completed successfully initially using the same client token and parameters, then the retry attempt will succeed without performing any further actions.</p><br>
    ///   - [`connector_destination_id(impl Into<String>)`](crate::operation::create_account_association::builders::CreateAccountAssociationFluentBuilder::connector_destination_id) / [`set_connector_destination_id(Option<String>)`](crate::operation::create_account_association::builders::CreateAccountAssociationFluentBuilder::set_connector_destination_id):<br>required: **true**<br><p>The identifier of the connector destination.</p><br>
    ///   - [`name(impl Into<String>)`](crate::operation::create_account_association::builders::CreateAccountAssociationFluentBuilder::name) / [`set_name(Option<String>)`](crate::operation::create_account_association::builders::CreateAccountAssociationFluentBuilder::set_name):<br>required: **false**<br><p>The name of the destination for the new account association.</p><br>
    ///   - [`description(impl Into<String>)`](crate::operation::create_account_association::builders::CreateAccountAssociationFluentBuilder::description) / [`set_description(Option<String>)`](crate::operation::create_account_association::builders::CreateAccountAssociationFluentBuilder::set_description):<br>required: **false**<br><p>A description of the account association request.</p><br>
    ///   - [`tags(impl Into<String>, impl Into<String>)`](crate::operation::create_account_association::builders::CreateAccountAssociationFluentBuilder::tags) / [`set_tags(Option<HashMap::<String, String>>)`](crate::operation::create_account_association::builders::CreateAccountAssociationFluentBuilder::set_tags):<br>required: **false**<br><p>A set of key/value pairs that are used to manage the account association.</p><br>
    /// - On success, responds with [`CreateAccountAssociationOutput`](crate::operation::create_account_association::CreateAccountAssociationOutput) with field(s):
    ///   - [`o_auth_authorization_url(String)`](crate::operation::create_account_association::CreateAccountAssociationOutput::o_auth_authorization_url): <p>Third-party IoT platform OAuth authorization server URL backed with all the required parameters to perform end-user authentication.</p>
    ///   - [`account_association_id(String)`](crate::operation::create_account_association::CreateAccountAssociationOutput::account_association_id): <p>The identifier for the account association request.</p>
    ///   - [`association_state(AssociationState)`](crate::operation::create_account_association::CreateAccountAssociationOutput::association_state): <p>The current state of the account association request.</p>
    ///   - [`arn(Option<String>)`](crate::operation::create_account_association::CreateAccountAssociationOutput::arn): <p>The Amazon Resource Name (ARN) of the account association.</p>
    /// - On failure, responds with [`SdkError<CreateAccountAssociationError>`](crate::operation::create_account_association::CreateAccountAssociationError)
    pub fn create_account_association(&self) -> crate::operation::create_account_association::builders::CreateAccountAssociationFluentBuilder {
        crate::operation::create_account_association::builders::CreateAccountAssociationFluentBuilder::new(self.handle.clone())
    }
}
