// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ListManagedThings`](crate::operation::list_managed_things::builders::ListManagedThingsFluentBuilder) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::operation::list_managed_things::builders::ListManagedThingsFluentBuilder::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`owner_filter(impl Into<String>)`](crate::operation::list_managed_things::builders::ListManagedThingsFluentBuilder::owner_filter) / [`set_owner_filter(Option<String>)`](crate::operation::list_managed_things::builders::ListManagedThingsFluentBuilder::set_owner_filter):<br>required: **false**<br><p>Filter on device owners when listing managed things.</p><br>
    ///   - [`credential_locker_filter(impl Into<String>)`](crate::operation::list_managed_things::builders::ListManagedThingsFluentBuilder::credential_locker_filter) / [`set_credential_locker_filter(Option<String>)`](crate::operation::list_managed_things::builders::ListManagedThingsFluentBuilder::set_credential_locker_filter):<br>required: **false**<br><p>Filter on a credential locker for a managed thing.</p><br>
    ///   - [`role_filter(Role)`](crate::operation::list_managed_things::builders::ListManagedThingsFluentBuilder::role_filter) / [`set_role_filter(Option<Role>)`](crate::operation::list_managed_things::builders::ListManagedThingsFluentBuilder::set_role_filter):<br>required: **false**<br><p>Filter on the type of device used. This will be the Amazon Web Services hub controller, cloud device, or IoT device.</p><br>
    ///   - [`parent_controller_identifier_filter(impl Into<String>)`](crate::operation::list_managed_things::builders::ListManagedThingsFluentBuilder::parent_controller_identifier_filter) / [`set_parent_controller_identifier_filter(Option<String>)`](crate::operation::list_managed_things::builders::ListManagedThingsFluentBuilder::set_parent_controller_identifier_filter):<br>required: **false**<br><p>Filter on a parent controller id for a managed thing.</p><br>
    ///   - [`connector_policy_id_filter(impl Into<String>)`](crate::operation::list_managed_things::builders::ListManagedThingsFluentBuilder::connector_policy_id_filter) / [`set_connector_policy_id_filter(Option<String>)`](crate::operation::list_managed_things::builders::ListManagedThingsFluentBuilder::set_connector_policy_id_filter):<br>required: **false**<br><p>Filter on a connector policy id for a managed thing.</p><br>
    ///   - [`connector_destination_id_filter(impl Into<String>)`](crate::operation::list_managed_things::builders::ListManagedThingsFluentBuilder::connector_destination_id_filter) / [`set_connector_destination_id_filter(Option<String>)`](crate::operation::list_managed_things::builders::ListManagedThingsFluentBuilder::set_connector_destination_id_filter):<br>required: **false**<br><p>Filter managed things by the connector destination ID they are associated with.</p><br>
    ///   - [`connector_device_id_filter(impl Into<String>)`](crate::operation::list_managed_things::builders::ListManagedThingsFluentBuilder::connector_device_id_filter) / [`set_connector_device_id_filter(Option<String>)`](crate::operation::list_managed_things::builders::ListManagedThingsFluentBuilder::set_connector_device_id_filter):<br>required: **false**<br><p>Filter managed things by the connector device ID they are associated with. When specified, only managed things with this connector device ID will be returned.</p><br>
    ///   - [`serial_number_filter(impl Into<String>)`](crate::operation::list_managed_things::builders::ListManagedThingsFluentBuilder::serial_number_filter) / [`set_serial_number_filter(Option<String>)`](crate::operation::list_managed_things::builders::ListManagedThingsFluentBuilder::set_serial_number_filter):<br>required: **false**<br><p>Filter on the serial number of the device.</p><br>
    ///   - [`provisioning_status_filter(ProvisioningStatus)`](crate::operation::list_managed_things::builders::ListManagedThingsFluentBuilder::provisioning_status_filter) / [`set_provisioning_status_filter(Option<ProvisioningStatus>)`](crate::operation::list_managed_things::builders::ListManagedThingsFluentBuilder::set_provisioning_status_filter):<br>required: **false**<br><p>Filter on the status of the device.</p><br>
    ///   - [`next_token(impl Into<String>)`](crate::operation::list_managed_things::builders::ListManagedThingsFluentBuilder::next_token) / [`set_next_token(Option<String>)`](crate::operation::list_managed_things::builders::ListManagedThingsFluentBuilder::set_next_token):<br>required: **false**<br><p>A token that can be used to retrieve the next set of results.</p><br>
    ///   - [`max_results(i32)`](crate::operation::list_managed_things::builders::ListManagedThingsFluentBuilder::max_results) / [`set_max_results(Option<i32>)`](crate::operation::list_managed_things::builders::ListManagedThingsFluentBuilder::set_max_results):<br>required: **false**<br><p>The maximum number of results to return at one time.</p><br>
    /// - On success, responds with [`ListManagedThingsOutput`](crate::operation::list_managed_things::ListManagedThingsOutput) with field(s):
    ///   - [`items(Option<Vec::<ManagedThingSummary>>)`](crate::operation::list_managed_things::ListManagedThingsOutput::items): <p>The list of managed things.</p>
    ///   - [`next_token(Option<String>)`](crate::operation::list_managed_things::ListManagedThingsOutput::next_token): <p>A token that can be used to retrieve the next set of results.</p>
    /// - On failure, responds with [`SdkError<ListManagedThingsError>`](crate::operation::list_managed_things::ListManagedThingsError)
    pub fn list_managed_things(&self) -> crate::operation::list_managed_things::builders::ListManagedThingsFluentBuilder {
        crate::operation::list_managed_things::builders::ListManagedThingsFluentBuilder::new(self.handle.clone())
    }
}
