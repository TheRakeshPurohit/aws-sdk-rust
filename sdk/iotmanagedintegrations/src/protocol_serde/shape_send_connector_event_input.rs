// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_send_connector_event_input_input(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::operation::send_connector_event::SendConnectorEventInput,
) -> ::std::result::Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    if let Some(var_1) = &input.connector_device_id {
        object.key("ConnectorDeviceId").string(var_1.as_str());
    }
    if let Some(var_2) = &input.device_discovery_id {
        object.key("DeviceDiscoveryId").string(var_2.as_str());
    }
    if let Some(var_3) = &input.devices {
        let mut array_4 = object.key("Devices").start_array();
        for item_5 in var_3 {
            {
                #[allow(unused_mut)]
                let mut object_6 = array_4.value().start_object();
                crate::protocol_serde::shape_device::ser_device(&mut object_6, item_5)?;
                object_6.finish();
            }
        }
        array_4.finish();
    }
    if let Some(var_7) = &input.matter_endpoint {
        #[allow(unused_mut)]
        let mut object_8 = object.key("MatterEndpoint").start_object();
        crate::protocol_serde::shape_matter_endpoint::ser_matter_endpoint(&mut object_8, var_7)?;
        object_8.finish();
    }
    if let Some(var_9) = &input.message {
        object.key("Message").string(var_9.as_str());
    }
    if let Some(var_10) = &input.operation {
        object.key("Operation").string(var_10.as_str());
    }
    if let Some(var_11) = &input.operation_version {
        object.key("OperationVersion").string(var_11.as_str());
    }
    if let Some(var_12) = &input.status_code {
        object.key("StatusCode").number(
            #[allow(clippy::useless_conversion)]
            ::aws_smithy_types::Number::NegInt((*var_12).into()),
        );
    }
    if let Some(var_13) = &input.trace_id {
        object.key("TraceId").string(var_13.as_str());
    }
    if let Some(var_14) = &input.user_id {
        object.key("UserId").string(var_14.as_str());
    }
    Ok(())
}
