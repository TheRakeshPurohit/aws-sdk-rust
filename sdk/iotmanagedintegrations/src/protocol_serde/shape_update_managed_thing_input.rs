// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_update_managed_thing_input_input(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::operation::update_managed_thing::UpdateManagedThingInput,
) -> ::std::result::Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    if let Some(var_1) = &input.brand {
        object.key("Brand").string(var_1.as_str());
    }
    if let Some(var_2) = &input.capabilities {
        object.key("Capabilities").string(var_2.as_str());
    }
    if let Some(var_3) = &input.capability_report {
        #[allow(unused_mut)]
        let mut object_4 = object.key("CapabilityReport").start_object();
        crate::protocol_serde::shape_capability_report::ser_capability_report(&mut object_4, var_3)?;
        object_4.finish();
    }
    if let Some(var_5) = &input.capability_schemas {
        let mut array_6 = object.key("CapabilitySchemas").start_array();
        for item_7 in var_5 {
            {
                #[allow(unused_mut)]
                let mut object_8 = array_6.value().start_object();
                crate::protocol_serde::shape_capability_schema_item::ser_capability_schema_item(&mut object_8, item_7)?;
                object_8.finish();
            }
        }
        array_6.finish();
    }
    if let Some(var_9) = &input.classification {
        object.key("Classification").string(var_9.as_str());
    }
    if let Some(var_10) = &input.credential_locker_id {
        object.key("CredentialLockerId").string(var_10.as_str());
    }
    if let Some(var_11) = &input.hub_network_mode {
        object.key("HubNetworkMode").string(var_11.as_str());
    }
    if let Some(var_12) = &input.meta_data {
        #[allow(unused_mut)]
        let mut object_13 = object.key("MetaData").start_object();
        for (key_14, value_15) in var_12 {
            {
                object_13.key(key_14.as_str()).string(value_15.as_str());
            }
        }
        object_13.finish();
    }
    if let Some(var_16) = &input.model {
        object.key("Model").string(var_16.as_str());
    }
    if let Some(var_17) = &input.name {
        object.key("Name").string(var_17.as_str());
    }
    if let Some(var_18) = &input.owner {
        object.key("Owner").string(var_18.as_str());
    }
    if let Some(var_19) = &input.serial_number {
        object.key("SerialNumber").string(var_19.as_str());
    }
    Ok(())
}
