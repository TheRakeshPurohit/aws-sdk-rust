// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`RebootDbNode`](crate::operation::reboot_db_node::builders::RebootDbNodeFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`cloud_vm_cluster_id(impl Into<String>)`](crate::operation::reboot_db_node::builders::RebootDbNodeFluentBuilder::cloud_vm_cluster_id) / [`set_cloud_vm_cluster_id(Option<String>)`](crate::operation::reboot_db_node::builders::RebootDbNodeFluentBuilder::set_cloud_vm_cluster_id):<br>required: **true**<br><p>The unique identifier of the VM cluster that contains the DB node to reboot.</p><br>
    ///   - [`db_node_id(impl Into<String>)`](crate::operation::reboot_db_node::builders::RebootDbNodeFluentBuilder::db_node_id) / [`set_db_node_id(Option<String>)`](crate::operation::reboot_db_node::builders::RebootDbNodeFluentBuilder::set_db_node_id):<br>required: **true**<br><p>The unique identifier of the DB node to reboot.</p><br>
    /// - On success, responds with [`RebootDbNodeOutput`](crate::operation::reboot_db_node::RebootDbNodeOutput) with field(s):
    ///   - [`db_node_id(String)`](crate::operation::reboot_db_node::RebootDbNodeOutput::db_node_id): <p>The unique identifier of the DB node that was rebooted.</p>
    ///   - [`status(Option<DbNodeResourceStatus>)`](crate::operation::reboot_db_node::RebootDbNodeOutput::status): <p>The current status of the DB node after the reboot operation.</p>
    ///   - [`status_reason(Option<String>)`](crate::operation::reboot_db_node::RebootDbNodeOutput::status_reason): <p>Additional information about the status of the DB node after the reboot operation.</p>
    /// - On failure, responds with [`SdkError<RebootDbNodeError>`](crate::operation::reboot_db_node::RebootDbNodeError)
    pub fn reboot_db_node(&self) -> crate::operation::reboot_db_node::builders::RebootDbNodeFluentBuilder {
        crate::operation::reboot_db_node::builders::RebootDbNodeFluentBuilder::new(self.handle.clone())
    }
}
