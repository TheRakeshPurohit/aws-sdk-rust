// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateCloudVmCluster`](crate::operation::create_cloud_vm_cluster::builders::CreateCloudVmClusterFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`cloud_exadata_infrastructure_id(impl Into<String>)`](crate::operation::create_cloud_vm_cluster::builders::CreateCloudVmClusterFluentBuilder::cloud_exadata_infrastructure_id) / [`set_cloud_exadata_infrastructure_id(Option<String>)`](crate::operation::create_cloud_vm_cluster::builders::CreateCloudVmClusterFluentBuilder::set_cloud_exadata_infrastructure_id):<br>required: **true**<br><p>The unique identifier of the Exadata infrastructure for this VM cluster.</p><br>
    ///   - [`cpu_core_count(i32)`](crate::operation::create_cloud_vm_cluster::builders::CreateCloudVmClusterFluentBuilder::cpu_core_count) / [`set_cpu_core_count(Option<i32>)`](crate::operation::create_cloud_vm_cluster::builders::CreateCloudVmClusterFluentBuilder::set_cpu_core_count):<br>required: **true**<br><p>The number of CPU cores to enable on the VM cluster.</p><br>
    ///   - [`display_name(impl Into<String>)`](crate::operation::create_cloud_vm_cluster::builders::CreateCloudVmClusterFluentBuilder::display_name) / [`set_display_name(Option<String>)`](crate::operation::create_cloud_vm_cluster::builders::CreateCloudVmClusterFluentBuilder::set_display_name):<br>required: **true**<br><p>A user-friendly name for the VM cluster.</p><br>
    ///   - [`gi_version(impl Into<String>)`](crate::operation::create_cloud_vm_cluster::builders::CreateCloudVmClusterFluentBuilder::gi_version) / [`set_gi_version(Option<String>)`](crate::operation::create_cloud_vm_cluster::builders::CreateCloudVmClusterFluentBuilder::set_gi_version):<br>required: **true**<br><p>A valid software version of Oracle Grid Infrastructure (GI). To get the list of valid values, use the <code>ListGiVersions</code> operation and specify the shape of the Exadata infrastructure.</p> <p>Example: <code>19.0.0.0</code></p><br>
    ///   - [`hostname(impl Into<String>)`](crate::operation::create_cloud_vm_cluster::builders::CreateCloudVmClusterFluentBuilder::hostname) / [`set_hostname(Option<String>)`](crate::operation::create_cloud_vm_cluster::builders::CreateCloudVmClusterFluentBuilder::set_hostname):<br>required: **true**<br><p>The host name for the VM cluster.</p> <p>Constraints:</p> <ul>  <li>   <p>Can't be "localhost" or "hostname".</p></li>  <li>   <p>Can't contain "-version".</p></li>  <li>   <p>The maximum length of the combined hostname and domain is 63 characters.</p></li>  <li>   <p>The hostname must be unique within the subnet.</p></li> </ul><br>
    ///   - [`ssh_public_keys(impl Into<String>)`](crate::operation::create_cloud_vm_cluster::builders::CreateCloudVmClusterFluentBuilder::ssh_public_keys) / [`set_ssh_public_keys(Option<Vec::<String>>)`](crate::operation::create_cloud_vm_cluster::builders::CreateCloudVmClusterFluentBuilder::set_ssh_public_keys):<br>required: **true**<br><p>The public key portion of one or more key pairs used for SSH access to the VM cluster.</p><br>
    ///   - [`odb_network_id(impl Into<String>)`](crate::operation::create_cloud_vm_cluster::builders::CreateCloudVmClusterFluentBuilder::odb_network_id) / [`set_odb_network_id(Option<String>)`](crate::operation::create_cloud_vm_cluster::builders::CreateCloudVmClusterFluentBuilder::set_odb_network_id):<br>required: **true**<br><p>The unique identifier of the ODB network for the VM cluster.</p><br>
    ///   - [`cluster_name(impl Into<String>)`](crate::operation::create_cloud_vm_cluster::builders::CreateCloudVmClusterFluentBuilder::cluster_name) / [`set_cluster_name(Option<String>)`](crate::operation::create_cloud_vm_cluster::builders::CreateCloudVmClusterFluentBuilder::set_cluster_name):<br>required: **false**<br><p>A name for the Grid Infrastructure cluster. The name isn't case sensitive.</p><br>
    ///   - [`data_collection_options(DataCollectionOptions)`](crate::operation::create_cloud_vm_cluster::builders::CreateCloudVmClusterFluentBuilder::data_collection_options) / [`set_data_collection_options(Option<DataCollectionOptions>)`](crate::operation::create_cloud_vm_cluster::builders::CreateCloudVmClusterFluentBuilder::set_data_collection_options):<br>required: **false**<br><p>The set of preferences for the various diagnostic collection options for the VM cluster.</p><br>
    ///   - [`data_storage_size_in_tbs(f64)`](crate::operation::create_cloud_vm_cluster::builders::CreateCloudVmClusterFluentBuilder::data_storage_size_in_tbs) / [`set_data_storage_size_in_tbs(Option<f64>)`](crate::operation::create_cloud_vm_cluster::builders::CreateCloudVmClusterFluentBuilder::set_data_storage_size_in_tbs):<br>required: **false**<br><p>The size of the data disk group, in terabytes (TBs), to allocate for the VM cluster.</p><br>
    ///   - [`db_node_storage_size_in_gbs(i32)`](crate::operation::create_cloud_vm_cluster::builders::CreateCloudVmClusterFluentBuilder::db_node_storage_size_in_gbs) / [`set_db_node_storage_size_in_gbs(Option<i32>)`](crate::operation::create_cloud_vm_cluster::builders::CreateCloudVmClusterFluentBuilder::set_db_node_storage_size_in_gbs):<br>required: **false**<br><p>The amount of local node storage, in gigabytes (GBs), to allocate for the VM cluster.</p><br>
    ///   - [`db_servers(impl Into<String>)`](crate::operation::create_cloud_vm_cluster::builders::CreateCloudVmClusterFluentBuilder::db_servers) / [`set_db_servers(Option<Vec::<String>>)`](crate::operation::create_cloud_vm_cluster::builders::CreateCloudVmClusterFluentBuilder::set_db_servers):<br>required: **false**<br><p>The list of database servers for the VM cluster.</p><br>
    ///   - [`tags(impl Into<String>, impl Into<String>)`](crate::operation::create_cloud_vm_cluster::builders::CreateCloudVmClusterFluentBuilder::tags) / [`set_tags(Option<HashMap::<String, String>>)`](crate::operation::create_cloud_vm_cluster::builders::CreateCloudVmClusterFluentBuilder::set_tags):<br>required: **false**<br><p>The list of resource tags to apply to the VM cluster.</p><br>
    ///   - [`is_local_backup_enabled(bool)`](crate::operation::create_cloud_vm_cluster::builders::CreateCloudVmClusterFluentBuilder::is_local_backup_enabled) / [`set_is_local_backup_enabled(Option<bool>)`](crate::operation::create_cloud_vm_cluster::builders::CreateCloudVmClusterFluentBuilder::set_is_local_backup_enabled):<br>required: **false**<br><p>Specifies whether to enable database backups to local Exadata storage for the VM cluster.</p><br>
    ///   - [`is_sparse_diskgroup_enabled(bool)`](crate::operation::create_cloud_vm_cluster::builders::CreateCloudVmClusterFluentBuilder::is_sparse_diskgroup_enabled) / [`set_is_sparse_diskgroup_enabled(Option<bool>)`](crate::operation::create_cloud_vm_cluster::builders::CreateCloudVmClusterFluentBuilder::set_is_sparse_diskgroup_enabled):<br>required: **false**<br><p>Specifies whether to create a sparse disk group for the VM cluster.</p><br>
    ///   - [`license_model(LicenseModel)`](crate::operation::create_cloud_vm_cluster::builders::CreateCloudVmClusterFluentBuilder::license_model) / [`set_license_model(Option<LicenseModel>)`](crate::operation::create_cloud_vm_cluster::builders::CreateCloudVmClusterFluentBuilder::set_license_model):<br>required: **false**<br><p>The Oracle license model to apply to the VM cluster.</p> <p>Default: <code>LICENSE_INCLUDED</code></p><br>
    ///   - [`memory_size_in_gbs(i32)`](crate::operation::create_cloud_vm_cluster::builders::CreateCloudVmClusterFluentBuilder::memory_size_in_gbs) / [`set_memory_size_in_gbs(Option<i32>)`](crate::operation::create_cloud_vm_cluster::builders::CreateCloudVmClusterFluentBuilder::set_memory_size_in_gbs):<br>required: **false**<br><p>The amount of memory, in gigabytes (GBs), to allocate for the VM cluster.</p><br>
    ///   - [`system_version(impl Into<String>)`](crate::operation::create_cloud_vm_cluster::builders::CreateCloudVmClusterFluentBuilder::system_version) / [`set_system_version(Option<String>)`](crate::operation::create_cloud_vm_cluster::builders::CreateCloudVmClusterFluentBuilder::set_system_version):<br>required: **false**<br><p>The version of the operating system of the image for the VM cluster.</p><br>
    ///   - [`time_zone(impl Into<String>)`](crate::operation::create_cloud_vm_cluster::builders::CreateCloudVmClusterFluentBuilder::time_zone) / [`set_time_zone(Option<String>)`](crate::operation::create_cloud_vm_cluster::builders::CreateCloudVmClusterFluentBuilder::set_time_zone):<br>required: **false**<br><p>The time zone for the VM cluster. For a list of valid values for time zone, you can check the options in the console.</p> <p>Default: UTC</p><br>
    ///   - [`client_token(impl Into<String>)`](crate::operation::create_cloud_vm_cluster::builders::CreateCloudVmClusterFluentBuilder::client_token) / [`set_client_token(Option<String>)`](crate::operation::create_cloud_vm_cluster::builders::CreateCloudVmClusterFluentBuilder::set_client_token):<br>required: **false**<br><p>A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. If you don't specify a client token, the Amazon Web Services SDK automatically generates a client token and uses it for the request to ensure idempotency. The client token is valid for up to 24 hours after it's first used.</p><br>
    ///   - [`scan_listener_port_tcp(i32)`](crate::operation::create_cloud_vm_cluster::builders::CreateCloudVmClusterFluentBuilder::scan_listener_port_tcp) / [`set_scan_listener_port_tcp(Option<i32>)`](crate::operation::create_cloud_vm_cluster::builders::CreateCloudVmClusterFluentBuilder::set_scan_listener_port_tcp):<br>required: **false**<br><p>The port number for TCP connections to the single client access name (SCAN) listener.</p> <p>Valid values: <code>1024â€“8999</code> with the following exceptions: <code>2484</code>, <code>6100</code>, <code>6200</code>, <code>7060</code>, <code>7070</code>, <code>7085</code>, and <code>7879</code></p> <p>Default: <code>1521</code></p><br>
    /// - On success, responds with [`CreateCloudVmClusterOutput`](crate::operation::create_cloud_vm_cluster::CreateCloudVmClusterOutput) with field(s):
    ///   - [`display_name(Option<String>)`](crate::operation::create_cloud_vm_cluster::CreateCloudVmClusterOutput::display_name): <p>The user-friendly name for the VM cluster.</p>
    ///   - [`status(Option<ResourceStatus>)`](crate::operation::create_cloud_vm_cluster::CreateCloudVmClusterOutput::status): <p>The current status of the VM cluster.</p>
    ///   - [`status_reason(Option<String>)`](crate::operation::create_cloud_vm_cluster::CreateCloudVmClusterOutput::status_reason): <p>Additional information about the status of the VM cluster.</p>
    ///   - [`cloud_vm_cluster_id(String)`](crate::operation::create_cloud_vm_cluster::CreateCloudVmClusterOutput::cloud_vm_cluster_id): <p>The unique identifier for the VM cluster.</p>
    /// - On failure, responds with [`SdkError<CreateCloudVmClusterError>`](crate::operation::create_cloud_vm_cluster::CreateCloudVmClusterError)
    pub fn create_cloud_vm_cluster(&self) -> crate::operation::create_cloud_vm_cluster::builders::CreateCloudVmClusterFluentBuilder {
        crate::operation::create_cloud_vm_cluster::builders::CreateCloudVmClusterFluentBuilder::new(self.handle.clone())
    }
}
