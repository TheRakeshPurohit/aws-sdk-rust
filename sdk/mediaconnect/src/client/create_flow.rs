// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateFlow`](crate::operation::create_flow::builders::CreateFlowFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`availability_zone(impl Into<String>)`](crate::operation::create_flow::builders::CreateFlowFluentBuilder::availability_zone) / [`set_availability_zone(Option<String>)`](crate::operation::create_flow::builders::CreateFlowFluentBuilder::set_availability_zone):<br>required: **false**<br><p>The Availability Zone that you want to create the flow in. These options are limited to the Availability Zones within the current Amazon Web Services Region.</p><br>
    ///   - [`entitlements(GrantEntitlementRequest)`](crate::operation::create_flow::builders::CreateFlowFluentBuilder::entitlements) / [`set_entitlements(Option<Vec::<GrantEntitlementRequest>>)`](crate::operation::create_flow::builders::CreateFlowFluentBuilder::set_entitlements):<br>required: **false**<br><p>The entitlements that you want to grant on a flow.</p><br>
    ///   - [`media_streams(AddMediaStreamRequest)`](crate::operation::create_flow::builders::CreateFlowFluentBuilder::media_streams) / [`set_media_streams(Option<Vec::<AddMediaStreamRequest>>)`](crate::operation::create_flow::builders::CreateFlowFluentBuilder::set_media_streams):<br>required: **false**<br><p>The media streams that you want to add to the flow. You can associate these media streams with sources and outputs on the flow.</p><br>
    ///   - [`name(impl Into<String>)`](crate::operation::create_flow::builders::CreateFlowFluentBuilder::name) / [`set_name(Option<String>)`](crate::operation::create_flow::builders::CreateFlowFluentBuilder::set_name):<br>required: **true**<br><p>The name of the flow.</p><br>
    ///   - [`outputs(AddOutputRequest)`](crate::operation::create_flow::builders::CreateFlowFluentBuilder::outputs) / [`set_outputs(Option<Vec::<AddOutputRequest>>)`](crate::operation::create_flow::builders::CreateFlowFluentBuilder::set_outputs):<br>required: **false**<br><p>The outputs that you want to add to this flow.</p><br>
    ///   - [`source(SetSourceRequest)`](crate::operation::create_flow::builders::CreateFlowFluentBuilder::source) / [`set_source(Option<SetSourceRequest>)`](crate::operation::create_flow::builders::CreateFlowFluentBuilder::set_source):<br>required: **false**<br><p>The settings for the source that you want to use for the new flow.</p><br>
    ///   - [`source_failover_config(FailoverConfig)`](crate::operation::create_flow::builders::CreateFlowFluentBuilder::source_failover_config) / [`set_source_failover_config(Option<FailoverConfig>)`](crate::operation::create_flow::builders::CreateFlowFluentBuilder::set_source_failover_config):<br>required: **false**<br><p>The settings for source failover.</p><br>
    ///   - [`sources(SetSourceRequest)`](crate::operation::create_flow::builders::CreateFlowFluentBuilder::sources) / [`set_sources(Option<Vec::<SetSourceRequest>>)`](crate::operation::create_flow::builders::CreateFlowFluentBuilder::set_sources):<br>required: **false**<br><p>The sources that are assigned to the flow.</p><br>
    ///   - [`vpc_interfaces(VpcInterfaceRequest)`](crate::operation::create_flow::builders::CreateFlowFluentBuilder::vpc_interfaces) / [`set_vpc_interfaces(Option<Vec::<VpcInterfaceRequest>>)`](crate::operation::create_flow::builders::CreateFlowFluentBuilder::set_vpc_interfaces):<br>required: **false**<br><p>The VPC interfaces you want on the flow.</p><br>
    ///   - [`maintenance(AddMaintenance)`](crate::operation::create_flow::builders::CreateFlowFluentBuilder::maintenance) / [`set_maintenance(Option<AddMaintenance>)`](crate::operation::create_flow::builders::CreateFlowFluentBuilder::set_maintenance):<br>required: **false**<br><p>The maintenance settings you want to use for the flow.</p><br>
    ///   - [`source_monitoring_config(MonitoringConfig)`](crate::operation::create_flow::builders::CreateFlowFluentBuilder::source_monitoring_config) / [`set_source_monitoring_config(Option<MonitoringConfig>)`](crate::operation::create_flow::builders::CreateFlowFluentBuilder::set_source_monitoring_config):<br>required: **false**<br><p>The settings for source monitoring.</p><br>
    ///   - [`flow_size(FlowSize)`](crate::operation::create_flow::builders::CreateFlowFluentBuilder::flow_size) / [`set_flow_size(Option<FlowSize>)`](crate::operation::create_flow::builders::CreateFlowFluentBuilder::set_flow_size):<br>required: **false**<br><p>Determines the processing capacity and feature set of the flow. Set this optional parameter to <code>LARGE</code> if you want to enable NDI outputs on the flow.</p><br>
    ///   - [`ndi_config(NdiConfig)`](crate::operation::create_flow::builders::CreateFlowFluentBuilder::ndi_config) / [`set_ndi_config(Option<NdiConfig>)`](crate::operation::create_flow::builders::CreateFlowFluentBuilder::set_ndi_config):<br>required: **false**<br><p>Specifies the configuration settings for NDI outputs. Required when the flow includes NDI outputs.</p><br>
    ///   - [`flow_tags(impl Into<String>, impl Into<String>)`](crate::operation::create_flow::builders::CreateFlowFluentBuilder::flow_tags) / [`set_flow_tags(Option<HashMap::<String, String>>)`](crate::operation::create_flow::builders::CreateFlowFluentBuilder::set_flow_tags):<br>required: **false**<br><p>The key-value pairs that can be used to tag and organize the flow.</p><br>
    /// - On success, responds with [`CreateFlowOutput`](crate::operation::create_flow::CreateFlowOutput) with field(s):
    ///   - [`flow(Option<Flow>)`](crate::operation::create_flow::CreateFlowOutput::flow): <p>The flow that you created.</p>
    /// - On failure, responds with [`SdkError<CreateFlowError>`](crate::operation::create_flow::CreateFlowError)
    pub fn create_flow(&self) -> crate::operation::create_flow::builders::CreateFlowFluentBuilder {
        crate::operation::create_flow::builders::CreateFlowFluentBuilder::new(self.handle.clone())
    }
}
