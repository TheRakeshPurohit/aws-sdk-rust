// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct UpdateCentralizationRuleForOrganizationInput {
    /// <p>The identifier (name or ARN) of the organization centralization rule to update.</p>
    pub rule_identifier: ::std::option::Option<::std::string::String>,
    /// <p>The configuration details for the organization-wide centralization rule, including the source configuration and the destination configuration to centralize telemetry data across the organization.</p>
    pub rule: ::std::option::Option<crate::types::CentralizationRule>,
}
impl UpdateCentralizationRuleForOrganizationInput {
    /// <p>The identifier (name or ARN) of the organization centralization rule to update.</p>
    pub fn rule_identifier(&self) -> ::std::option::Option<&str> {
        self.rule_identifier.as_deref()
    }
    /// <p>The configuration details for the organization-wide centralization rule, including the source configuration and the destination configuration to centralize telemetry data across the organization.</p>
    pub fn rule(&self) -> ::std::option::Option<&crate::types::CentralizationRule> {
        self.rule.as_ref()
    }
}
impl UpdateCentralizationRuleForOrganizationInput {
    /// Creates a new builder-style object to manufacture [`UpdateCentralizationRuleForOrganizationInput`](crate::operation::update_centralization_rule_for_organization::UpdateCentralizationRuleForOrganizationInput).
    pub fn builder() -> crate::operation::update_centralization_rule_for_organization::builders::UpdateCentralizationRuleForOrganizationInputBuilder {
        crate::operation::update_centralization_rule_for_organization::builders::UpdateCentralizationRuleForOrganizationInputBuilder::default()
    }
}

/// A builder for [`UpdateCentralizationRuleForOrganizationInput`](crate::operation::update_centralization_rule_for_organization::UpdateCentralizationRuleForOrganizationInput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct UpdateCentralizationRuleForOrganizationInputBuilder {
    pub(crate) rule_identifier: ::std::option::Option<::std::string::String>,
    pub(crate) rule: ::std::option::Option<crate::types::CentralizationRule>,
}
impl UpdateCentralizationRuleForOrganizationInputBuilder {
    /// <p>The identifier (name or ARN) of the organization centralization rule to update.</p>
    /// This field is required.
    pub fn rule_identifier(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.rule_identifier = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The identifier (name or ARN) of the organization centralization rule to update.</p>
    pub fn set_rule_identifier(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.rule_identifier = input;
        self
    }
    /// <p>The identifier (name or ARN) of the organization centralization rule to update.</p>
    pub fn get_rule_identifier(&self) -> &::std::option::Option<::std::string::String> {
        &self.rule_identifier
    }
    /// <p>The configuration details for the organization-wide centralization rule, including the source configuration and the destination configuration to centralize telemetry data across the organization.</p>
    /// This field is required.
    pub fn rule(mut self, input: crate::types::CentralizationRule) -> Self {
        self.rule = ::std::option::Option::Some(input);
        self
    }
    /// <p>The configuration details for the organization-wide centralization rule, including the source configuration and the destination configuration to centralize telemetry data across the organization.</p>
    pub fn set_rule(mut self, input: ::std::option::Option<crate::types::CentralizationRule>) -> Self {
        self.rule = input;
        self
    }
    /// <p>The configuration details for the organization-wide centralization rule, including the source configuration and the destination configuration to centralize telemetry data across the organization.</p>
    pub fn get_rule(&self) -> &::std::option::Option<crate::types::CentralizationRule> {
        &self.rule
    }
    /// Consumes the builder and constructs a [`UpdateCentralizationRuleForOrganizationInput`](crate::operation::update_centralization_rule_for_organization::UpdateCentralizationRuleForOrganizationInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::update_centralization_rule_for_organization::UpdateCentralizationRuleForOrganizationInput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(
            crate::operation::update_centralization_rule_for_organization::UpdateCentralizationRuleForOrganizationInput {
                rule_identifier: self.rule_identifier,
                rule: self.rule,
            },
        )
    }
}
