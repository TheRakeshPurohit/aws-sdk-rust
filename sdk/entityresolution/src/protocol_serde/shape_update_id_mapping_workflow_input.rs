// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_update_id_mapping_workflow_input_input(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::operation::update_id_mapping_workflow::UpdateIdMappingWorkflowInput,
) -> ::std::result::Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    if let Some(var_1) = &input.description {
        object.key("description").string(var_1.as_str());
    }
    if let Some(var_2) = &input.id_mapping_techniques {
        #[allow(unused_mut)]
        let mut object_3 = object.key("idMappingTechniques").start_object();
        crate::protocol_serde::shape_id_mapping_techniques::ser_id_mapping_techniques(&mut object_3, var_2)?;
        object_3.finish();
    }
    if let Some(var_4) = &input.incremental_run_config {
        #[allow(unused_mut)]
        let mut object_5 = object.key("incrementalRunConfig").start_object();
        crate::protocol_serde::shape_id_mapping_incremental_run_config::ser_id_mapping_incremental_run_config(&mut object_5, var_4)?;
        object_5.finish();
    }
    if let Some(var_6) = &input.input_source_config {
        let mut array_7 = object.key("inputSourceConfig").start_array();
        for item_8 in var_6 {
            {
                #[allow(unused_mut)]
                let mut object_9 = array_7.value().start_object();
                crate::protocol_serde::shape_id_mapping_workflow_input_source::ser_id_mapping_workflow_input_source(&mut object_9, item_8)?;
                object_9.finish();
            }
        }
        array_7.finish();
    }
    if let Some(var_10) = &input.output_source_config {
        let mut array_11 = object.key("outputSourceConfig").start_array();
        for item_12 in var_10 {
            {
                #[allow(unused_mut)]
                let mut object_13 = array_11.value().start_object();
                crate::protocol_serde::shape_id_mapping_workflow_output_source::ser_id_mapping_workflow_output_source(&mut object_13, item_12)?;
                object_13.finish();
            }
        }
        array_11.finish();
    }
    if let Some(var_14) = &input.role_arn {
        object.key("roleArn").string(var_14.as_str());
    }
    Ok(())
}
