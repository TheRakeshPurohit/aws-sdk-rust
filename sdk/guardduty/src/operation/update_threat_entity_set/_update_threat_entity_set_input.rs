// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct UpdateThreatEntitySetInput {
    /// <p>The unique ID of the GuardDuty detector associated with the threat entity set that you want to update.</p>
    /// <p>To find the <code>detectorId</code> in the current Region, see the Settings page in the GuardDuty console, or run the <a href="https://docs.aws.amazon.com/guardduty/latest/APIReference/API_ListDetectors.html">ListDetectors</a> API.</p>
    pub detector_id: ::std::option::Option<::std::string::String>,
    /// <p>The ID returned by GuardDuty after updating the threat entity set resource.</p>
    pub threat_entity_set_id: ::std::option::Option<::std::string::String>,
    /// <p>A user-friendly name to identify the trusted entity set.</p>
    /// <p>The name of your list can include lowercase letters, uppercase letters, numbers, dash (-), and underscore (_).</p>
    pub name: ::std::option::Option<::std::string::String>,
    /// <p>The URI of the file that contains the trusted entity set.</p>
    pub location: ::std::option::Option<::std::string::String>,
    /// <p>The Amazon Web Services account ID that owns the Amazon S3 bucket specified in the <b>location</b> parameter.</p>
    pub expected_bucket_owner: ::std::option::Option<::std::string::String>,
    /// <p>A boolean value that indicates whether GuardDuty is to start using this updated threat entity set. After you update an entity set, you will need to activate it again. It might take up to 15 minutes for the updated entity set to be effective.</p>
    pub activate: ::std::option::Option<bool>,
}
impl UpdateThreatEntitySetInput {
    /// <p>The unique ID of the GuardDuty detector associated with the threat entity set that you want to update.</p>
    /// <p>To find the <code>detectorId</code> in the current Region, see the Settings page in the GuardDuty console, or run the <a href="https://docs.aws.amazon.com/guardduty/latest/APIReference/API_ListDetectors.html">ListDetectors</a> API.</p>
    pub fn detector_id(&self) -> ::std::option::Option<&str> {
        self.detector_id.as_deref()
    }
    /// <p>The ID returned by GuardDuty after updating the threat entity set resource.</p>
    pub fn threat_entity_set_id(&self) -> ::std::option::Option<&str> {
        self.threat_entity_set_id.as_deref()
    }
    /// <p>A user-friendly name to identify the trusted entity set.</p>
    /// <p>The name of your list can include lowercase letters, uppercase letters, numbers, dash (-), and underscore (_).</p>
    pub fn name(&self) -> ::std::option::Option<&str> {
        self.name.as_deref()
    }
    /// <p>The URI of the file that contains the trusted entity set.</p>
    pub fn location(&self) -> ::std::option::Option<&str> {
        self.location.as_deref()
    }
    /// <p>The Amazon Web Services account ID that owns the Amazon S3 bucket specified in the <b>location</b> parameter.</p>
    pub fn expected_bucket_owner(&self) -> ::std::option::Option<&str> {
        self.expected_bucket_owner.as_deref()
    }
    /// <p>A boolean value that indicates whether GuardDuty is to start using this updated threat entity set. After you update an entity set, you will need to activate it again. It might take up to 15 minutes for the updated entity set to be effective.</p>
    pub fn activate(&self) -> ::std::option::Option<bool> {
        self.activate
    }
}
impl UpdateThreatEntitySetInput {
    /// Creates a new builder-style object to manufacture [`UpdateThreatEntitySetInput`](crate::operation::update_threat_entity_set::UpdateThreatEntitySetInput).
    pub fn builder() -> crate::operation::update_threat_entity_set::builders::UpdateThreatEntitySetInputBuilder {
        crate::operation::update_threat_entity_set::builders::UpdateThreatEntitySetInputBuilder::default()
    }
}

/// A builder for [`UpdateThreatEntitySetInput`](crate::operation::update_threat_entity_set::UpdateThreatEntitySetInput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct UpdateThreatEntitySetInputBuilder {
    pub(crate) detector_id: ::std::option::Option<::std::string::String>,
    pub(crate) threat_entity_set_id: ::std::option::Option<::std::string::String>,
    pub(crate) name: ::std::option::Option<::std::string::String>,
    pub(crate) location: ::std::option::Option<::std::string::String>,
    pub(crate) expected_bucket_owner: ::std::option::Option<::std::string::String>,
    pub(crate) activate: ::std::option::Option<bool>,
}
impl UpdateThreatEntitySetInputBuilder {
    /// <p>The unique ID of the GuardDuty detector associated with the threat entity set that you want to update.</p>
    /// <p>To find the <code>detectorId</code> in the current Region, see the Settings page in the GuardDuty console, or run the <a href="https://docs.aws.amazon.com/guardduty/latest/APIReference/API_ListDetectors.html">ListDetectors</a> API.</p>
    /// This field is required.
    pub fn detector_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.detector_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The unique ID of the GuardDuty detector associated with the threat entity set that you want to update.</p>
    /// <p>To find the <code>detectorId</code> in the current Region, see the Settings page in the GuardDuty console, or run the <a href="https://docs.aws.amazon.com/guardduty/latest/APIReference/API_ListDetectors.html">ListDetectors</a> API.</p>
    pub fn set_detector_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.detector_id = input;
        self
    }
    /// <p>The unique ID of the GuardDuty detector associated with the threat entity set that you want to update.</p>
    /// <p>To find the <code>detectorId</code> in the current Region, see the Settings page in the GuardDuty console, or run the <a href="https://docs.aws.amazon.com/guardduty/latest/APIReference/API_ListDetectors.html">ListDetectors</a> API.</p>
    pub fn get_detector_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.detector_id
    }
    /// <p>The ID returned by GuardDuty after updating the threat entity set resource.</p>
    /// This field is required.
    pub fn threat_entity_set_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.threat_entity_set_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The ID returned by GuardDuty after updating the threat entity set resource.</p>
    pub fn set_threat_entity_set_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.threat_entity_set_id = input;
        self
    }
    /// <p>The ID returned by GuardDuty after updating the threat entity set resource.</p>
    pub fn get_threat_entity_set_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.threat_entity_set_id
    }
    /// <p>A user-friendly name to identify the trusted entity set.</p>
    /// <p>The name of your list can include lowercase letters, uppercase letters, numbers, dash (-), and underscore (_).</p>
    pub fn name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>A user-friendly name to identify the trusted entity set.</p>
    /// <p>The name of your list can include lowercase letters, uppercase letters, numbers, dash (-), and underscore (_).</p>
    pub fn set_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.name = input;
        self
    }
    /// <p>A user-friendly name to identify the trusted entity set.</p>
    /// <p>The name of your list can include lowercase letters, uppercase letters, numbers, dash (-), and underscore (_).</p>
    pub fn get_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.name
    }
    /// <p>The URI of the file that contains the trusted entity set.</p>
    pub fn location(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.location = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The URI of the file that contains the trusted entity set.</p>
    pub fn set_location(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.location = input;
        self
    }
    /// <p>The URI of the file that contains the trusted entity set.</p>
    pub fn get_location(&self) -> &::std::option::Option<::std::string::String> {
        &self.location
    }
    /// <p>The Amazon Web Services account ID that owns the Amazon S3 bucket specified in the <b>location</b> parameter.</p>
    pub fn expected_bucket_owner(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.expected_bucket_owner = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Web Services account ID that owns the Amazon S3 bucket specified in the <b>location</b> parameter.</p>
    pub fn set_expected_bucket_owner(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.expected_bucket_owner = input;
        self
    }
    /// <p>The Amazon Web Services account ID that owns the Amazon S3 bucket specified in the <b>location</b> parameter.</p>
    pub fn get_expected_bucket_owner(&self) -> &::std::option::Option<::std::string::String> {
        &self.expected_bucket_owner
    }
    /// <p>A boolean value that indicates whether GuardDuty is to start using this updated threat entity set. After you update an entity set, you will need to activate it again. It might take up to 15 minutes for the updated entity set to be effective.</p>
    pub fn activate(mut self, input: bool) -> Self {
        self.activate = ::std::option::Option::Some(input);
        self
    }
    /// <p>A boolean value that indicates whether GuardDuty is to start using this updated threat entity set. After you update an entity set, you will need to activate it again. It might take up to 15 minutes for the updated entity set to be effective.</p>
    pub fn set_activate(mut self, input: ::std::option::Option<bool>) -> Self {
        self.activate = input;
        self
    }
    /// <p>A boolean value that indicates whether GuardDuty is to start using this updated threat entity set. After you update an entity set, you will need to activate it again. It might take up to 15 minutes for the updated entity set to be effective.</p>
    pub fn get_activate(&self) -> &::std::option::Option<bool> {
        &self.activate
    }
    /// Consumes the builder and constructs a [`UpdateThreatEntitySetInput`](crate::operation::update_threat_entity_set::UpdateThreatEntitySetInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<crate::operation::update_threat_entity_set::UpdateThreatEntitySetInput, ::aws_smithy_types::error::operation::BuildError>
    {
        ::std::result::Result::Ok(crate::operation::update_threat_entity_set::UpdateThreatEntitySetInput {
            detector_id: self.detector_id,
            threat_entity_set_id: self.threat_entity_set_id,
            name: self.name,
            location: self.location,
            expected_bucket_owner: self.expected_bucket_owner,
            activate: self.activate,
        })
    }
}
