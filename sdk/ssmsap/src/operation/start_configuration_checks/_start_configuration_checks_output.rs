// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct StartConfigurationChecksOutput {
    /// <p>The configuration check operations that were started.</p>
    pub configuration_check_operations: ::std::option::Option<::std::vec::Vec<crate::types::ConfigurationCheckOperation>>,
    _request_id: Option<String>,
}
impl StartConfigurationChecksOutput {
    /// <p>The configuration check operations that were started.</p>
    ///
    /// If no value was sent for this field, a default will be set. If you want to determine if no value was sent, use `.configuration_check_operations.is_none()`.
    pub fn configuration_check_operations(&self) -> &[crate::types::ConfigurationCheckOperation] {
        self.configuration_check_operations.as_deref().unwrap_or_default()
    }
}
impl ::aws_types::request_id::RequestId for StartConfigurationChecksOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl StartConfigurationChecksOutput {
    /// Creates a new builder-style object to manufacture [`StartConfigurationChecksOutput`](crate::operation::start_configuration_checks::StartConfigurationChecksOutput).
    pub fn builder() -> crate::operation::start_configuration_checks::builders::StartConfigurationChecksOutputBuilder {
        crate::operation::start_configuration_checks::builders::StartConfigurationChecksOutputBuilder::default()
    }
}

/// A builder for [`StartConfigurationChecksOutput`](crate::operation::start_configuration_checks::StartConfigurationChecksOutput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct StartConfigurationChecksOutputBuilder {
    pub(crate) configuration_check_operations: ::std::option::Option<::std::vec::Vec<crate::types::ConfigurationCheckOperation>>,
    _request_id: Option<String>,
}
impl StartConfigurationChecksOutputBuilder {
    /// Appends an item to `configuration_check_operations`.
    ///
    /// To override the contents of this collection use [`set_configuration_check_operations`](Self::set_configuration_check_operations).
    ///
    /// <p>The configuration check operations that were started.</p>
    pub fn configuration_check_operations(mut self, input: crate::types::ConfigurationCheckOperation) -> Self {
        let mut v = self.configuration_check_operations.unwrap_or_default();
        v.push(input);
        self.configuration_check_operations = ::std::option::Option::Some(v);
        self
    }
    /// <p>The configuration check operations that were started.</p>
    pub fn set_configuration_check_operations(
        mut self,
        input: ::std::option::Option<::std::vec::Vec<crate::types::ConfigurationCheckOperation>>,
    ) -> Self {
        self.configuration_check_operations = input;
        self
    }
    /// <p>The configuration check operations that were started.</p>
    pub fn get_configuration_check_operations(&self) -> &::std::option::Option<::std::vec::Vec<crate::types::ConfigurationCheckOperation>> {
        &self.configuration_check_operations
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`StartConfigurationChecksOutput`](crate::operation::start_configuration_checks::StartConfigurationChecksOutput).
    pub fn build(self) -> crate::operation::start_configuration_checks::StartConfigurationChecksOutput {
        crate::operation::start_configuration_checks::StartConfigurationChecksOutput {
            configuration_check_operations: self.configuration_check_operations,
            _request_id: self._request_id,
        }
    }
}
