// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ListWorkloadIdentities`](crate::operation::list_workload_identities::builders::ListWorkloadIdentitiesFluentBuilder) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::operation::list_workload_identities::builders::ListWorkloadIdentitiesFluentBuilder::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`next_token(impl Into<String>)`](crate::operation::list_workload_identities::builders::ListWorkloadIdentitiesFluentBuilder::next_token) / [`set_next_token(Option<String>)`](crate::operation::list_workload_identities::builders::ListWorkloadIdentitiesFluentBuilder::set_next_token):<br>required: **false**<br><p>Pagination token.</p><br>
    ///   - [`max_results(i32)`](crate::operation::list_workload_identities::builders::ListWorkloadIdentitiesFluentBuilder::max_results) / [`set_max_results(Option<i32>)`](crate::operation::list_workload_identities::builders::ListWorkloadIdentitiesFluentBuilder::set_max_results):<br>required: **false**<br><p>Maximum number of results to return.</p><br>
    /// - On success, responds with [`ListWorkloadIdentitiesOutput`](crate::operation::list_workload_identities::ListWorkloadIdentitiesOutput) with field(s):
    ///   - [`workload_identities(Vec::<WorkloadIdentityType>)`](crate::operation::list_workload_identities::ListWorkloadIdentitiesOutput::workload_identities): <p>The list of workload identities.</p>
    ///   - [`next_token(Option<String>)`](crate::operation::list_workload_identities::ListWorkloadIdentitiesOutput::next_token): <p>Pagination token for the next page of results.</p>
    /// - On failure, responds with [`SdkError<ListWorkloadIdentitiesError>`](crate::operation::list_workload_identities::ListWorkloadIdentitiesError)
    pub fn list_workload_identities(&self) -> crate::operation::list_workload_identities::builders::ListWorkloadIdentitiesFluentBuilder {
        crate::operation::list_workload_identities::builders::ListWorkloadIdentitiesFluentBuilder::new(self.handle.clone())
    }
}
