// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ListBrowsers`](crate::operation::list_browsers::builders::ListBrowsersFluentBuilder) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::operation::list_browsers::builders::ListBrowsersFluentBuilder::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`max_results(i32)`](crate::operation::list_browsers::builders::ListBrowsersFluentBuilder::max_results) / [`set_max_results(Option<i32>)`](crate::operation::list_browsers::builders::ListBrowsersFluentBuilder::set_max_results):<br>required: **false**<br><p>The maximum number of results to return in a single call. The default value is 10. The maximum value is 50.</p><br>
    ///   - [`next_token(impl Into<String>)`](crate::operation::list_browsers::builders::ListBrowsersFluentBuilder::next_token) / [`set_next_token(Option<String>)`](crate::operation::list_browsers::builders::ListBrowsersFluentBuilder::set_next_token):<br>required: **false**<br><p>The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.</p><br>
    ///   - [`r#type(ResourceType)`](crate::operation::list_browsers::builders::ListBrowsersFluentBuilder::type) / [`set_type(Option<ResourceType>)`](crate::operation::list_browsers::builders::ListBrowsersFluentBuilder::set_type):<br>required: **false**<br><p>The type of browsers to list. If not specified, all browser types are returned.</p><br>
    /// - On success, responds with [`ListBrowsersOutput`](crate::operation::list_browsers::ListBrowsersOutput) with field(s):
    ///   - [`browser_summaries(Vec::<BrowserSummary>)`](crate::operation::list_browsers::ListBrowsersOutput::browser_summaries): <p>The list of browser summaries.</p>
    ///   - [`next_token(Option<String>)`](crate::operation::list_browsers::ListBrowsersOutput::next_token): <p>A token to retrieve the next page of results.</p>
    /// - On failure, responds with [`SdkError<ListBrowsersError>`](crate::operation::list_browsers::ListBrowsersError)
    pub fn list_browsers(&self) -> crate::operation::list_browsers::builders::ListBrowsersFluentBuilder {
        crate::operation::list_browsers::builders::ListBrowsersFluentBuilder::new(self.handle.clone())
    }
}
