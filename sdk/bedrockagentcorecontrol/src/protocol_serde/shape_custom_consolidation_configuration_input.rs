// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_custom_consolidation_configuration_input(
    object_1: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::types::CustomConsolidationConfigurationInput,
) -> ::std::result::Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    match input {
        crate::types::CustomConsolidationConfigurationInput::SemanticConsolidationOverride(inner) => {
            #[allow(unused_mut)]
            let mut object_1 = object_1.key("semanticConsolidationOverride").start_object();
            crate::protocol_serde::shape_semantic_override_consolidation_configuration_input::ser_semantic_override_consolidation_configuration_input(&mut object_1, inner)?;
            object_1.finish();
        }
        crate::types::CustomConsolidationConfigurationInput::SummaryConsolidationOverride(inner) => {
            #[allow(unused_mut)]
            let mut object_2 = object_1.key("summaryConsolidationOverride").start_object();
            crate::protocol_serde::shape_summary_override_consolidation_configuration_input::ser_summary_override_consolidation_configuration_input(
                &mut object_2,
                inner,
            )?;
            object_2.finish();
        }
        crate::types::CustomConsolidationConfigurationInput::UserPreferenceConsolidationOverride(inner) => {
            #[allow(unused_mut)]
            let mut object_3 = object_1.key("userPreferenceConsolidationOverride").start_object();
            crate::protocol_serde::shape_user_preference_override_consolidation_configuration_input::ser_user_preference_override_consolidation_configuration_input(&mut object_3, inner)?;
            object_3.finish();
        }
        crate::types::CustomConsolidationConfigurationInput::Unknown => {
            return Err(::aws_smithy_types::error::operation::SerializationError::unknown_variant(
                "CustomConsolidationConfigurationInput",
            ))
        }
    }
    Ok(())
}
