// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct SetTokenVaultCmkInput {
    /// <p>The unique identifier of the token vault to update.</p>
    pub token_vault_id: ::std::option::Option<::std::string::String>,
    /// <p>The KMS configuration for the token vault, including the key type and KMS key ARN.</p>
    pub kms_configuration: ::std::option::Option<crate::types::KmsConfiguration>,
}
impl SetTokenVaultCmkInput {
    /// <p>The unique identifier of the token vault to update.</p>
    pub fn token_vault_id(&self) -> ::std::option::Option<&str> {
        self.token_vault_id.as_deref()
    }
    /// <p>The KMS configuration for the token vault, including the key type and KMS key ARN.</p>
    pub fn kms_configuration(&self) -> ::std::option::Option<&crate::types::KmsConfiguration> {
        self.kms_configuration.as_ref()
    }
}
impl SetTokenVaultCmkInput {
    /// Creates a new builder-style object to manufacture [`SetTokenVaultCmkInput`](crate::operation::set_token_vault_cmk::SetTokenVaultCmkInput).
    pub fn builder() -> crate::operation::set_token_vault_cmk::builders::SetTokenVaultCmkInputBuilder {
        crate::operation::set_token_vault_cmk::builders::SetTokenVaultCmkInputBuilder::default()
    }
}

/// A builder for [`SetTokenVaultCmkInput`](crate::operation::set_token_vault_cmk::SetTokenVaultCmkInput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct SetTokenVaultCmkInputBuilder {
    pub(crate) token_vault_id: ::std::option::Option<::std::string::String>,
    pub(crate) kms_configuration: ::std::option::Option<crate::types::KmsConfiguration>,
}
impl SetTokenVaultCmkInputBuilder {
    /// <p>The unique identifier of the token vault to update.</p>
    pub fn token_vault_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.token_vault_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The unique identifier of the token vault to update.</p>
    pub fn set_token_vault_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.token_vault_id = input;
        self
    }
    /// <p>The unique identifier of the token vault to update.</p>
    pub fn get_token_vault_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.token_vault_id
    }
    /// <p>The KMS configuration for the token vault, including the key type and KMS key ARN.</p>
    /// This field is required.
    pub fn kms_configuration(mut self, input: crate::types::KmsConfiguration) -> Self {
        self.kms_configuration = ::std::option::Option::Some(input);
        self
    }
    /// <p>The KMS configuration for the token vault, including the key type and KMS key ARN.</p>
    pub fn set_kms_configuration(mut self, input: ::std::option::Option<crate::types::KmsConfiguration>) -> Self {
        self.kms_configuration = input;
        self
    }
    /// <p>The KMS configuration for the token vault, including the key type and KMS key ARN.</p>
    pub fn get_kms_configuration(&self) -> &::std::option::Option<crate::types::KmsConfiguration> {
        &self.kms_configuration
    }
    /// Consumes the builder and constructs a [`SetTokenVaultCmkInput`](crate::operation::set_token_vault_cmk::SetTokenVaultCmkInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<crate::operation::set_token_vault_cmk::SetTokenVaultCmkInput, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::operation::set_token_vault_cmk::SetTokenVaultCmkInput {
            token_vault_id: self.token_vault_id,
            kms_configuration: self.kms_configuration,
        })
    }
}
