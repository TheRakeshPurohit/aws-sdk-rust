// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq)]
pub struct UpdateAgentRuntimeEndpointInput {
    /// <p>The unique identifier of the AgentCore Runtime associated with the endpoint.</p>
    pub agent_runtime_id: ::std::option::Option<::std::string::String>,
    /// <p>The name of the AgentCore Runtime endpoint to update.</p>
    pub endpoint_name: ::std::option::Option<::std::string::String>,
    /// <p>The updated version of the AgentCore Runtime for the endpoint.</p>
    pub agent_runtime_version: ::std::option::Option<::std::string::String>,
    /// <p>The updated description of the AgentCore Runtime endpoint.</p>
    pub description: ::std::option::Option<::std::string::String>,
    /// <p>A unique, case-sensitive identifier to ensure idempotency of the request.</p>
    pub client_token: ::std::option::Option<::std::string::String>,
}
impl UpdateAgentRuntimeEndpointInput {
    /// <p>The unique identifier of the AgentCore Runtime associated with the endpoint.</p>
    pub fn agent_runtime_id(&self) -> ::std::option::Option<&str> {
        self.agent_runtime_id.as_deref()
    }
    /// <p>The name of the AgentCore Runtime endpoint to update.</p>
    pub fn endpoint_name(&self) -> ::std::option::Option<&str> {
        self.endpoint_name.as_deref()
    }
    /// <p>The updated version of the AgentCore Runtime for the endpoint.</p>
    pub fn agent_runtime_version(&self) -> ::std::option::Option<&str> {
        self.agent_runtime_version.as_deref()
    }
    /// <p>The updated description of the AgentCore Runtime endpoint.</p>
    pub fn description(&self) -> ::std::option::Option<&str> {
        self.description.as_deref()
    }
    /// <p>A unique, case-sensitive identifier to ensure idempotency of the request.</p>
    pub fn client_token(&self) -> ::std::option::Option<&str> {
        self.client_token.as_deref()
    }
}
impl ::std::fmt::Debug for UpdateAgentRuntimeEndpointInput {
    fn fmt(&self, f: &mut ::std::fmt::Formatter<'_>) -> ::std::fmt::Result {
        let mut formatter = f.debug_struct("UpdateAgentRuntimeEndpointInput");
        formatter.field("agent_runtime_id", &self.agent_runtime_id);
        formatter.field("endpoint_name", &"*** Sensitive Data Redacted ***");
        formatter.field("agent_runtime_version", &self.agent_runtime_version);
        formatter.field("description", &self.description);
        formatter.field("client_token", &self.client_token);
        formatter.finish()
    }
}
impl UpdateAgentRuntimeEndpointInput {
    /// Creates a new builder-style object to manufacture [`UpdateAgentRuntimeEndpointInput`](crate::operation::update_agent_runtime_endpoint::UpdateAgentRuntimeEndpointInput).
    pub fn builder() -> crate::operation::update_agent_runtime_endpoint::builders::UpdateAgentRuntimeEndpointInputBuilder {
        crate::operation::update_agent_runtime_endpoint::builders::UpdateAgentRuntimeEndpointInputBuilder::default()
    }
}

/// A builder for [`UpdateAgentRuntimeEndpointInput`](crate::operation::update_agent_runtime_endpoint::UpdateAgentRuntimeEndpointInput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default)]
#[non_exhaustive]
pub struct UpdateAgentRuntimeEndpointInputBuilder {
    pub(crate) agent_runtime_id: ::std::option::Option<::std::string::String>,
    pub(crate) endpoint_name: ::std::option::Option<::std::string::String>,
    pub(crate) agent_runtime_version: ::std::option::Option<::std::string::String>,
    pub(crate) description: ::std::option::Option<::std::string::String>,
    pub(crate) client_token: ::std::option::Option<::std::string::String>,
}
impl UpdateAgentRuntimeEndpointInputBuilder {
    /// <p>The unique identifier of the AgentCore Runtime associated with the endpoint.</p>
    /// This field is required.
    pub fn agent_runtime_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.agent_runtime_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The unique identifier of the AgentCore Runtime associated with the endpoint.</p>
    pub fn set_agent_runtime_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.agent_runtime_id = input;
        self
    }
    /// <p>The unique identifier of the AgentCore Runtime associated with the endpoint.</p>
    pub fn get_agent_runtime_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.agent_runtime_id
    }
    /// <p>The name of the AgentCore Runtime endpoint to update.</p>
    /// This field is required.
    pub fn endpoint_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.endpoint_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of the AgentCore Runtime endpoint to update.</p>
    pub fn set_endpoint_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.endpoint_name = input;
        self
    }
    /// <p>The name of the AgentCore Runtime endpoint to update.</p>
    pub fn get_endpoint_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.endpoint_name
    }
    /// <p>The updated version of the AgentCore Runtime for the endpoint.</p>
    pub fn agent_runtime_version(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.agent_runtime_version = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The updated version of the AgentCore Runtime for the endpoint.</p>
    pub fn set_agent_runtime_version(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.agent_runtime_version = input;
        self
    }
    /// <p>The updated version of the AgentCore Runtime for the endpoint.</p>
    pub fn get_agent_runtime_version(&self) -> &::std::option::Option<::std::string::String> {
        &self.agent_runtime_version
    }
    /// <p>The updated description of the AgentCore Runtime endpoint.</p>
    pub fn description(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.description = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The updated description of the AgentCore Runtime endpoint.</p>
    pub fn set_description(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.description = input;
        self
    }
    /// <p>The updated description of the AgentCore Runtime endpoint.</p>
    pub fn get_description(&self) -> &::std::option::Option<::std::string::String> {
        &self.description
    }
    /// <p>A unique, case-sensitive identifier to ensure idempotency of the request.</p>
    pub fn client_token(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.client_token = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>A unique, case-sensitive identifier to ensure idempotency of the request.</p>
    pub fn set_client_token(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.client_token = input;
        self
    }
    /// <p>A unique, case-sensitive identifier to ensure idempotency of the request.</p>
    pub fn get_client_token(&self) -> &::std::option::Option<::std::string::String> {
        &self.client_token
    }
    /// Consumes the builder and constructs a [`UpdateAgentRuntimeEndpointInput`](crate::operation::update_agent_runtime_endpoint::UpdateAgentRuntimeEndpointInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::update_agent_runtime_endpoint::UpdateAgentRuntimeEndpointInput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(crate::operation::update_agent_runtime_endpoint::UpdateAgentRuntimeEndpointInput {
            agent_runtime_id: self.agent_runtime_id,
            endpoint_name: self.endpoint_name,
            agent_runtime_version: self.agent_runtime_version,
            description: self.description,
            client_token: self.client_token,
        })
    }
}
impl ::std::fmt::Debug for UpdateAgentRuntimeEndpointInputBuilder {
    fn fmt(&self, f: &mut ::std::fmt::Formatter<'_>) -> ::std::fmt::Result {
        let mut formatter = f.debug_struct("UpdateAgentRuntimeEndpointInputBuilder");
        formatter.field("agent_runtime_id", &self.agent_runtime_id);
        formatter.field("endpoint_name", &"*** Sensitive Data Redacted ***");
        formatter.field("agent_runtime_version", &self.agent_runtime_version);
        formatter.field("description", &self.description);
        formatter.field("client_token", &self.client_token);
        formatter.finish()
    }
}
