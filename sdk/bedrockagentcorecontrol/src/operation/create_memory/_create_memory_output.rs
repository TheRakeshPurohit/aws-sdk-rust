// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct CreateMemoryOutput {
    /// <p>The details of the created memory, including its ID, ARN, name, description, and configuration settings.</p>
    pub memory: ::std::option::Option<crate::types::Memory>,
    _request_id: Option<String>,
}
impl CreateMemoryOutput {
    /// <p>The details of the created memory, including its ID, ARN, name, description, and configuration settings.</p>
    pub fn memory(&self) -> ::std::option::Option<&crate::types::Memory> {
        self.memory.as_ref()
    }
}
impl ::aws_types::request_id::RequestId for CreateMemoryOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl CreateMemoryOutput {
    /// Creates a new builder-style object to manufacture [`CreateMemoryOutput`](crate::operation::create_memory::CreateMemoryOutput).
    pub fn builder() -> crate::operation::create_memory::builders::CreateMemoryOutputBuilder {
        crate::operation::create_memory::builders::CreateMemoryOutputBuilder::default()
    }
}

/// A builder for [`CreateMemoryOutput`](crate::operation::create_memory::CreateMemoryOutput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct CreateMemoryOutputBuilder {
    pub(crate) memory: ::std::option::Option<crate::types::Memory>,
    _request_id: Option<String>,
}
impl CreateMemoryOutputBuilder {
    /// <p>The details of the created memory, including its ID, ARN, name, description, and configuration settings.</p>
    pub fn memory(mut self, input: crate::types::Memory) -> Self {
        self.memory = ::std::option::Option::Some(input);
        self
    }
    /// <p>The details of the created memory, including its ID, ARN, name, description, and configuration settings.</p>
    pub fn set_memory(mut self, input: ::std::option::Option<crate::types::Memory>) -> Self {
        self.memory = input;
        self
    }
    /// <p>The details of the created memory, including its ID, ARN, name, description, and configuration settings.</p>
    pub fn get_memory(&self) -> &::std::option::Option<crate::types::Memory> {
        &self.memory
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`CreateMemoryOutput`](crate::operation::create_memory::CreateMemoryOutput).
    pub fn build(self) -> crate::operation::create_memory::CreateMemoryOutput {
        crate::operation::create_memory::CreateMemoryOutput {
            memory: self.memory,
            _request_id: self._request_id,
        }
    }
}
