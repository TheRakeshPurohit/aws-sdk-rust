// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct DeleteMemoryInput {
    /// <p>A client token is used for keeping track of idempotent requests. It can contain a session id which can be around 250 chars, combined with a unique AWS identifier.</p>
    pub client_token: ::std::option::Option<::std::string::String>,
    /// <p>The unique identifier of the memory to delete.</p>
    pub memory_id: ::std::option::Option<::std::string::String>,
}
impl DeleteMemoryInput {
    /// <p>A client token is used for keeping track of idempotent requests. It can contain a session id which can be around 250 chars, combined with a unique AWS identifier.</p>
    pub fn client_token(&self) -> ::std::option::Option<&str> {
        self.client_token.as_deref()
    }
    /// <p>The unique identifier of the memory to delete.</p>
    pub fn memory_id(&self) -> ::std::option::Option<&str> {
        self.memory_id.as_deref()
    }
}
impl DeleteMemoryInput {
    /// Creates a new builder-style object to manufacture [`DeleteMemoryInput`](crate::operation::delete_memory::DeleteMemoryInput).
    pub fn builder() -> crate::operation::delete_memory::builders::DeleteMemoryInputBuilder {
        crate::operation::delete_memory::builders::DeleteMemoryInputBuilder::default()
    }
}

/// A builder for [`DeleteMemoryInput`](crate::operation::delete_memory::DeleteMemoryInput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct DeleteMemoryInputBuilder {
    pub(crate) client_token: ::std::option::Option<::std::string::String>,
    pub(crate) memory_id: ::std::option::Option<::std::string::String>,
}
impl DeleteMemoryInputBuilder {
    /// <p>A client token is used for keeping track of idempotent requests. It can contain a session id which can be around 250 chars, combined with a unique AWS identifier.</p>
    pub fn client_token(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.client_token = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>A client token is used for keeping track of idempotent requests. It can contain a session id which can be around 250 chars, combined with a unique AWS identifier.</p>
    pub fn set_client_token(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.client_token = input;
        self
    }
    /// <p>A client token is used for keeping track of idempotent requests. It can contain a session id which can be around 250 chars, combined with a unique AWS identifier.</p>
    pub fn get_client_token(&self) -> &::std::option::Option<::std::string::String> {
        &self.client_token
    }
    /// <p>The unique identifier of the memory to delete.</p>
    /// This field is required.
    pub fn memory_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.memory_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The unique identifier of the memory to delete.</p>
    pub fn set_memory_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.memory_id = input;
        self
    }
    /// <p>The unique identifier of the memory to delete.</p>
    pub fn get_memory_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.memory_id
    }
    /// Consumes the builder and constructs a [`DeleteMemoryInput`](crate::operation::delete_memory::DeleteMemoryInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<crate::operation::delete_memory::DeleteMemoryInput, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::operation::delete_memory::DeleteMemoryInput {
            client_token: self.client_token,
            memory_id: self.memory_id,
        })
    }
}
