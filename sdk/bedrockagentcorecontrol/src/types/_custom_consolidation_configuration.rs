// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Contains custom consolidation configuration information.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub enum CustomConsolidationConfiguration {
    /// <p>The semantic consolidation override configuration.</p>
    SemanticConsolidationOverride(crate::types::SemanticConsolidationOverride),
    /// <p>The summary consolidation override configuration.</p>
    SummaryConsolidationOverride(crate::types::SummaryConsolidationOverride),
    /// <p>The user preference consolidation override configuration.</p>
    UserPreferenceConsolidationOverride(crate::types::UserPreferenceConsolidationOverride),
    /// The `Unknown` variant represents cases where new union variant was received. Consider upgrading the SDK to the latest available version.
    /// An unknown enum variant
    ///
    /// _Note: If you encounter this error, consider upgrading your SDK to the latest version._
    /// The `Unknown` variant represents cases where the server sent a value that wasn't recognized
    /// by the client. This can happen when the server adds new functionality, but the client has not been updated.
    /// To investigate this, consider turning on debug logging to print the raw HTTP response.
    #[non_exhaustive]
    Unknown,
}
impl CustomConsolidationConfiguration {
    /// Tries to convert the enum instance into [`SemanticConsolidationOverride`](crate::types::CustomConsolidationConfiguration::SemanticConsolidationOverride), extracting the inner [`SemanticConsolidationOverride`](crate::types::SemanticConsolidationOverride).
    /// Returns `Err(&Self)` if it can't be converted.
    pub fn as_semantic_consolidation_override(&self) -> ::std::result::Result<&crate::types::SemanticConsolidationOverride, &Self> {
        if let CustomConsolidationConfiguration::SemanticConsolidationOverride(val) = &self {
            ::std::result::Result::Ok(val)
        } else {
            ::std::result::Result::Err(self)
        }
    }
    /// Returns true if this is a [`SemanticConsolidationOverride`](crate::types::CustomConsolidationConfiguration::SemanticConsolidationOverride).
    pub fn is_semantic_consolidation_override(&self) -> bool {
        self.as_semantic_consolidation_override().is_ok()
    }
    /// Tries to convert the enum instance into [`SummaryConsolidationOverride`](crate::types::CustomConsolidationConfiguration::SummaryConsolidationOverride), extracting the inner [`SummaryConsolidationOverride`](crate::types::SummaryConsolidationOverride).
    /// Returns `Err(&Self)` if it can't be converted.
    pub fn as_summary_consolidation_override(&self) -> ::std::result::Result<&crate::types::SummaryConsolidationOverride, &Self> {
        if let CustomConsolidationConfiguration::SummaryConsolidationOverride(val) = &self {
            ::std::result::Result::Ok(val)
        } else {
            ::std::result::Result::Err(self)
        }
    }
    /// Returns true if this is a [`SummaryConsolidationOverride`](crate::types::CustomConsolidationConfiguration::SummaryConsolidationOverride).
    pub fn is_summary_consolidation_override(&self) -> bool {
        self.as_summary_consolidation_override().is_ok()
    }
    /// Tries to convert the enum instance into [`UserPreferenceConsolidationOverride`](crate::types::CustomConsolidationConfiguration::UserPreferenceConsolidationOverride), extracting the inner [`UserPreferenceConsolidationOverride`](crate::types::UserPreferenceConsolidationOverride).
    /// Returns `Err(&Self)` if it can't be converted.
    pub fn as_user_preference_consolidation_override(&self) -> ::std::result::Result<&crate::types::UserPreferenceConsolidationOverride, &Self> {
        if let CustomConsolidationConfiguration::UserPreferenceConsolidationOverride(val) = &self {
            ::std::result::Result::Ok(val)
        } else {
            ::std::result::Result::Err(self)
        }
    }
    /// Returns true if this is a [`UserPreferenceConsolidationOverride`](crate::types::CustomConsolidationConfiguration::UserPreferenceConsolidationOverride).
    pub fn is_user_preference_consolidation_override(&self) -> bool {
        self.as_user_preference_consolidation_override().is_ok()
    }
    /// Returns true if the enum instance is the `Unknown` variant.
    pub fn is_unknown(&self) -> bool {
        matches!(self, Self::Unknown)
    }
}
