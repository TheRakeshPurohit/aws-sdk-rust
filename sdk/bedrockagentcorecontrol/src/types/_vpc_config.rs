// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>VpcConfig for the Agent.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct VpcConfig {
    /// <p>The security groups associated with the VPC configuration.</p>
    pub security_groups: ::std::vec::Vec<::std::string::String>,
    /// <p>The subnets associated with the VPC configuration.</p>
    pub subnets: ::std::vec::Vec<::std::string::String>,
}
impl VpcConfig {
    /// <p>The security groups associated with the VPC configuration.</p>
    pub fn security_groups(&self) -> &[::std::string::String] {
        use std::ops::Deref;
        self.security_groups.deref()
    }
    /// <p>The subnets associated with the VPC configuration.</p>
    pub fn subnets(&self) -> &[::std::string::String] {
        use std::ops::Deref;
        self.subnets.deref()
    }
}
impl VpcConfig {
    /// Creates a new builder-style object to manufacture [`VpcConfig`](crate::types::VpcConfig).
    pub fn builder() -> crate::types::builders::VpcConfigBuilder {
        crate::types::builders::VpcConfigBuilder::default()
    }
}

/// A builder for [`VpcConfig`](crate::types::VpcConfig).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct VpcConfigBuilder {
    pub(crate) security_groups: ::std::option::Option<::std::vec::Vec<::std::string::String>>,
    pub(crate) subnets: ::std::option::Option<::std::vec::Vec<::std::string::String>>,
}
impl VpcConfigBuilder {
    /// Appends an item to `security_groups`.
    ///
    /// To override the contents of this collection use [`set_security_groups`](Self::set_security_groups).
    ///
    /// <p>The security groups associated with the VPC configuration.</p>
    pub fn security_groups(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        let mut v = self.security_groups.unwrap_or_default();
        v.push(input.into());
        self.security_groups = ::std::option::Option::Some(v);
        self
    }
    /// <p>The security groups associated with the VPC configuration.</p>
    pub fn set_security_groups(mut self, input: ::std::option::Option<::std::vec::Vec<::std::string::String>>) -> Self {
        self.security_groups = input;
        self
    }
    /// <p>The security groups associated with the VPC configuration.</p>
    pub fn get_security_groups(&self) -> &::std::option::Option<::std::vec::Vec<::std::string::String>> {
        &self.security_groups
    }
    /// Appends an item to `subnets`.
    ///
    /// To override the contents of this collection use [`set_subnets`](Self::set_subnets).
    ///
    /// <p>The subnets associated with the VPC configuration.</p>
    pub fn subnets(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        let mut v = self.subnets.unwrap_or_default();
        v.push(input.into());
        self.subnets = ::std::option::Option::Some(v);
        self
    }
    /// <p>The subnets associated with the VPC configuration.</p>
    pub fn set_subnets(mut self, input: ::std::option::Option<::std::vec::Vec<::std::string::String>>) -> Self {
        self.subnets = input;
        self
    }
    /// <p>The subnets associated with the VPC configuration.</p>
    pub fn get_subnets(&self) -> &::std::option::Option<::std::vec::Vec<::std::string::String>> {
        &self.subnets
    }
    /// Consumes the builder and constructs a [`VpcConfig`](crate::types::VpcConfig).
    /// This method will fail if any of the following fields are not set:
    /// - [`security_groups`](crate::types::builders::VpcConfigBuilder::security_groups)
    /// - [`subnets`](crate::types::builders::VpcConfigBuilder::subnets)
    pub fn build(self) -> ::std::result::Result<crate::types::VpcConfig, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::VpcConfig {
            security_groups: self.security_groups.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "security_groups",
                    "security_groups was not specified but it is required when building VpcConfig",
                )
            })?,
            subnets: self.subnets.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "subnets",
                    "subnets was not specified but it is required when building VpcConfig",
                )
            })?,
        })
    }
}
