// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Contains summary information about a code interpreter. A code interpreter enables Amazon Bedrock Agent to execute code.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq)]
pub struct CodeInterpreterSummary {
    /// <p>The unique identifier of the code interpreter.</p>
    pub code_interpreter_id: ::std::string::String,
    /// <p>The Amazon Resource Name (ARN) of the code interpreter.</p>
    pub code_interpreter_arn: ::std::string::String,
    /// <p>The name of the code interpreter.</p>
    pub name: ::std::option::Option<::std::string::String>,
    /// <p>The description of the code interpreter.</p>
    pub description: ::std::option::Option<::std::string::String>,
    /// <p>The current status of the code interpreter.</p>
    pub status: crate::types::CodeInterpreterStatus,
    /// <p>The timestamp when the code interpreter was created.</p>
    pub created_at: ::aws_smithy_types::DateTime,
    /// <p>The timestamp when the code interpreter was last updated.</p>
    pub last_updated_at: ::std::option::Option<::aws_smithy_types::DateTime>,
}
impl CodeInterpreterSummary {
    /// <p>The unique identifier of the code interpreter.</p>
    pub fn code_interpreter_id(&self) -> &str {
        use std::ops::Deref;
        self.code_interpreter_id.deref()
    }
    /// <p>The Amazon Resource Name (ARN) of the code interpreter.</p>
    pub fn code_interpreter_arn(&self) -> &str {
        use std::ops::Deref;
        self.code_interpreter_arn.deref()
    }
    /// <p>The name of the code interpreter.</p>
    pub fn name(&self) -> ::std::option::Option<&str> {
        self.name.as_deref()
    }
    /// <p>The description of the code interpreter.</p>
    pub fn description(&self) -> ::std::option::Option<&str> {
        self.description.as_deref()
    }
    /// <p>The current status of the code interpreter.</p>
    pub fn status(&self) -> &crate::types::CodeInterpreterStatus {
        &self.status
    }
    /// <p>The timestamp when the code interpreter was created.</p>
    pub fn created_at(&self) -> &::aws_smithy_types::DateTime {
        &self.created_at
    }
    /// <p>The timestamp when the code interpreter was last updated.</p>
    pub fn last_updated_at(&self) -> ::std::option::Option<&::aws_smithy_types::DateTime> {
        self.last_updated_at.as_ref()
    }
}
impl ::std::fmt::Debug for CodeInterpreterSummary {
    fn fmt(&self, f: &mut ::std::fmt::Formatter<'_>) -> ::std::fmt::Result {
        let mut formatter = f.debug_struct("CodeInterpreterSummary");
        formatter.field("code_interpreter_id", &self.code_interpreter_id);
        formatter.field("code_interpreter_arn", &self.code_interpreter_arn);
        formatter.field("name", &self.name);
        formatter.field("description", &"*** Sensitive Data Redacted ***");
        formatter.field("status", &self.status);
        formatter.field("created_at", &self.created_at);
        formatter.field("last_updated_at", &self.last_updated_at);
        formatter.finish()
    }
}
impl CodeInterpreterSummary {
    /// Creates a new builder-style object to manufacture [`CodeInterpreterSummary`](crate::types::CodeInterpreterSummary).
    pub fn builder() -> crate::types::builders::CodeInterpreterSummaryBuilder {
        crate::types::builders::CodeInterpreterSummaryBuilder::default()
    }
}

/// A builder for [`CodeInterpreterSummary`](crate::types::CodeInterpreterSummary).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default)]
#[non_exhaustive]
pub struct CodeInterpreterSummaryBuilder {
    pub(crate) code_interpreter_id: ::std::option::Option<::std::string::String>,
    pub(crate) code_interpreter_arn: ::std::option::Option<::std::string::String>,
    pub(crate) name: ::std::option::Option<::std::string::String>,
    pub(crate) description: ::std::option::Option<::std::string::String>,
    pub(crate) status: ::std::option::Option<crate::types::CodeInterpreterStatus>,
    pub(crate) created_at: ::std::option::Option<::aws_smithy_types::DateTime>,
    pub(crate) last_updated_at: ::std::option::Option<::aws_smithy_types::DateTime>,
}
impl CodeInterpreterSummaryBuilder {
    /// <p>The unique identifier of the code interpreter.</p>
    /// This field is required.
    pub fn code_interpreter_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.code_interpreter_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The unique identifier of the code interpreter.</p>
    pub fn set_code_interpreter_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.code_interpreter_id = input;
        self
    }
    /// <p>The unique identifier of the code interpreter.</p>
    pub fn get_code_interpreter_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.code_interpreter_id
    }
    /// <p>The Amazon Resource Name (ARN) of the code interpreter.</p>
    /// This field is required.
    pub fn code_interpreter_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.code_interpreter_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the code interpreter.</p>
    pub fn set_code_interpreter_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.code_interpreter_arn = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the code interpreter.</p>
    pub fn get_code_interpreter_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.code_interpreter_arn
    }
    /// <p>The name of the code interpreter.</p>
    pub fn name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of the code interpreter.</p>
    pub fn set_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.name = input;
        self
    }
    /// <p>The name of the code interpreter.</p>
    pub fn get_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.name
    }
    /// <p>The description of the code interpreter.</p>
    pub fn description(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.description = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The description of the code interpreter.</p>
    pub fn set_description(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.description = input;
        self
    }
    /// <p>The description of the code interpreter.</p>
    pub fn get_description(&self) -> &::std::option::Option<::std::string::String> {
        &self.description
    }
    /// <p>The current status of the code interpreter.</p>
    /// This field is required.
    pub fn status(mut self, input: crate::types::CodeInterpreterStatus) -> Self {
        self.status = ::std::option::Option::Some(input);
        self
    }
    /// <p>The current status of the code interpreter.</p>
    pub fn set_status(mut self, input: ::std::option::Option<crate::types::CodeInterpreterStatus>) -> Self {
        self.status = input;
        self
    }
    /// <p>The current status of the code interpreter.</p>
    pub fn get_status(&self) -> &::std::option::Option<crate::types::CodeInterpreterStatus> {
        &self.status
    }
    /// <p>The timestamp when the code interpreter was created.</p>
    /// This field is required.
    pub fn created_at(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.created_at = ::std::option::Option::Some(input);
        self
    }
    /// <p>The timestamp when the code interpreter was created.</p>
    pub fn set_created_at(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.created_at = input;
        self
    }
    /// <p>The timestamp when the code interpreter was created.</p>
    pub fn get_created_at(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.created_at
    }
    /// <p>The timestamp when the code interpreter was last updated.</p>
    pub fn last_updated_at(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.last_updated_at = ::std::option::Option::Some(input);
        self
    }
    /// <p>The timestamp when the code interpreter was last updated.</p>
    pub fn set_last_updated_at(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.last_updated_at = input;
        self
    }
    /// <p>The timestamp when the code interpreter was last updated.</p>
    pub fn get_last_updated_at(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.last_updated_at
    }
    /// Consumes the builder and constructs a [`CodeInterpreterSummary`](crate::types::CodeInterpreterSummary).
    /// This method will fail if any of the following fields are not set:
    /// - [`code_interpreter_id`](crate::types::builders::CodeInterpreterSummaryBuilder::code_interpreter_id)
    /// - [`code_interpreter_arn`](crate::types::builders::CodeInterpreterSummaryBuilder::code_interpreter_arn)
    /// - [`status`](crate::types::builders::CodeInterpreterSummaryBuilder::status)
    /// - [`created_at`](crate::types::builders::CodeInterpreterSummaryBuilder::created_at)
    pub fn build(self) -> ::std::result::Result<crate::types::CodeInterpreterSummary, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::CodeInterpreterSummary {
            code_interpreter_id: self.code_interpreter_id.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "code_interpreter_id",
                    "code_interpreter_id was not specified but it is required when building CodeInterpreterSummary",
                )
            })?,
            code_interpreter_arn: self.code_interpreter_arn.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "code_interpreter_arn",
                    "code_interpreter_arn was not specified but it is required when building CodeInterpreterSummary",
                )
            })?,
            name: self.name,
            description: self.description,
            status: self.status.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "status",
                    "status was not specified but it is required when building CodeInterpreterSummary",
                )
            })?,
            created_at: self.created_at.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "created_at",
                    "created_at was not specified but it is required when building CodeInterpreterSummary",
                )
            })?,
            last_updated_at: self.last_updated_at,
        })
    }
}
impl ::std::fmt::Debug for CodeInterpreterSummaryBuilder {
    fn fmt(&self, f: &mut ::std::fmt::Formatter<'_>) -> ::std::fmt::Result {
        let mut formatter = f.debug_struct("CodeInterpreterSummaryBuilder");
        formatter.field("code_interpreter_id", &self.code_interpreter_id);
        formatter.field("code_interpreter_arn", &self.code_interpreter_arn);
        formatter.field("name", &self.name);
        formatter.field("description", &"*** Sensitive Data Redacted ***");
        formatter.field("status", &self.status);
        formatter.field("created_at", &self.created_at);
        formatter.field("last_updated_at", &self.last_updated_at);
        formatter.finish()
    }
}
