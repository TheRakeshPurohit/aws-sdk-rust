// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>SecurityConfig for the Agent.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct NetworkConfiguration {
    /// <p>The network mode for the agent runtime.</p>
    pub network_mode: crate::types::NetworkMode,
}
impl NetworkConfiguration {
    /// <p>The network mode for the agent runtime.</p>
    pub fn network_mode(&self) -> &crate::types::NetworkMode {
        &self.network_mode
    }
}
impl NetworkConfiguration {
    /// Creates a new builder-style object to manufacture [`NetworkConfiguration`](crate::types::NetworkConfiguration).
    pub fn builder() -> crate::types::builders::NetworkConfigurationBuilder {
        crate::types::builders::NetworkConfigurationBuilder::default()
    }
}

/// A builder for [`NetworkConfiguration`](crate::types::NetworkConfiguration).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct NetworkConfigurationBuilder {
    pub(crate) network_mode: ::std::option::Option<crate::types::NetworkMode>,
}
impl NetworkConfigurationBuilder {
    /// <p>The network mode for the agent runtime.</p>
    /// This field is required.
    pub fn network_mode(mut self, input: crate::types::NetworkMode) -> Self {
        self.network_mode = ::std::option::Option::Some(input);
        self
    }
    /// <p>The network mode for the agent runtime.</p>
    pub fn set_network_mode(mut self, input: ::std::option::Option<crate::types::NetworkMode>) -> Self {
        self.network_mode = input;
        self
    }
    /// <p>The network mode for the agent runtime.</p>
    pub fn get_network_mode(&self) -> &::std::option::Option<crate::types::NetworkMode> {
        &self.network_mode
    }
    /// Consumes the builder and constructs a [`NetworkConfiguration`](crate::types::NetworkConfiguration).
    /// This method will fail if any of the following fields are not set:
    /// - [`network_mode`](crate::types::builders::NetworkConfigurationBuilder::network_mode)
    pub fn build(self) -> ::std::result::Result<crate::types::NetworkConfiguration, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::NetworkConfiguration {
            network_mode: self.network_mode.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "network_mode",
                    "network_mode was not specified but it is required when building NetworkConfiguration",
                )
            })?,
        })
    }
}
