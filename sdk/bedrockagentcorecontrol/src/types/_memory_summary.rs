// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Contains summary information about a memory resource.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct MemorySummary {
    /// <p>The Amazon Resource Name (ARN) of the memory.</p>
    pub arn: ::std::option::Option<::std::string::String>,
    /// <p>The unique identifier of the memory.</p>
    pub id: ::std::option::Option<::std::string::String>,
    /// <p>The current status of the memory.</p>
    pub status: ::std::option::Option<crate::types::MemoryStatus>,
    /// <p>The timestamp when the memory was created.</p>
    pub created_at: ::aws_smithy_types::DateTime,
    /// <p>The timestamp when the memory was last updated.</p>
    pub updated_at: ::aws_smithy_types::DateTime,
}
impl MemorySummary {
    /// <p>The Amazon Resource Name (ARN) of the memory.</p>
    pub fn arn(&self) -> ::std::option::Option<&str> {
        self.arn.as_deref()
    }
    /// <p>The unique identifier of the memory.</p>
    pub fn id(&self) -> ::std::option::Option<&str> {
        self.id.as_deref()
    }
    /// <p>The current status of the memory.</p>
    pub fn status(&self) -> ::std::option::Option<&crate::types::MemoryStatus> {
        self.status.as_ref()
    }
    /// <p>The timestamp when the memory was created.</p>
    pub fn created_at(&self) -> &::aws_smithy_types::DateTime {
        &self.created_at
    }
    /// <p>The timestamp when the memory was last updated.</p>
    pub fn updated_at(&self) -> &::aws_smithy_types::DateTime {
        &self.updated_at
    }
}
impl MemorySummary {
    /// Creates a new builder-style object to manufacture [`MemorySummary`](crate::types::MemorySummary).
    pub fn builder() -> crate::types::builders::MemorySummaryBuilder {
        crate::types::builders::MemorySummaryBuilder::default()
    }
}

/// A builder for [`MemorySummary`](crate::types::MemorySummary).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct MemorySummaryBuilder {
    pub(crate) arn: ::std::option::Option<::std::string::String>,
    pub(crate) id: ::std::option::Option<::std::string::String>,
    pub(crate) status: ::std::option::Option<crate::types::MemoryStatus>,
    pub(crate) created_at: ::std::option::Option<::aws_smithy_types::DateTime>,
    pub(crate) updated_at: ::std::option::Option<::aws_smithy_types::DateTime>,
}
impl MemorySummaryBuilder {
    /// <p>The Amazon Resource Name (ARN) of the memory.</p>
    pub fn arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the memory.</p>
    pub fn set_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.arn = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the memory.</p>
    pub fn get_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.arn
    }
    /// <p>The unique identifier of the memory.</p>
    pub fn id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The unique identifier of the memory.</p>
    pub fn set_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.id = input;
        self
    }
    /// <p>The unique identifier of the memory.</p>
    pub fn get_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.id
    }
    /// <p>The current status of the memory.</p>
    pub fn status(mut self, input: crate::types::MemoryStatus) -> Self {
        self.status = ::std::option::Option::Some(input);
        self
    }
    /// <p>The current status of the memory.</p>
    pub fn set_status(mut self, input: ::std::option::Option<crate::types::MemoryStatus>) -> Self {
        self.status = input;
        self
    }
    /// <p>The current status of the memory.</p>
    pub fn get_status(&self) -> &::std::option::Option<crate::types::MemoryStatus> {
        &self.status
    }
    /// <p>The timestamp when the memory was created.</p>
    /// This field is required.
    pub fn created_at(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.created_at = ::std::option::Option::Some(input);
        self
    }
    /// <p>The timestamp when the memory was created.</p>
    pub fn set_created_at(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.created_at = input;
        self
    }
    /// <p>The timestamp when the memory was created.</p>
    pub fn get_created_at(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.created_at
    }
    /// <p>The timestamp when the memory was last updated.</p>
    /// This field is required.
    pub fn updated_at(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.updated_at = ::std::option::Option::Some(input);
        self
    }
    /// <p>The timestamp when the memory was last updated.</p>
    pub fn set_updated_at(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.updated_at = input;
        self
    }
    /// <p>The timestamp when the memory was last updated.</p>
    pub fn get_updated_at(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.updated_at
    }
    /// Consumes the builder and constructs a [`MemorySummary`](crate::types::MemorySummary).
    /// This method will fail if any of the following fields are not set:
    /// - [`created_at`](crate::types::builders::MemorySummaryBuilder::created_at)
    /// - [`updated_at`](crate::types::builders::MemorySummaryBuilder::updated_at)
    pub fn build(self) -> ::std::result::Result<crate::types::MemorySummary, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::MemorySummary {
            arn: self.arn,
            id: self.id,
            status: self.status,
            created_at: self.created_at.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "created_at",
                    "created_at was not specified but it is required when building MemorySummary",
                )
            })?,
            updated_at: self.updated_at.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "updated_at",
                    "updated_at was not specified but it is required when building MemorySummary",
                )
            })?,
        })
    }
}
