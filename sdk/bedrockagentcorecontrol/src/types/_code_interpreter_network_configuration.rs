// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The network configuration for a code interpreter. This structure defines how the code interpreter connects to the network.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct CodeInterpreterNetworkConfiguration {
    /// <p>The network mode for the code interpreter. This field specifies how the code interpreter connects to the network.</p>
    pub network_mode: crate::types::CodeInterpreterNetworkMode,
}
impl CodeInterpreterNetworkConfiguration {
    /// <p>The network mode for the code interpreter. This field specifies how the code interpreter connects to the network.</p>
    pub fn network_mode(&self) -> &crate::types::CodeInterpreterNetworkMode {
        &self.network_mode
    }
}
impl CodeInterpreterNetworkConfiguration {
    /// Creates a new builder-style object to manufacture [`CodeInterpreterNetworkConfiguration`](crate::types::CodeInterpreterNetworkConfiguration).
    pub fn builder() -> crate::types::builders::CodeInterpreterNetworkConfigurationBuilder {
        crate::types::builders::CodeInterpreterNetworkConfigurationBuilder::default()
    }
}

/// A builder for [`CodeInterpreterNetworkConfiguration`](crate::types::CodeInterpreterNetworkConfiguration).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct CodeInterpreterNetworkConfigurationBuilder {
    pub(crate) network_mode: ::std::option::Option<crate::types::CodeInterpreterNetworkMode>,
}
impl CodeInterpreterNetworkConfigurationBuilder {
    /// <p>The network mode for the code interpreter. This field specifies how the code interpreter connects to the network.</p>
    /// This field is required.
    pub fn network_mode(mut self, input: crate::types::CodeInterpreterNetworkMode) -> Self {
        self.network_mode = ::std::option::Option::Some(input);
        self
    }
    /// <p>The network mode for the code interpreter. This field specifies how the code interpreter connects to the network.</p>
    pub fn set_network_mode(mut self, input: ::std::option::Option<crate::types::CodeInterpreterNetworkMode>) -> Self {
        self.network_mode = input;
        self
    }
    /// <p>The network mode for the code interpreter. This field specifies how the code interpreter connects to the network.</p>
    pub fn get_network_mode(&self) -> &::std::option::Option<crate::types::CodeInterpreterNetworkMode> {
        &self.network_mode
    }
    /// Consumes the builder and constructs a [`CodeInterpreterNetworkConfiguration`](crate::types::CodeInterpreterNetworkConfiguration).
    pub fn build(self) -> crate::types::CodeInterpreterNetworkConfiguration {
        crate::types::CodeInterpreterNetworkConfiguration {
            network_mode: self.network_mode.unwrap_or(
                "SANDBOX"
                    .parse::<crate::types::CodeInterpreterNetworkMode>()
                    .expect("static value validated to member"),
            ),
        }
    }
}
