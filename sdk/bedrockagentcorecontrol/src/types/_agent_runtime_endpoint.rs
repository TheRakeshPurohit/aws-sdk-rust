// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Contains information about an agent runtime endpoint. An endpoint provides a way to connect to and interact with an agent runtime.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq)]
pub struct AgentRuntimeEndpoint {
    /// <p>The name of the agent runtime endpoint.</p>
    pub name: ::std::string::String,
    /// <p>The live version of the agent runtime endpoint. This is the version that is currently serving requests.</p>
    pub live_version: ::std::option::Option<::std::string::String>,
    /// <p>The target version of the agent runtime endpoint. This is the version that the endpoint is being updated to.</p>
    pub target_version: ::std::option::Option<::std::string::String>,
    /// <p>The Amazon Resource Name (ARN) of the agent runtime endpoint.</p>
    pub agent_runtime_endpoint_arn: ::std::string::String,
    /// <p>The Amazon Resource Name (ARN) of the agent runtime associated with the endpoint.</p>
    pub agent_runtime_arn: ::std::string::String,
    /// <p>The current status of the agent runtime endpoint.</p>
    pub status: crate::types::AgentRuntimeEndpointStatus,
    /// <p>The unique identifier of the agent runtime endpoint.</p>
    pub id: ::std::string::String,
    /// <p>The description of the agent runtime endpoint.</p>
    pub description: ::std::option::Option<::std::string::String>,
    /// <p>The timestamp when the agent runtime endpoint was created.</p>
    pub created_at: ::aws_smithy_types::DateTime,
    /// <p>The timestamp when the agent runtime endpoint was last updated.</p>
    pub last_updated_at: ::aws_smithy_types::DateTime,
}
impl AgentRuntimeEndpoint {
    /// <p>The name of the agent runtime endpoint.</p>
    pub fn name(&self) -> &str {
        use std::ops::Deref;
        self.name.deref()
    }
    /// <p>The live version of the agent runtime endpoint. This is the version that is currently serving requests.</p>
    pub fn live_version(&self) -> ::std::option::Option<&str> {
        self.live_version.as_deref()
    }
    /// <p>The target version of the agent runtime endpoint. This is the version that the endpoint is being updated to.</p>
    pub fn target_version(&self) -> ::std::option::Option<&str> {
        self.target_version.as_deref()
    }
    /// <p>The Amazon Resource Name (ARN) of the agent runtime endpoint.</p>
    pub fn agent_runtime_endpoint_arn(&self) -> &str {
        use std::ops::Deref;
        self.agent_runtime_endpoint_arn.deref()
    }
    /// <p>The Amazon Resource Name (ARN) of the agent runtime associated with the endpoint.</p>
    pub fn agent_runtime_arn(&self) -> &str {
        use std::ops::Deref;
        self.agent_runtime_arn.deref()
    }
    /// <p>The current status of the agent runtime endpoint.</p>
    pub fn status(&self) -> &crate::types::AgentRuntimeEndpointStatus {
        &self.status
    }
    /// <p>The unique identifier of the agent runtime endpoint.</p>
    pub fn id(&self) -> &str {
        use std::ops::Deref;
        self.id.deref()
    }
    /// <p>The description of the agent runtime endpoint.</p>
    pub fn description(&self) -> ::std::option::Option<&str> {
        self.description.as_deref()
    }
    /// <p>The timestamp when the agent runtime endpoint was created.</p>
    pub fn created_at(&self) -> &::aws_smithy_types::DateTime {
        &self.created_at
    }
    /// <p>The timestamp when the agent runtime endpoint was last updated.</p>
    pub fn last_updated_at(&self) -> &::aws_smithy_types::DateTime {
        &self.last_updated_at
    }
}
impl ::std::fmt::Debug for AgentRuntimeEndpoint {
    fn fmt(&self, f: &mut ::std::fmt::Formatter<'_>) -> ::std::fmt::Result {
        let mut formatter = f.debug_struct("AgentRuntimeEndpoint");
        formatter.field("name", &"*** Sensitive Data Redacted ***");
        formatter.field("live_version", &self.live_version);
        formatter.field("target_version", &self.target_version);
        formatter.field("agent_runtime_endpoint_arn", &self.agent_runtime_endpoint_arn);
        formatter.field("agent_runtime_arn", &self.agent_runtime_arn);
        formatter.field("status", &self.status);
        formatter.field("id", &self.id);
        formatter.field("description", &self.description);
        formatter.field("created_at", &self.created_at);
        formatter.field("last_updated_at", &self.last_updated_at);
        formatter.finish()
    }
}
impl AgentRuntimeEndpoint {
    /// Creates a new builder-style object to manufacture [`AgentRuntimeEndpoint`](crate::types::AgentRuntimeEndpoint).
    pub fn builder() -> crate::types::builders::AgentRuntimeEndpointBuilder {
        crate::types::builders::AgentRuntimeEndpointBuilder::default()
    }
}

/// A builder for [`AgentRuntimeEndpoint`](crate::types::AgentRuntimeEndpoint).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default)]
#[non_exhaustive]
pub struct AgentRuntimeEndpointBuilder {
    pub(crate) name: ::std::option::Option<::std::string::String>,
    pub(crate) live_version: ::std::option::Option<::std::string::String>,
    pub(crate) target_version: ::std::option::Option<::std::string::String>,
    pub(crate) agent_runtime_endpoint_arn: ::std::option::Option<::std::string::String>,
    pub(crate) agent_runtime_arn: ::std::option::Option<::std::string::String>,
    pub(crate) status: ::std::option::Option<crate::types::AgentRuntimeEndpointStatus>,
    pub(crate) id: ::std::option::Option<::std::string::String>,
    pub(crate) description: ::std::option::Option<::std::string::String>,
    pub(crate) created_at: ::std::option::Option<::aws_smithy_types::DateTime>,
    pub(crate) last_updated_at: ::std::option::Option<::aws_smithy_types::DateTime>,
}
impl AgentRuntimeEndpointBuilder {
    /// <p>The name of the agent runtime endpoint.</p>
    /// This field is required.
    pub fn name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of the agent runtime endpoint.</p>
    pub fn set_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.name = input;
        self
    }
    /// <p>The name of the agent runtime endpoint.</p>
    pub fn get_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.name
    }
    /// <p>The live version of the agent runtime endpoint. This is the version that is currently serving requests.</p>
    pub fn live_version(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.live_version = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The live version of the agent runtime endpoint. This is the version that is currently serving requests.</p>
    pub fn set_live_version(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.live_version = input;
        self
    }
    /// <p>The live version of the agent runtime endpoint. This is the version that is currently serving requests.</p>
    pub fn get_live_version(&self) -> &::std::option::Option<::std::string::String> {
        &self.live_version
    }
    /// <p>The target version of the agent runtime endpoint. This is the version that the endpoint is being updated to.</p>
    pub fn target_version(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.target_version = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The target version of the agent runtime endpoint. This is the version that the endpoint is being updated to.</p>
    pub fn set_target_version(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.target_version = input;
        self
    }
    /// <p>The target version of the agent runtime endpoint. This is the version that the endpoint is being updated to.</p>
    pub fn get_target_version(&self) -> &::std::option::Option<::std::string::String> {
        &self.target_version
    }
    /// <p>The Amazon Resource Name (ARN) of the agent runtime endpoint.</p>
    /// This field is required.
    pub fn agent_runtime_endpoint_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.agent_runtime_endpoint_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the agent runtime endpoint.</p>
    pub fn set_agent_runtime_endpoint_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.agent_runtime_endpoint_arn = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the agent runtime endpoint.</p>
    pub fn get_agent_runtime_endpoint_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.agent_runtime_endpoint_arn
    }
    /// <p>The Amazon Resource Name (ARN) of the agent runtime associated with the endpoint.</p>
    /// This field is required.
    pub fn agent_runtime_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.agent_runtime_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the agent runtime associated with the endpoint.</p>
    pub fn set_agent_runtime_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.agent_runtime_arn = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the agent runtime associated with the endpoint.</p>
    pub fn get_agent_runtime_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.agent_runtime_arn
    }
    /// <p>The current status of the agent runtime endpoint.</p>
    /// This field is required.
    pub fn status(mut self, input: crate::types::AgentRuntimeEndpointStatus) -> Self {
        self.status = ::std::option::Option::Some(input);
        self
    }
    /// <p>The current status of the agent runtime endpoint.</p>
    pub fn set_status(mut self, input: ::std::option::Option<crate::types::AgentRuntimeEndpointStatus>) -> Self {
        self.status = input;
        self
    }
    /// <p>The current status of the agent runtime endpoint.</p>
    pub fn get_status(&self) -> &::std::option::Option<crate::types::AgentRuntimeEndpointStatus> {
        &self.status
    }
    /// <p>The unique identifier of the agent runtime endpoint.</p>
    /// This field is required.
    pub fn id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The unique identifier of the agent runtime endpoint.</p>
    pub fn set_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.id = input;
        self
    }
    /// <p>The unique identifier of the agent runtime endpoint.</p>
    pub fn get_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.id
    }
    /// <p>The description of the agent runtime endpoint.</p>
    pub fn description(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.description = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The description of the agent runtime endpoint.</p>
    pub fn set_description(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.description = input;
        self
    }
    /// <p>The description of the agent runtime endpoint.</p>
    pub fn get_description(&self) -> &::std::option::Option<::std::string::String> {
        &self.description
    }
    /// <p>The timestamp when the agent runtime endpoint was created.</p>
    /// This field is required.
    pub fn created_at(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.created_at = ::std::option::Option::Some(input);
        self
    }
    /// <p>The timestamp when the agent runtime endpoint was created.</p>
    pub fn set_created_at(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.created_at = input;
        self
    }
    /// <p>The timestamp when the agent runtime endpoint was created.</p>
    pub fn get_created_at(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.created_at
    }
    /// <p>The timestamp when the agent runtime endpoint was last updated.</p>
    /// This field is required.
    pub fn last_updated_at(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.last_updated_at = ::std::option::Option::Some(input);
        self
    }
    /// <p>The timestamp when the agent runtime endpoint was last updated.</p>
    pub fn set_last_updated_at(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.last_updated_at = input;
        self
    }
    /// <p>The timestamp when the agent runtime endpoint was last updated.</p>
    pub fn get_last_updated_at(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.last_updated_at
    }
    /// Consumes the builder and constructs a [`AgentRuntimeEndpoint`](crate::types::AgentRuntimeEndpoint).
    /// This method will fail if any of the following fields are not set:
    /// - [`name`](crate::types::builders::AgentRuntimeEndpointBuilder::name)
    /// - [`agent_runtime_endpoint_arn`](crate::types::builders::AgentRuntimeEndpointBuilder::agent_runtime_endpoint_arn)
    /// - [`agent_runtime_arn`](crate::types::builders::AgentRuntimeEndpointBuilder::agent_runtime_arn)
    /// - [`status`](crate::types::builders::AgentRuntimeEndpointBuilder::status)
    /// - [`id`](crate::types::builders::AgentRuntimeEndpointBuilder::id)
    /// - [`created_at`](crate::types::builders::AgentRuntimeEndpointBuilder::created_at)
    /// - [`last_updated_at`](crate::types::builders::AgentRuntimeEndpointBuilder::last_updated_at)
    pub fn build(self) -> ::std::result::Result<crate::types::AgentRuntimeEndpoint, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::AgentRuntimeEndpoint {
            name: self.name.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "name",
                    "name was not specified but it is required when building AgentRuntimeEndpoint",
                )
            })?,
            live_version: self.live_version,
            target_version: self.target_version,
            agent_runtime_endpoint_arn: self.agent_runtime_endpoint_arn.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "agent_runtime_endpoint_arn",
                    "agent_runtime_endpoint_arn was not specified but it is required when building AgentRuntimeEndpoint",
                )
            })?,
            agent_runtime_arn: self.agent_runtime_arn.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "agent_runtime_arn",
                    "agent_runtime_arn was not specified but it is required when building AgentRuntimeEndpoint",
                )
            })?,
            status: self.status.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "status",
                    "status was not specified but it is required when building AgentRuntimeEndpoint",
                )
            })?,
            id: self.id.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "id",
                    "id was not specified but it is required when building AgentRuntimeEndpoint",
                )
            })?,
            description: self.description,
            created_at: self.created_at.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "created_at",
                    "created_at was not specified but it is required when building AgentRuntimeEndpoint",
                )
            })?,
            last_updated_at: self.last_updated_at.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "last_updated_at",
                    "last_updated_at was not specified but it is required when building AgentRuntimeEndpoint",
                )
            })?,
        })
    }
}
impl ::std::fmt::Debug for AgentRuntimeEndpointBuilder {
    fn fmt(&self, f: &mut ::std::fmt::Formatter<'_>) -> ::std::fmt::Result {
        let mut formatter = f.debug_struct("AgentRuntimeEndpointBuilder");
        formatter.field("name", &"*** Sensitive Data Redacted ***");
        formatter.field("live_version", &self.live_version);
        formatter.field("target_version", &self.target_version);
        formatter.field("agent_runtime_endpoint_arn", &self.agent_runtime_endpoint_arn);
        formatter.field("agent_runtime_arn", &self.agent_runtime_arn);
        formatter.field("status", &self.status);
        formatter.field("id", &self.id);
        formatter.field("description", &self.description);
        formatter.field("created_at", &self.created_at);
        formatter.field("last_updated_at", &self.last_updated_at);
        formatter.finish()
    }
}
