// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Input for user preference override configuration in a memory strategy.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct UserPreferenceOverrideConfigurationInput {
    /// <p>The extraction configuration for a user preference override.</p>
    pub extraction: ::std::option::Option<crate::types::UserPreferenceOverrideExtractionConfigurationInput>,
    /// <p>The consolidation configuration for a user preference override.</p>
    pub consolidation: ::std::option::Option<crate::types::UserPreferenceOverrideConsolidationConfigurationInput>,
}
impl UserPreferenceOverrideConfigurationInput {
    /// <p>The extraction configuration for a user preference override.</p>
    pub fn extraction(&self) -> ::std::option::Option<&crate::types::UserPreferenceOverrideExtractionConfigurationInput> {
        self.extraction.as_ref()
    }
    /// <p>The consolidation configuration for a user preference override.</p>
    pub fn consolidation(&self) -> ::std::option::Option<&crate::types::UserPreferenceOverrideConsolidationConfigurationInput> {
        self.consolidation.as_ref()
    }
}
impl UserPreferenceOverrideConfigurationInput {
    /// Creates a new builder-style object to manufacture [`UserPreferenceOverrideConfigurationInput`](crate::types::UserPreferenceOverrideConfigurationInput).
    pub fn builder() -> crate::types::builders::UserPreferenceOverrideConfigurationInputBuilder {
        crate::types::builders::UserPreferenceOverrideConfigurationInputBuilder::default()
    }
}

/// A builder for [`UserPreferenceOverrideConfigurationInput`](crate::types::UserPreferenceOverrideConfigurationInput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct UserPreferenceOverrideConfigurationInputBuilder {
    pub(crate) extraction: ::std::option::Option<crate::types::UserPreferenceOverrideExtractionConfigurationInput>,
    pub(crate) consolidation: ::std::option::Option<crate::types::UserPreferenceOverrideConsolidationConfigurationInput>,
}
impl UserPreferenceOverrideConfigurationInputBuilder {
    /// <p>The extraction configuration for a user preference override.</p>
    pub fn extraction(mut self, input: crate::types::UserPreferenceOverrideExtractionConfigurationInput) -> Self {
        self.extraction = ::std::option::Option::Some(input);
        self
    }
    /// <p>The extraction configuration for a user preference override.</p>
    pub fn set_extraction(mut self, input: ::std::option::Option<crate::types::UserPreferenceOverrideExtractionConfigurationInput>) -> Self {
        self.extraction = input;
        self
    }
    /// <p>The extraction configuration for a user preference override.</p>
    pub fn get_extraction(&self) -> &::std::option::Option<crate::types::UserPreferenceOverrideExtractionConfigurationInput> {
        &self.extraction
    }
    /// <p>The consolidation configuration for a user preference override.</p>
    pub fn consolidation(mut self, input: crate::types::UserPreferenceOverrideConsolidationConfigurationInput) -> Self {
        self.consolidation = ::std::option::Option::Some(input);
        self
    }
    /// <p>The consolidation configuration for a user preference override.</p>
    pub fn set_consolidation(mut self, input: ::std::option::Option<crate::types::UserPreferenceOverrideConsolidationConfigurationInput>) -> Self {
        self.consolidation = input;
        self
    }
    /// <p>The consolidation configuration for a user preference override.</p>
    pub fn get_consolidation(&self) -> &::std::option::Option<crate::types::UserPreferenceOverrideConsolidationConfigurationInput> {
        &self.consolidation
    }
    /// Consumes the builder and constructs a [`UserPreferenceOverrideConfigurationInput`](crate::types::UserPreferenceOverrideConfigurationInput).
    pub fn build(self) -> crate::types::UserPreferenceOverrideConfigurationInput {
        crate::types::UserPreferenceOverrideConfigurationInput {
            extraction: self.extraction,
            consolidation: self.consolidation,
        }
    }
}
