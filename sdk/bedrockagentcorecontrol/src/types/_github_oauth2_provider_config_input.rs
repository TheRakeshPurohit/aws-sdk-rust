// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Input configuration for a GitHub OAuth2 provider.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq)]
pub struct GithubOauth2ProviderConfigInput {
    /// <p>The client ID for the GitHub OAuth2 provider.</p>
    pub client_id: ::std::string::String,
    /// <p>The client secret for the GitHub OAuth2 provider.</p>
    pub client_secret: ::std::string::String,
}
impl GithubOauth2ProviderConfigInput {
    /// <p>The client ID for the GitHub OAuth2 provider.</p>
    pub fn client_id(&self) -> &str {
        use std::ops::Deref;
        self.client_id.deref()
    }
    /// <p>The client secret for the GitHub OAuth2 provider.</p>
    pub fn client_secret(&self) -> &str {
        use std::ops::Deref;
        self.client_secret.deref()
    }
}
impl ::std::fmt::Debug for GithubOauth2ProviderConfigInput {
    fn fmt(&self, f: &mut ::std::fmt::Formatter<'_>) -> ::std::fmt::Result {
        let mut formatter = f.debug_struct("GithubOauth2ProviderConfigInput");
        formatter.field("client_id", &self.client_id);
        formatter.field("client_secret", &"*** Sensitive Data Redacted ***");
        formatter.finish()
    }
}
impl GithubOauth2ProviderConfigInput {
    /// Creates a new builder-style object to manufacture [`GithubOauth2ProviderConfigInput`](crate::types::GithubOauth2ProviderConfigInput).
    pub fn builder() -> crate::types::builders::GithubOauth2ProviderConfigInputBuilder {
        crate::types::builders::GithubOauth2ProviderConfigInputBuilder::default()
    }
}

/// A builder for [`GithubOauth2ProviderConfigInput`](crate::types::GithubOauth2ProviderConfigInput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default)]
#[non_exhaustive]
pub struct GithubOauth2ProviderConfigInputBuilder {
    pub(crate) client_id: ::std::option::Option<::std::string::String>,
    pub(crate) client_secret: ::std::option::Option<::std::string::String>,
}
impl GithubOauth2ProviderConfigInputBuilder {
    /// <p>The client ID for the GitHub OAuth2 provider.</p>
    /// This field is required.
    pub fn client_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.client_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The client ID for the GitHub OAuth2 provider.</p>
    pub fn set_client_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.client_id = input;
        self
    }
    /// <p>The client ID for the GitHub OAuth2 provider.</p>
    pub fn get_client_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.client_id
    }
    /// <p>The client secret for the GitHub OAuth2 provider.</p>
    /// This field is required.
    pub fn client_secret(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.client_secret = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The client secret for the GitHub OAuth2 provider.</p>
    pub fn set_client_secret(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.client_secret = input;
        self
    }
    /// <p>The client secret for the GitHub OAuth2 provider.</p>
    pub fn get_client_secret(&self) -> &::std::option::Option<::std::string::String> {
        &self.client_secret
    }
    /// Consumes the builder and constructs a [`GithubOauth2ProviderConfigInput`](crate::types::GithubOauth2ProviderConfigInput).
    /// This method will fail if any of the following fields are not set:
    /// - [`client_id`](crate::types::builders::GithubOauth2ProviderConfigInputBuilder::client_id)
    /// - [`client_secret`](crate::types::builders::GithubOauth2ProviderConfigInputBuilder::client_secret)
    pub fn build(self) -> ::std::result::Result<crate::types::GithubOauth2ProviderConfigInput, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::GithubOauth2ProviderConfigInput {
            client_id: self.client_id.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "client_id",
                    "client_id was not specified but it is required when building GithubOauth2ProviderConfigInput",
                )
            })?,
            client_secret: self.client_secret.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "client_secret",
                    "client_secret was not specified but it is required when building GithubOauth2ProviderConfigInput",
                )
            })?,
        })
    }
}
impl ::std::fmt::Debug for GithubOauth2ProviderConfigInputBuilder {
    fn fmt(&self, f: &mut ::std::fmt::Formatter<'_>) -> ::std::fmt::Result {
        let mut formatter = f.debug_struct("GithubOauth2ProviderConfigInputBuilder");
        formatter.field("client_id", &self.client_id);
        formatter.field("client_secret", &"*** Sensitive Data Redacted ***");
        formatter.finish()
    }
}
