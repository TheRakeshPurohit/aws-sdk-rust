// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Contains information about an agent runtime. An agent runtime is the execution environment for a Amazon Bedrock Agent.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq)]
pub struct AgentRuntime {
    /// <p>The Amazon Resource Name (ARN) of the agent runtime.</p>
    pub agent_runtime_arn: ::std::string::String,
    /// <p>The unique identifier of the agent runtime.</p>
    pub agent_runtime_id: ::std::string::String,
    /// <p>The version of the agent runtime.</p>
    pub agent_runtime_version: ::std::string::String,
    /// <p>The name of the agent runtime.</p>
    pub agent_runtime_name: ::std::string::String,
    /// <p>The description of the agent runtime.</p>
    pub description: ::std::string::String,
    /// <p>The timestamp when the agent runtime was last updated.</p>
    pub last_updated_at: ::aws_smithy_types::DateTime,
    /// <p>The current status of the agent runtime.</p>
    pub status: crate::types::AgentRuntimeStatus,
}
impl AgentRuntime {
    /// <p>The Amazon Resource Name (ARN) of the agent runtime.</p>
    pub fn agent_runtime_arn(&self) -> &str {
        use std::ops::Deref;
        self.agent_runtime_arn.deref()
    }
    /// <p>The unique identifier of the agent runtime.</p>
    pub fn agent_runtime_id(&self) -> &str {
        use std::ops::Deref;
        self.agent_runtime_id.deref()
    }
    /// <p>The version of the agent runtime.</p>
    pub fn agent_runtime_version(&self) -> &str {
        use std::ops::Deref;
        self.agent_runtime_version.deref()
    }
    /// <p>The name of the agent runtime.</p>
    pub fn agent_runtime_name(&self) -> &str {
        use std::ops::Deref;
        self.agent_runtime_name.deref()
    }
    /// <p>The description of the agent runtime.</p>
    pub fn description(&self) -> &str {
        use std::ops::Deref;
        self.description.deref()
    }
    /// <p>The timestamp when the agent runtime was last updated.</p>
    pub fn last_updated_at(&self) -> &::aws_smithy_types::DateTime {
        &self.last_updated_at
    }
    /// <p>The current status of the agent runtime.</p>
    pub fn status(&self) -> &crate::types::AgentRuntimeStatus {
        &self.status
    }
}
impl ::std::fmt::Debug for AgentRuntime {
    fn fmt(&self, f: &mut ::std::fmt::Formatter<'_>) -> ::std::fmt::Result {
        let mut formatter = f.debug_struct("AgentRuntime");
        formatter.field("agent_runtime_arn", &self.agent_runtime_arn);
        formatter.field("agent_runtime_id", &self.agent_runtime_id);
        formatter.field("agent_runtime_version", &self.agent_runtime_version);
        formatter.field("agent_runtime_name", &self.agent_runtime_name);
        formatter.field("description", &"*** Sensitive Data Redacted ***");
        formatter.field("last_updated_at", &self.last_updated_at);
        formatter.field("status", &self.status);
        formatter.finish()
    }
}
impl AgentRuntime {
    /// Creates a new builder-style object to manufacture [`AgentRuntime`](crate::types::AgentRuntime).
    pub fn builder() -> crate::types::builders::AgentRuntimeBuilder {
        crate::types::builders::AgentRuntimeBuilder::default()
    }
}

/// A builder for [`AgentRuntime`](crate::types::AgentRuntime).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default)]
#[non_exhaustive]
pub struct AgentRuntimeBuilder {
    pub(crate) agent_runtime_arn: ::std::option::Option<::std::string::String>,
    pub(crate) agent_runtime_id: ::std::option::Option<::std::string::String>,
    pub(crate) agent_runtime_version: ::std::option::Option<::std::string::String>,
    pub(crate) agent_runtime_name: ::std::option::Option<::std::string::String>,
    pub(crate) description: ::std::option::Option<::std::string::String>,
    pub(crate) last_updated_at: ::std::option::Option<::aws_smithy_types::DateTime>,
    pub(crate) status: ::std::option::Option<crate::types::AgentRuntimeStatus>,
}
impl AgentRuntimeBuilder {
    /// <p>The Amazon Resource Name (ARN) of the agent runtime.</p>
    /// This field is required.
    pub fn agent_runtime_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.agent_runtime_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the agent runtime.</p>
    pub fn set_agent_runtime_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.agent_runtime_arn = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the agent runtime.</p>
    pub fn get_agent_runtime_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.agent_runtime_arn
    }
    /// <p>The unique identifier of the agent runtime.</p>
    /// This field is required.
    pub fn agent_runtime_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.agent_runtime_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The unique identifier of the agent runtime.</p>
    pub fn set_agent_runtime_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.agent_runtime_id = input;
        self
    }
    /// <p>The unique identifier of the agent runtime.</p>
    pub fn get_agent_runtime_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.agent_runtime_id
    }
    /// <p>The version of the agent runtime.</p>
    /// This field is required.
    pub fn agent_runtime_version(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.agent_runtime_version = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The version of the agent runtime.</p>
    pub fn set_agent_runtime_version(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.agent_runtime_version = input;
        self
    }
    /// <p>The version of the agent runtime.</p>
    pub fn get_agent_runtime_version(&self) -> &::std::option::Option<::std::string::String> {
        &self.agent_runtime_version
    }
    /// <p>The name of the agent runtime.</p>
    /// This field is required.
    pub fn agent_runtime_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.agent_runtime_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of the agent runtime.</p>
    pub fn set_agent_runtime_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.agent_runtime_name = input;
        self
    }
    /// <p>The name of the agent runtime.</p>
    pub fn get_agent_runtime_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.agent_runtime_name
    }
    /// <p>The description of the agent runtime.</p>
    /// This field is required.
    pub fn description(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.description = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The description of the agent runtime.</p>
    pub fn set_description(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.description = input;
        self
    }
    /// <p>The description of the agent runtime.</p>
    pub fn get_description(&self) -> &::std::option::Option<::std::string::String> {
        &self.description
    }
    /// <p>The timestamp when the agent runtime was last updated.</p>
    /// This field is required.
    pub fn last_updated_at(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.last_updated_at = ::std::option::Option::Some(input);
        self
    }
    /// <p>The timestamp when the agent runtime was last updated.</p>
    pub fn set_last_updated_at(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.last_updated_at = input;
        self
    }
    /// <p>The timestamp when the agent runtime was last updated.</p>
    pub fn get_last_updated_at(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.last_updated_at
    }
    /// <p>The current status of the agent runtime.</p>
    /// This field is required.
    pub fn status(mut self, input: crate::types::AgentRuntimeStatus) -> Self {
        self.status = ::std::option::Option::Some(input);
        self
    }
    /// <p>The current status of the agent runtime.</p>
    pub fn set_status(mut self, input: ::std::option::Option<crate::types::AgentRuntimeStatus>) -> Self {
        self.status = input;
        self
    }
    /// <p>The current status of the agent runtime.</p>
    pub fn get_status(&self) -> &::std::option::Option<crate::types::AgentRuntimeStatus> {
        &self.status
    }
    /// Consumes the builder and constructs a [`AgentRuntime`](crate::types::AgentRuntime).
    /// This method will fail if any of the following fields are not set:
    /// - [`agent_runtime_arn`](crate::types::builders::AgentRuntimeBuilder::agent_runtime_arn)
    /// - [`agent_runtime_id`](crate::types::builders::AgentRuntimeBuilder::agent_runtime_id)
    /// - [`agent_runtime_version`](crate::types::builders::AgentRuntimeBuilder::agent_runtime_version)
    /// - [`agent_runtime_name`](crate::types::builders::AgentRuntimeBuilder::agent_runtime_name)
    /// - [`description`](crate::types::builders::AgentRuntimeBuilder::description)
    /// - [`last_updated_at`](crate::types::builders::AgentRuntimeBuilder::last_updated_at)
    /// - [`status`](crate::types::builders::AgentRuntimeBuilder::status)
    pub fn build(self) -> ::std::result::Result<crate::types::AgentRuntime, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::AgentRuntime {
            agent_runtime_arn: self.agent_runtime_arn.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "agent_runtime_arn",
                    "agent_runtime_arn was not specified but it is required when building AgentRuntime",
                )
            })?,
            agent_runtime_id: self.agent_runtime_id.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "agent_runtime_id",
                    "agent_runtime_id was not specified but it is required when building AgentRuntime",
                )
            })?,
            agent_runtime_version: self.agent_runtime_version.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "agent_runtime_version",
                    "agent_runtime_version was not specified but it is required when building AgentRuntime",
                )
            })?,
            agent_runtime_name: self.agent_runtime_name.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "agent_runtime_name",
                    "agent_runtime_name was not specified but it is required when building AgentRuntime",
                )
            })?,
            description: self.description.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "description",
                    "description was not specified but it is required when building AgentRuntime",
                )
            })?,
            last_updated_at: self.last_updated_at.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "last_updated_at",
                    "last_updated_at was not specified but it is required when building AgentRuntime",
                )
            })?,
            status: self.status.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "status",
                    "status was not specified but it is required when building AgentRuntime",
                )
            })?,
        })
    }
}
impl ::std::fmt::Debug for AgentRuntimeBuilder {
    fn fmt(&self, f: &mut ::std::fmt::Formatter<'_>) -> ::std::fmt::Result {
        let mut formatter = f.debug_struct("AgentRuntimeBuilder");
        formatter.field("agent_runtime_arn", &self.agent_runtime_arn);
        formatter.field("agent_runtime_id", &self.agent_runtime_id);
        formatter.field("agent_runtime_version", &self.agent_runtime_version);
        formatter.field("agent_runtime_name", &self.agent_runtime_name);
        formatter.field("description", &"*** Sensitive Data Redacted ***");
        formatter.field("last_updated_at", &self.last_updated_at);
        formatter.field("status", &self.status);
        formatter.finish()
    }
}
