// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`PutMetricFilter`](crate::operation::put_metric_filter::builders::PutMetricFilterFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`log_group_name(impl Into<String>)`](crate::operation::put_metric_filter::builders::PutMetricFilterFluentBuilder::log_group_name) / [`set_log_group_name(Option<String>)`](crate::operation::put_metric_filter::builders::PutMetricFilterFluentBuilder::set_log_group_name):<br>required: **true**<br><p>The name of the log group.</p><br>
    ///   - [`filter_name(impl Into<String>)`](crate::operation::put_metric_filter::builders::PutMetricFilterFluentBuilder::filter_name) / [`set_filter_name(Option<String>)`](crate::operation::put_metric_filter::builders::PutMetricFilterFluentBuilder::set_filter_name):<br>required: **true**<br><p>A name for the metric filter.</p><br>
    ///   - [`filter_pattern(impl Into<String>)`](crate::operation::put_metric_filter::builders::PutMetricFilterFluentBuilder::filter_pattern) / [`set_filter_pattern(Option<String>)`](crate::operation::put_metric_filter::builders::PutMetricFilterFluentBuilder::set_filter_pattern):<br>required: **true**<br><p>A filter pattern for extracting metric data out of ingested log events.</p><br>
    ///   - [`metric_transformations(MetricTransformation)`](crate::operation::put_metric_filter::builders::PutMetricFilterFluentBuilder::metric_transformations) / [`set_metric_transformations(Option<Vec::<MetricTransformation>>)`](crate::operation::put_metric_filter::builders::PutMetricFilterFluentBuilder::set_metric_transformations):<br>required: **true**<br><p>A collection of information that defines how metric data gets emitted.</p><br>
    ///   - [`apply_on_transformed_logs(bool)`](crate::operation::put_metric_filter::builders::PutMetricFilterFluentBuilder::apply_on_transformed_logs) / [`set_apply_on_transformed_logs(Option<bool>)`](crate::operation::put_metric_filter::builders::PutMetricFilterFluentBuilder::set_apply_on_transformed_logs):<br>required: **false**<br><p>This parameter is valid only for log groups that have an active log transformer. For more information about log transformers, see <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_PutTransformer.html">PutTransformer</a>.</p> <p>If the log group uses either a log-group level or account-level transformer, and you specify <code>true</code>, the metric filter will be applied on the transformed version of the log events instead of the original ingested log events.</p><br>
    ///   - [`field_selection_criteria(impl Into<String>)`](crate::operation::put_metric_filter::builders::PutMetricFilterFluentBuilder::field_selection_criteria) / [`set_field_selection_criteria(Option<String>)`](crate::operation::put_metric_filter::builders::PutMetricFilterFluentBuilder::set_field_selection_criteria):<br>required: **false**<br><p>A filter expression that specifies which log events should be processed by this metric filter based on system fields such as source account and source region. Uses selection criteria syntax with operators like <code>=</code>, <code>!=</code>, <code>AND</code>, <code>OR</code>, <code>IN</code>, <code>NOT IN</code>. Example: <code>@aws.region = "us-east-1"</code> or <code>@aws.account IN \["123456789012", "987654321098"\]</code>. Maximum length: 2000 characters.</p><br>
    ///   - [`emit_system_field_dimensions(impl Into<String>)`](crate::operation::put_metric_filter::builders::PutMetricFilterFluentBuilder::emit_system_field_dimensions) / [`set_emit_system_field_dimensions(Option<Vec::<String>>)`](crate::operation::put_metric_filter::builders::PutMetricFilterFluentBuilder::set_emit_system_field_dimensions):<br>required: **false**<br><p>A list of system fields to emit as additional dimensions in the generated metrics. Valid values are <code>@aws.account</code> and <code>@aws.region</code>. These dimensions help identify the source of centralized log data and count toward the total dimension limit for metric filters.</p><br>
    /// - On success, responds with [`PutMetricFilterOutput`](crate::operation::put_metric_filter::PutMetricFilterOutput)
    /// - On failure, responds with [`SdkError<PutMetricFilterError>`](crate::operation::put_metric_filter::PutMetricFilterError)
    pub fn put_metric_filter(&self) -> crate::operation::put_metric_filter::builders::PutMetricFilterFluentBuilder {
        crate::operation::put_metric_filter::builders::PutMetricFilterFluentBuilder::new(self.handle.clone())
    }
}
