// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The minimum and maximum amount of memory in mebibytes (MiB) for instance type selection. This ensures that selected instance types have adequate memory for your workloads.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct MemoryMiBRequest {
    /// <p>The minimum amount of memory in MiB. Instance types with less memory than this value are excluded from selection.</p>
    pub min: i32,
    /// <p>The maximum amount of memory in MiB. Instance types with more memory than this value are excluded from selection.</p>
    pub max: ::std::option::Option<i32>,
}
impl MemoryMiBRequest {
    /// <p>The minimum amount of memory in MiB. Instance types with less memory than this value are excluded from selection.</p>
    pub fn min(&self) -> i32 {
        self.min
    }
    /// <p>The maximum amount of memory in MiB. Instance types with more memory than this value are excluded from selection.</p>
    pub fn max(&self) -> ::std::option::Option<i32> {
        self.max
    }
}
impl MemoryMiBRequest {
    /// Creates a new builder-style object to manufacture [`MemoryMiBRequest`](crate::types::MemoryMiBRequest).
    pub fn builder() -> crate::types::builders::MemoryMiBRequestBuilder {
        crate::types::builders::MemoryMiBRequestBuilder::default()
    }
}

/// A builder for [`MemoryMiBRequest`](crate::types::MemoryMiBRequest).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct MemoryMiBRequestBuilder {
    pub(crate) min: ::std::option::Option<i32>,
    pub(crate) max: ::std::option::Option<i32>,
}
impl MemoryMiBRequestBuilder {
    /// <p>The minimum amount of memory in MiB. Instance types with less memory than this value are excluded from selection.</p>
    /// This field is required.
    pub fn min(mut self, input: i32) -> Self {
        self.min = ::std::option::Option::Some(input);
        self
    }
    /// <p>The minimum amount of memory in MiB. Instance types with less memory than this value are excluded from selection.</p>
    pub fn set_min(mut self, input: ::std::option::Option<i32>) -> Self {
        self.min = input;
        self
    }
    /// <p>The minimum amount of memory in MiB. Instance types with less memory than this value are excluded from selection.</p>
    pub fn get_min(&self) -> &::std::option::Option<i32> {
        &self.min
    }
    /// <p>The maximum amount of memory in MiB. Instance types with more memory than this value are excluded from selection.</p>
    pub fn max(mut self, input: i32) -> Self {
        self.max = ::std::option::Option::Some(input);
        self
    }
    /// <p>The maximum amount of memory in MiB. Instance types with more memory than this value are excluded from selection.</p>
    pub fn set_max(mut self, input: ::std::option::Option<i32>) -> Self {
        self.max = input;
        self
    }
    /// <p>The maximum amount of memory in MiB. Instance types with more memory than this value are excluded from selection.</p>
    pub fn get_max(&self) -> &::std::option::Option<i32> {
        &self.max
    }
    /// Consumes the builder and constructs a [`MemoryMiBRequest`](crate::types::MemoryMiBRequest).
    /// This method will fail if any of the following fields are not set:
    /// - [`min`](crate::types::builders::MemoryMiBRequestBuilder::min)
    pub fn build(self) -> ::std::result::Result<crate::types::MemoryMiBRequest, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::MemoryMiBRequest {
            min: self.min.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "min",
                    "min was not specified but it is required when building MemoryMiBRequest",
                )
            })?,
            max: self.max,
        })
    }
}
