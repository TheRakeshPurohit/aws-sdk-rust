// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The updated configuration for a Amazon ECS Managed Instances provider. You can modify the infrastructure role, instance launch template, and tag propagation settings. Changes apply to new instances launched after the update.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct UpdateManagedInstancesProviderConfiguration {
    /// <p>The updated Amazon Resource Name (ARN) of the infrastructure role. The new role must have the necessary permissions to manage instances and access required Amazon Web Services services.</p>
    /// <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/infrastructure_IAM_role.html">Amazon ECS infrastructure IAM role</a> in the <i>Amazon ECS Developer Guide</i>.</p>
    pub infrastructure_role_arn: ::std::string::String,
    /// <p>The updated launch template configuration. Changes to the launch template affect new instances launched after the update, while existing instances continue to use their original configuration.</p>
    pub instance_launch_template: ::std::option::Option<crate::types::InstanceLaunchTemplateUpdate>,
    /// <p>The updated tag propagation setting. When changed, this affects only new instances launched after the update.</p>
    pub propagate_tags: ::std::option::Option<crate::types::PropagateMiTags>,
}
impl UpdateManagedInstancesProviderConfiguration {
    /// <p>The updated Amazon Resource Name (ARN) of the infrastructure role. The new role must have the necessary permissions to manage instances and access required Amazon Web Services services.</p>
    /// <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/infrastructure_IAM_role.html">Amazon ECS infrastructure IAM role</a> in the <i>Amazon ECS Developer Guide</i>.</p>
    pub fn infrastructure_role_arn(&self) -> &str {
        use std::ops::Deref;
        self.infrastructure_role_arn.deref()
    }
    /// <p>The updated launch template configuration. Changes to the launch template affect new instances launched after the update, while existing instances continue to use their original configuration.</p>
    pub fn instance_launch_template(&self) -> ::std::option::Option<&crate::types::InstanceLaunchTemplateUpdate> {
        self.instance_launch_template.as_ref()
    }
    /// <p>The updated tag propagation setting. When changed, this affects only new instances launched after the update.</p>
    pub fn propagate_tags(&self) -> ::std::option::Option<&crate::types::PropagateMiTags> {
        self.propagate_tags.as_ref()
    }
}
impl UpdateManagedInstancesProviderConfiguration {
    /// Creates a new builder-style object to manufacture [`UpdateManagedInstancesProviderConfiguration`](crate::types::UpdateManagedInstancesProviderConfiguration).
    pub fn builder() -> crate::types::builders::UpdateManagedInstancesProviderConfigurationBuilder {
        crate::types::builders::UpdateManagedInstancesProviderConfigurationBuilder::default()
    }
}

/// A builder for [`UpdateManagedInstancesProviderConfiguration`](crate::types::UpdateManagedInstancesProviderConfiguration).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct UpdateManagedInstancesProviderConfigurationBuilder {
    pub(crate) infrastructure_role_arn: ::std::option::Option<::std::string::String>,
    pub(crate) instance_launch_template: ::std::option::Option<crate::types::InstanceLaunchTemplateUpdate>,
    pub(crate) propagate_tags: ::std::option::Option<crate::types::PropagateMiTags>,
}
impl UpdateManagedInstancesProviderConfigurationBuilder {
    /// <p>The updated Amazon Resource Name (ARN) of the infrastructure role. The new role must have the necessary permissions to manage instances and access required Amazon Web Services services.</p>
    /// <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/infrastructure_IAM_role.html">Amazon ECS infrastructure IAM role</a> in the <i>Amazon ECS Developer Guide</i>.</p>
    /// This field is required.
    pub fn infrastructure_role_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.infrastructure_role_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The updated Amazon Resource Name (ARN) of the infrastructure role. The new role must have the necessary permissions to manage instances and access required Amazon Web Services services.</p>
    /// <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/infrastructure_IAM_role.html">Amazon ECS infrastructure IAM role</a> in the <i>Amazon ECS Developer Guide</i>.</p>
    pub fn set_infrastructure_role_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.infrastructure_role_arn = input;
        self
    }
    /// <p>The updated Amazon Resource Name (ARN) of the infrastructure role. The new role must have the necessary permissions to manage instances and access required Amazon Web Services services.</p>
    /// <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/infrastructure_IAM_role.html">Amazon ECS infrastructure IAM role</a> in the <i>Amazon ECS Developer Guide</i>.</p>
    pub fn get_infrastructure_role_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.infrastructure_role_arn
    }
    /// <p>The updated launch template configuration. Changes to the launch template affect new instances launched after the update, while existing instances continue to use their original configuration.</p>
    /// This field is required.
    pub fn instance_launch_template(mut self, input: crate::types::InstanceLaunchTemplateUpdate) -> Self {
        self.instance_launch_template = ::std::option::Option::Some(input);
        self
    }
    /// <p>The updated launch template configuration. Changes to the launch template affect new instances launched after the update, while existing instances continue to use their original configuration.</p>
    pub fn set_instance_launch_template(mut self, input: ::std::option::Option<crate::types::InstanceLaunchTemplateUpdate>) -> Self {
        self.instance_launch_template = input;
        self
    }
    /// <p>The updated launch template configuration. Changes to the launch template affect new instances launched after the update, while existing instances continue to use their original configuration.</p>
    pub fn get_instance_launch_template(&self) -> &::std::option::Option<crate::types::InstanceLaunchTemplateUpdate> {
        &self.instance_launch_template
    }
    /// <p>The updated tag propagation setting. When changed, this affects only new instances launched after the update.</p>
    pub fn propagate_tags(mut self, input: crate::types::PropagateMiTags) -> Self {
        self.propagate_tags = ::std::option::Option::Some(input);
        self
    }
    /// <p>The updated tag propagation setting. When changed, this affects only new instances launched after the update.</p>
    pub fn set_propagate_tags(mut self, input: ::std::option::Option<crate::types::PropagateMiTags>) -> Self {
        self.propagate_tags = input;
        self
    }
    /// <p>The updated tag propagation setting. When changed, this affects only new instances launched after the update.</p>
    pub fn get_propagate_tags(&self) -> &::std::option::Option<crate::types::PropagateMiTags> {
        &self.propagate_tags
    }
    /// Consumes the builder and constructs a [`UpdateManagedInstancesProviderConfiguration`](crate::types::UpdateManagedInstancesProviderConfiguration).
    /// This method will fail if any of the following fields are not set:
    /// - [`infrastructure_role_arn`](crate::types::builders::UpdateManagedInstancesProviderConfigurationBuilder::infrastructure_role_arn)
    pub fn build(
        self,
    ) -> ::std::result::Result<crate::types::UpdateManagedInstancesProviderConfiguration, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::UpdateManagedInstancesProviderConfiguration {
            infrastructure_role_arn: self.infrastructure_role_arn.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "infrastructure_role_arn",
                    "infrastructure_role_arn was not specified but it is required when building UpdateManagedInstancesProviderConfiguration",
                )
            })?,
            instance_launch_template: self.instance_launch_template,
            propagate_tags: self.propagate_tags,
        })
    }
}
