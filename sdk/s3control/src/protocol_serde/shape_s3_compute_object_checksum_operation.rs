// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_s3_compute_object_checksum_operation(
    input: &crate::types::S3ComputeObjectChecksumOperation,
    writer: ::aws_smithy_xml::encode::ElWriter,
) -> ::std::result::Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    #[allow(unused_mut)]
    let mut scope = writer.finish();
    if let Some(var_1) = &input.checksum_algorithm {
        let mut inner_writer = scope.start_el("ChecksumAlgorithm").finish();
        inner_writer.data(var_1.as_str());
    }
    if let Some(var_2) = &input.checksum_type {
        let mut inner_writer = scope.start_el("ChecksumType").finish();
        inner_writer.data(var_2.as_str());
    }
    scope.finish();
    Ok(())
}

#[allow(clippy::needless_question_mark)]
pub fn de_s3_compute_object_checksum_operation(
    decoder: &mut ::aws_smithy_xml::decode::ScopedDecoder,
) -> ::std::result::Result<crate::types::S3ComputeObjectChecksumOperation, ::aws_smithy_xml::decode::XmlDecodeError> {
    #[allow(unused_mut)]
    let mut builder = crate::types::S3ComputeObjectChecksumOperation::builder();
    while let Some(mut tag) = decoder.next_tag() {
        match tag.start_el() {
            s if s.matches("ChecksumAlgorithm") /* ChecksumAlgorithm com.amazonaws.s3control#S3ComputeObjectChecksumOperation$ChecksumAlgorithm */ =>  {
                let var_3 =
                    Some(
                        Result::<crate::types::ComputeObjectChecksumAlgorithm, ::aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            crate::types::ComputeObjectChecksumAlgorithm::from(
                                ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            )
                        )
                        ?
                    )
                ;
                builder = builder.set_checksum_algorithm(var_3);
            }
            ,
            s if s.matches("ChecksumType") /* ChecksumType com.amazonaws.s3control#S3ComputeObjectChecksumOperation$ChecksumType */ =>  {
                let var_4 =
                    Some(
                        Result::<crate::types::ComputeObjectChecksumType, ::aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            crate::types::ComputeObjectChecksumType::from(
                                ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            )
                        )
                        ?
                    )
                ;
                builder = builder.set_checksum_type(var_4);
            }
            ,
            _ => {}
        }
    }
    Ok(builder.build())
}
