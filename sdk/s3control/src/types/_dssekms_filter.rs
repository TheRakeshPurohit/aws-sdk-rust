// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>A filter that returns objects that are encrypted by dual-layer server-side encryption with Amazon Web Services Key Management Service (KMS) keys (DSSE-KMS). You can further refine your filtering by optionally providing a KMS Key ARN to create an object list of DSSE-KMS objects with that specific KMS Key ARN.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct DssekmsFilter {
    /// <p>The Amazon Resource Name (ARN) of the customer managed KMS key to use for the filter to return objects that are encrypted by the specified key. For best performance, we recommend using the <code>KMSKeyArn</code> filter in conjunction with other object metadata filters, like <code>MatchAnyPrefix</code>, <code>CreatedAfter</code>, or <code>MatchAnyStorageClass</code>.</p><note>
    /// <p>You must provide the full KMS Key ARN. You can't use an alias name or alias ARN. For more information, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#key-id-key-ARN"> KMS keys</a> in the <i>Amazon Web Services Key Management Service Developer Guide</i>.</p>
    /// </note>
    pub kms_key_arn: ::std::option::Option<::std::string::String>,
}
impl DssekmsFilter {
    /// <p>The Amazon Resource Name (ARN) of the customer managed KMS key to use for the filter to return objects that are encrypted by the specified key. For best performance, we recommend using the <code>KMSKeyArn</code> filter in conjunction with other object metadata filters, like <code>MatchAnyPrefix</code>, <code>CreatedAfter</code>, or <code>MatchAnyStorageClass</code>.</p><note>
    /// <p>You must provide the full KMS Key ARN. You can't use an alias name or alias ARN. For more information, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#key-id-key-ARN"> KMS keys</a> in the <i>Amazon Web Services Key Management Service Developer Guide</i>.</p>
    /// </note>
    pub fn kms_key_arn(&self) -> ::std::option::Option<&str> {
        self.kms_key_arn.as_deref()
    }
}
impl DssekmsFilter {
    /// Creates a new builder-style object to manufacture [`DssekmsFilter`](crate::types::DssekmsFilter).
    pub fn builder() -> crate::types::builders::DssekmsFilterBuilder {
        crate::types::builders::DssekmsFilterBuilder::default()
    }
}

/// A builder for [`DssekmsFilter`](crate::types::DssekmsFilter).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct DssekmsFilterBuilder {
    pub(crate) kms_key_arn: ::std::option::Option<::std::string::String>,
}
impl DssekmsFilterBuilder {
    /// <p>The Amazon Resource Name (ARN) of the customer managed KMS key to use for the filter to return objects that are encrypted by the specified key. For best performance, we recommend using the <code>KMSKeyArn</code> filter in conjunction with other object metadata filters, like <code>MatchAnyPrefix</code>, <code>CreatedAfter</code>, or <code>MatchAnyStorageClass</code>.</p><note>
    /// <p>You must provide the full KMS Key ARN. You can't use an alias name or alias ARN. For more information, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#key-id-key-ARN"> KMS keys</a> in the <i>Amazon Web Services Key Management Service Developer Guide</i>.</p>
    /// </note>
    pub fn kms_key_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.kms_key_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the customer managed KMS key to use for the filter to return objects that are encrypted by the specified key. For best performance, we recommend using the <code>KMSKeyArn</code> filter in conjunction with other object metadata filters, like <code>MatchAnyPrefix</code>, <code>CreatedAfter</code>, or <code>MatchAnyStorageClass</code>.</p><note>
    /// <p>You must provide the full KMS Key ARN. You can't use an alias name or alias ARN. For more information, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#key-id-key-ARN"> KMS keys</a> in the <i>Amazon Web Services Key Management Service Developer Guide</i>.</p>
    /// </note>
    pub fn set_kms_key_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.kms_key_arn = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the customer managed KMS key to use for the filter to return objects that are encrypted by the specified key. For best performance, we recommend using the <code>KMSKeyArn</code> filter in conjunction with other object metadata filters, like <code>MatchAnyPrefix</code>, <code>CreatedAfter</code>, or <code>MatchAnyStorageClass</code>.</p><note>
    /// <p>You must provide the full KMS Key ARN. You can't use an alias name or alias ARN. For more information, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#key-id-key-ARN"> KMS keys</a> in the <i>Amazon Web Services Key Management Service Developer Guide</i>.</p>
    /// </note>
    pub fn get_kms_key_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.kms_key_arn
    }
    /// Consumes the builder and constructs a [`DssekmsFilter`](crate::types::DssekmsFilter).
    pub fn build(self) -> crate::types::DssekmsFilter {
        crate::types::DssekmsFilter {
            kms_key_arn: self.kms_key_arn,
        }
    }
}
