// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ListClusterEvents`](crate::operation::list_cluster_events::builders::ListClusterEventsFluentBuilder) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::operation::list_cluster_events::builders::ListClusterEventsFluentBuilder::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`cluster_name(impl Into<String>)`](crate::operation::list_cluster_events::builders::ListClusterEventsFluentBuilder::cluster_name) / [`set_cluster_name(Option<String>)`](crate::operation::list_cluster_events::builders::ListClusterEventsFluentBuilder::set_cluster_name):<br>required: **true**<br><p>The name or Amazon Resource Name (ARN) of the HyperPod cluster for which to list events.</p><br>
    ///   - [`instance_group_name(impl Into<String>)`](crate::operation::list_cluster_events::builders::ListClusterEventsFluentBuilder::instance_group_name) / [`set_instance_group_name(Option<String>)`](crate::operation::list_cluster_events::builders::ListClusterEventsFluentBuilder::set_instance_group_name):<br>required: **false**<br><p>The name of the instance group to filter events. If specified, only events related to this instance group are returned.</p><br>
    ///   - [`node_id(impl Into<String>)`](crate::operation::list_cluster_events::builders::ListClusterEventsFluentBuilder::node_id) / [`set_node_id(Option<String>)`](crate::operation::list_cluster_events::builders::ListClusterEventsFluentBuilder::set_node_id):<br>required: **false**<br><p>The EC2 instance ID to filter events. If specified, only events related to this instance are returned.</p><br>
    ///   - [`event_time_after(DateTime)`](crate::operation::list_cluster_events::builders::ListClusterEventsFluentBuilder::event_time_after) / [`set_event_time_after(Option<DateTime>)`](crate::operation::list_cluster_events::builders::ListClusterEventsFluentBuilder::set_event_time_after):<br>required: **false**<br><p>The start of the time range for filtering events. Only events that occurred after this time are included in the results.</p><br>
    ///   - [`event_time_before(DateTime)`](crate::operation::list_cluster_events::builders::ListClusterEventsFluentBuilder::event_time_before) / [`set_event_time_before(Option<DateTime>)`](crate::operation::list_cluster_events::builders::ListClusterEventsFluentBuilder::set_event_time_before):<br>required: **false**<br><p>The end of the time range for filtering events. Only events that occurred before this time are included in the results.</p><br>
    ///   - [`sort_by(EventSortBy)`](crate::operation::list_cluster_events::builders::ListClusterEventsFluentBuilder::sort_by) / [`set_sort_by(Option<EventSortBy>)`](crate::operation::list_cluster_events::builders::ListClusterEventsFluentBuilder::set_sort_by):<br>required: **false**<br><p>The field to use for sorting the event list. Currently, the only supported value is <code>EventTime</code>.</p><br>
    ///   - [`sort_order(SortOrder)`](crate::operation::list_cluster_events::builders::ListClusterEventsFluentBuilder::sort_order) / [`set_sort_order(Option<SortOrder>)`](crate::operation::list_cluster_events::builders::ListClusterEventsFluentBuilder::set_sort_order):<br>required: **false**<br><p>The order in which to sort the results. Valid values are <code>Ascending</code> or <code>Descending</code> (the default is <code>Descending</code>).</p><br>
    ///   - [`resource_type(ClusterEventResourceType)`](crate::operation::list_cluster_events::builders::ListClusterEventsFluentBuilder::resource_type) / [`set_resource_type(Option<ClusterEventResourceType>)`](crate::operation::list_cluster_events::builders::ListClusterEventsFluentBuilder::set_resource_type):<br>required: **false**<br><p>The type of resource for which to filter events. Valid values are <code>Cluster</code>, <code>InstanceGroup</code>, or <code>Instance</code>.</p><br>
    ///   - [`max_results(i32)`](crate::operation::list_cluster_events::builders::ListClusterEventsFluentBuilder::max_results) / [`set_max_results(Option<i32>)`](crate::operation::list_cluster_events::builders::ListClusterEventsFluentBuilder::set_max_results):<br>required: **false**<br><p>The maximum number of events to return in the response. Valid range is 1 to 100.</p><br>
    ///   - [`next_token(impl Into<String>)`](crate::operation::list_cluster_events::builders::ListClusterEventsFluentBuilder::next_token) / [`set_next_token(Option<String>)`](crate::operation::list_cluster_events::builders::ListClusterEventsFluentBuilder::set_next_token):<br>required: **false**<br><p>A token to retrieve the next set of results. This token is obtained from the output of a previous <code>ListClusterEvents</code> call.</p><br>
    /// - On success, responds with [`ListClusterEventsOutput`](crate::operation::list_cluster_events::ListClusterEventsOutput) with field(s):
    ///   - [`next_token(Option<String>)`](crate::operation::list_cluster_events::ListClusterEventsOutput::next_token): <p>A token to retrieve the next set of results. Include this token in subsequent <code>ListClusterEvents</code> calls to fetch more events.</p>
    ///   - [`events(Option<Vec::<ClusterEventSummary>>)`](crate::operation::list_cluster_events::ListClusterEventsOutput::events): <p>A list of event summaries matching the specified criteria.</p>
    /// - On failure, responds with [`SdkError<ListClusterEventsError>`](crate::operation::list_cluster_events::ListClusterEventsError)
    pub fn list_cluster_events(&self) -> crate::operation::list_cluster_events::builders::ListClusterEventsFluentBuilder {
        crate::operation::list_cluster_events::builders::ListClusterEventsFluentBuilder::new(self.handle.clone())
    }
}
