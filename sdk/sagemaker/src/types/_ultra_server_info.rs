// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Contains information about the UltraServer object.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct UltraServerInfo {
    /// <p>The unique identifier of the UltraServer.</p>
    pub id: ::std::option::Option<::std::string::String>,
}
impl UltraServerInfo {
    /// <p>The unique identifier of the UltraServer.</p>
    pub fn id(&self) -> ::std::option::Option<&str> {
        self.id.as_deref()
    }
}
impl UltraServerInfo {
    /// Creates a new builder-style object to manufacture [`UltraServerInfo`](crate::types::UltraServerInfo).
    pub fn builder() -> crate::types::builders::UltraServerInfoBuilder {
        crate::types::builders::UltraServerInfoBuilder::default()
    }
}

/// A builder for [`UltraServerInfo`](crate::types::UltraServerInfo).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct UltraServerInfoBuilder {
    pub(crate) id: ::std::option::Option<::std::string::String>,
}
impl UltraServerInfoBuilder {
    /// <p>The unique identifier of the UltraServer.</p>
    pub fn id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The unique identifier of the UltraServer.</p>
    pub fn set_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.id = input;
        self
    }
    /// <p>The unique identifier of the UltraServer.</p>
    pub fn get_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.id
    }
    /// Consumes the builder and constructs a [`UltraServerInfo`](crate::types::UltraServerInfo).
    pub fn build(self) -> crate::types::UltraServerInfo {
        crate::types::UltraServerInfo { id: self.id }
    }
}
