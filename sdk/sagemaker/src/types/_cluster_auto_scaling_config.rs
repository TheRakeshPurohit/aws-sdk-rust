// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Specifies the autoscaling configuration for a HyperPod cluster.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ClusterAutoScalingConfig {
    /// <p>Describes whether autoscaling is enabled or disabled for the cluster. Valid values are <code>Enable</code> and <code>Disable</code>.</p>
    pub mode: crate::types::ClusterAutoScalingMode,
    /// <p>The type of autoscaler to use. Currently supported value is <code>Karpenter</code>.</p>
    pub auto_scaler_type: ::std::option::Option<crate::types::ClusterAutoScalerType>,
}
impl ClusterAutoScalingConfig {
    /// <p>Describes whether autoscaling is enabled or disabled for the cluster. Valid values are <code>Enable</code> and <code>Disable</code>.</p>
    pub fn mode(&self) -> &crate::types::ClusterAutoScalingMode {
        &self.mode
    }
    /// <p>The type of autoscaler to use. Currently supported value is <code>Karpenter</code>.</p>
    pub fn auto_scaler_type(&self) -> ::std::option::Option<&crate::types::ClusterAutoScalerType> {
        self.auto_scaler_type.as_ref()
    }
}
impl ClusterAutoScalingConfig {
    /// Creates a new builder-style object to manufacture [`ClusterAutoScalingConfig`](crate::types::ClusterAutoScalingConfig).
    pub fn builder() -> crate::types::builders::ClusterAutoScalingConfigBuilder {
        crate::types::builders::ClusterAutoScalingConfigBuilder::default()
    }
}

/// A builder for [`ClusterAutoScalingConfig`](crate::types::ClusterAutoScalingConfig).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct ClusterAutoScalingConfigBuilder {
    pub(crate) mode: ::std::option::Option<crate::types::ClusterAutoScalingMode>,
    pub(crate) auto_scaler_type: ::std::option::Option<crate::types::ClusterAutoScalerType>,
}
impl ClusterAutoScalingConfigBuilder {
    /// <p>Describes whether autoscaling is enabled or disabled for the cluster. Valid values are <code>Enable</code> and <code>Disable</code>.</p>
    /// This field is required.
    pub fn mode(mut self, input: crate::types::ClusterAutoScalingMode) -> Self {
        self.mode = ::std::option::Option::Some(input);
        self
    }
    /// <p>Describes whether autoscaling is enabled or disabled for the cluster. Valid values are <code>Enable</code> and <code>Disable</code>.</p>
    pub fn set_mode(mut self, input: ::std::option::Option<crate::types::ClusterAutoScalingMode>) -> Self {
        self.mode = input;
        self
    }
    /// <p>Describes whether autoscaling is enabled or disabled for the cluster. Valid values are <code>Enable</code> and <code>Disable</code>.</p>
    pub fn get_mode(&self) -> &::std::option::Option<crate::types::ClusterAutoScalingMode> {
        &self.mode
    }
    /// <p>The type of autoscaler to use. Currently supported value is <code>Karpenter</code>.</p>
    pub fn auto_scaler_type(mut self, input: crate::types::ClusterAutoScalerType) -> Self {
        self.auto_scaler_type = ::std::option::Option::Some(input);
        self
    }
    /// <p>The type of autoscaler to use. Currently supported value is <code>Karpenter</code>.</p>
    pub fn set_auto_scaler_type(mut self, input: ::std::option::Option<crate::types::ClusterAutoScalerType>) -> Self {
        self.auto_scaler_type = input;
        self
    }
    /// <p>The type of autoscaler to use. Currently supported value is <code>Karpenter</code>.</p>
    pub fn get_auto_scaler_type(&self) -> &::std::option::Option<crate::types::ClusterAutoScalerType> {
        &self.auto_scaler_type
    }
    /// Consumes the builder and constructs a [`ClusterAutoScalingConfig`](crate::types::ClusterAutoScalingConfig).
    /// This method will fail if any of the following fields are not set:
    /// - [`mode`](crate::types::builders::ClusterAutoScalingConfigBuilder::mode)
    pub fn build(self) -> ::std::result::Result<crate::types::ClusterAutoScalingConfig, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::ClusterAutoScalingConfig {
            mode: self.mode.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "mode",
                    "mode was not specified but it is required when building ClusterAutoScalingConfig",
                )
            })?,
            auto_scaler_type: self.auto_scaler_type,
        })
    }
}
