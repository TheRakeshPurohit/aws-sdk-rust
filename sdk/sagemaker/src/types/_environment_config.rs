// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The configuration for the restricted instance groups (RIG) environment.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct EnvironmentConfig {
    /// <p>Configuration settings for an Amazon FSx for Lustre file system to be used with the cluster.</p>
    pub f_sx_lustre_config: ::std::option::Option<crate::types::FSxLustreConfig>,
}
impl EnvironmentConfig {
    /// <p>Configuration settings for an Amazon FSx for Lustre file system to be used with the cluster.</p>
    pub fn f_sx_lustre_config(&self) -> ::std::option::Option<&crate::types::FSxLustreConfig> {
        self.f_sx_lustre_config.as_ref()
    }
}
impl EnvironmentConfig {
    /// Creates a new builder-style object to manufacture [`EnvironmentConfig`](crate::types::EnvironmentConfig).
    pub fn builder() -> crate::types::builders::EnvironmentConfigBuilder {
        crate::types::builders::EnvironmentConfigBuilder::default()
    }
}

/// A builder for [`EnvironmentConfig`](crate::types::EnvironmentConfig).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct EnvironmentConfigBuilder {
    pub(crate) f_sx_lustre_config: ::std::option::Option<crate::types::FSxLustreConfig>,
}
impl EnvironmentConfigBuilder {
    /// <p>Configuration settings for an Amazon FSx for Lustre file system to be used with the cluster.</p>
    pub fn f_sx_lustre_config(mut self, input: crate::types::FSxLustreConfig) -> Self {
        self.f_sx_lustre_config = ::std::option::Option::Some(input);
        self
    }
    /// <p>Configuration settings for an Amazon FSx for Lustre file system to be used with the cluster.</p>
    pub fn set_f_sx_lustre_config(mut self, input: ::std::option::Option<crate::types::FSxLustreConfig>) -> Self {
        self.f_sx_lustre_config = input;
        self
    }
    /// <p>Configuration settings for an Amazon FSx for Lustre file system to be used with the cluster.</p>
    pub fn get_f_sx_lustre_config(&self) -> &::std::option::Option<crate::types::FSxLustreConfig> {
        &self.f_sx_lustre_config
    }
    /// Consumes the builder and constructs a [`EnvironmentConfig`](crate::types::EnvironmentConfig).
    pub fn build(self) -> crate::types::EnvironmentConfig {
        crate::types::EnvironmentConfig {
            f_sx_lustre_config: self.f_sx_lustre_config,
        }
    }
}
