// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The configuration details for the restricted instance groups (RIG) environment.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct EnvironmentConfigDetails {
    /// <p>Configuration settings for an Amazon FSx for Lustre file system to be used with the cluster.</p>
    pub f_sx_lustre_config: ::std::option::Option<crate::types::FSxLustreConfig>,
    /// <p>The Amazon S3 path where output data from the restricted instance group (RIG) environment will be stored.</p>
    pub s3_output_path: ::std::option::Option<::std::string::String>,
}
impl EnvironmentConfigDetails {
    /// <p>Configuration settings for an Amazon FSx for Lustre file system to be used with the cluster.</p>
    pub fn f_sx_lustre_config(&self) -> ::std::option::Option<&crate::types::FSxLustreConfig> {
        self.f_sx_lustre_config.as_ref()
    }
    /// <p>The Amazon S3 path where output data from the restricted instance group (RIG) environment will be stored.</p>
    pub fn s3_output_path(&self) -> ::std::option::Option<&str> {
        self.s3_output_path.as_deref()
    }
}
impl EnvironmentConfigDetails {
    /// Creates a new builder-style object to manufacture [`EnvironmentConfigDetails`](crate::types::EnvironmentConfigDetails).
    pub fn builder() -> crate::types::builders::EnvironmentConfigDetailsBuilder {
        crate::types::builders::EnvironmentConfigDetailsBuilder::default()
    }
}

/// A builder for [`EnvironmentConfigDetails`](crate::types::EnvironmentConfigDetails).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct EnvironmentConfigDetailsBuilder {
    pub(crate) f_sx_lustre_config: ::std::option::Option<crate::types::FSxLustreConfig>,
    pub(crate) s3_output_path: ::std::option::Option<::std::string::String>,
}
impl EnvironmentConfigDetailsBuilder {
    /// <p>Configuration settings for an Amazon FSx for Lustre file system to be used with the cluster.</p>
    pub fn f_sx_lustre_config(mut self, input: crate::types::FSxLustreConfig) -> Self {
        self.f_sx_lustre_config = ::std::option::Option::Some(input);
        self
    }
    /// <p>Configuration settings for an Amazon FSx for Lustre file system to be used with the cluster.</p>
    pub fn set_f_sx_lustre_config(mut self, input: ::std::option::Option<crate::types::FSxLustreConfig>) -> Self {
        self.f_sx_lustre_config = input;
        self
    }
    /// <p>Configuration settings for an Amazon FSx for Lustre file system to be used with the cluster.</p>
    pub fn get_f_sx_lustre_config(&self) -> &::std::option::Option<crate::types::FSxLustreConfig> {
        &self.f_sx_lustre_config
    }
    /// <p>The Amazon S3 path where output data from the restricted instance group (RIG) environment will be stored.</p>
    pub fn s3_output_path(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.s3_output_path = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon S3 path where output data from the restricted instance group (RIG) environment will be stored.</p>
    pub fn set_s3_output_path(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.s3_output_path = input;
        self
    }
    /// <p>The Amazon S3 path where output data from the restricted instance group (RIG) environment will be stored.</p>
    pub fn get_s3_output_path(&self) -> &::std::option::Option<::std::string::String> {
        &self.s3_output_path
    }
    /// Consumes the builder and constructs a [`EnvironmentConfigDetails`](crate::types::EnvironmentConfigDetails).
    pub fn build(self) -> crate::types::EnvironmentConfigDetails {
        crate::types::EnvironmentConfigDetails {
            f_sx_lustre_config: self.f_sx_lustre_config,
            s3_output_path: self.s3_output_path,
        }
    }
}
