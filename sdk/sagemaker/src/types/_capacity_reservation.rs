// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Information about the Capacity Reservation used by an instance or instance group.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct CapacityReservation {
    /// <p>The Amazon Resource Name (ARN) of the Capacity Reservation.</p>
    pub arn: ::std::option::Option<::std::string::String>,
    /// <p>The type of Capacity Reservation. Valid values are <code>ODCR</code> (On-Demand Capacity Reservation) or <code>CRG</code> (Capacity Reservation Group).</p>
    pub r#type: ::std::option::Option<crate::types::CapacityReservationType>,
}
impl CapacityReservation {
    /// <p>The Amazon Resource Name (ARN) of the Capacity Reservation.</p>
    pub fn arn(&self) -> ::std::option::Option<&str> {
        self.arn.as_deref()
    }
    /// <p>The type of Capacity Reservation. Valid values are <code>ODCR</code> (On-Demand Capacity Reservation) or <code>CRG</code> (Capacity Reservation Group).</p>
    pub fn r#type(&self) -> ::std::option::Option<&crate::types::CapacityReservationType> {
        self.r#type.as_ref()
    }
}
impl CapacityReservation {
    /// Creates a new builder-style object to manufacture [`CapacityReservation`](crate::types::CapacityReservation).
    pub fn builder() -> crate::types::builders::CapacityReservationBuilder {
        crate::types::builders::CapacityReservationBuilder::default()
    }
}

/// A builder for [`CapacityReservation`](crate::types::CapacityReservation).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct CapacityReservationBuilder {
    pub(crate) arn: ::std::option::Option<::std::string::String>,
    pub(crate) r#type: ::std::option::Option<crate::types::CapacityReservationType>,
}
impl CapacityReservationBuilder {
    /// <p>The Amazon Resource Name (ARN) of the Capacity Reservation.</p>
    pub fn arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the Capacity Reservation.</p>
    pub fn set_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.arn = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the Capacity Reservation.</p>
    pub fn get_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.arn
    }
    /// <p>The type of Capacity Reservation. Valid values are <code>ODCR</code> (On-Demand Capacity Reservation) or <code>CRG</code> (Capacity Reservation Group).</p>
    pub fn r#type(mut self, input: crate::types::CapacityReservationType) -> Self {
        self.r#type = ::std::option::Option::Some(input);
        self
    }
    /// <p>The type of Capacity Reservation. Valid values are <code>ODCR</code> (On-Demand Capacity Reservation) or <code>CRG</code> (Capacity Reservation Group).</p>
    pub fn set_type(mut self, input: ::std::option::Option<crate::types::CapacityReservationType>) -> Self {
        self.r#type = input;
        self
    }
    /// <p>The type of Capacity Reservation. Valid values are <code>ODCR</code> (On-Demand Capacity Reservation) or <code>CRG</code> (Capacity Reservation Group).</p>
    pub fn get_type(&self) -> &::std::option::Option<crate::types::CapacityReservationType> {
        &self.r#type
    }
    /// Consumes the builder and constructs a [`CapacityReservation`](crate::types::CapacityReservation).
    pub fn build(self) -> crate::types::CapacityReservation {
        crate::types::CapacityReservation {
            arn: self.arn,
            r#type: self.r#type,
        }
    }
}
