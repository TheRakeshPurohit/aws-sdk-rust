// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Metadata information about an instance group in a HyperPod cluster.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct InstanceGroupMetadata {
    /// <p>An error message describing why the instance group level operation (such as creating, scaling, or deleting) failed.</p>
    pub failure_message: ::std::option::Option<::std::string::String>,
    /// <p>The ID of the Availability Zone where the instance group is located.</p>
    pub availability_zone_id: ::std::option::Option<::std::string::String>,
    /// <p>Information about the Capacity Reservation used by the instance group.</p>
    pub capacity_reservation: ::std::option::Option<crate::types::CapacityReservation>,
    /// <p>The ID of the subnet where the instance group is located.</p>
    pub subnet_id: ::std::option::Option<::std::string::String>,
    /// <p>A list of security group IDs associated with the instance group.</p>
    pub security_group_ids: ::std::option::Option<::std::vec::Vec<::std::string::String>>,
    /// <p>If you use a custom Amazon Machine Image (AMI) for the instance group, this field shows the ID of the custom AMI.</p>
    pub ami_override: ::std::option::Option<::std::string::String>,
}
impl InstanceGroupMetadata {
    /// <p>An error message describing why the instance group level operation (such as creating, scaling, or deleting) failed.</p>
    pub fn failure_message(&self) -> ::std::option::Option<&str> {
        self.failure_message.as_deref()
    }
    /// <p>The ID of the Availability Zone where the instance group is located.</p>
    pub fn availability_zone_id(&self) -> ::std::option::Option<&str> {
        self.availability_zone_id.as_deref()
    }
    /// <p>Information about the Capacity Reservation used by the instance group.</p>
    pub fn capacity_reservation(&self) -> ::std::option::Option<&crate::types::CapacityReservation> {
        self.capacity_reservation.as_ref()
    }
    /// <p>The ID of the subnet where the instance group is located.</p>
    pub fn subnet_id(&self) -> ::std::option::Option<&str> {
        self.subnet_id.as_deref()
    }
    /// <p>A list of security group IDs associated with the instance group.</p>
    ///
    /// If no value was sent for this field, a default will be set. If you want to determine if no value was sent, use `.security_group_ids.is_none()`.
    pub fn security_group_ids(&self) -> &[::std::string::String] {
        self.security_group_ids.as_deref().unwrap_or_default()
    }
    /// <p>If you use a custom Amazon Machine Image (AMI) for the instance group, this field shows the ID of the custom AMI.</p>
    pub fn ami_override(&self) -> ::std::option::Option<&str> {
        self.ami_override.as_deref()
    }
}
impl InstanceGroupMetadata {
    /// Creates a new builder-style object to manufacture [`InstanceGroupMetadata`](crate::types::InstanceGroupMetadata).
    pub fn builder() -> crate::types::builders::InstanceGroupMetadataBuilder {
        crate::types::builders::InstanceGroupMetadataBuilder::default()
    }
}

/// A builder for [`InstanceGroupMetadata`](crate::types::InstanceGroupMetadata).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct InstanceGroupMetadataBuilder {
    pub(crate) failure_message: ::std::option::Option<::std::string::String>,
    pub(crate) availability_zone_id: ::std::option::Option<::std::string::String>,
    pub(crate) capacity_reservation: ::std::option::Option<crate::types::CapacityReservation>,
    pub(crate) subnet_id: ::std::option::Option<::std::string::String>,
    pub(crate) security_group_ids: ::std::option::Option<::std::vec::Vec<::std::string::String>>,
    pub(crate) ami_override: ::std::option::Option<::std::string::String>,
}
impl InstanceGroupMetadataBuilder {
    /// <p>An error message describing why the instance group level operation (such as creating, scaling, or deleting) failed.</p>
    pub fn failure_message(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.failure_message = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>An error message describing why the instance group level operation (such as creating, scaling, or deleting) failed.</p>
    pub fn set_failure_message(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.failure_message = input;
        self
    }
    /// <p>An error message describing why the instance group level operation (such as creating, scaling, or deleting) failed.</p>
    pub fn get_failure_message(&self) -> &::std::option::Option<::std::string::String> {
        &self.failure_message
    }
    /// <p>The ID of the Availability Zone where the instance group is located.</p>
    pub fn availability_zone_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.availability_zone_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The ID of the Availability Zone where the instance group is located.</p>
    pub fn set_availability_zone_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.availability_zone_id = input;
        self
    }
    /// <p>The ID of the Availability Zone where the instance group is located.</p>
    pub fn get_availability_zone_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.availability_zone_id
    }
    /// <p>Information about the Capacity Reservation used by the instance group.</p>
    pub fn capacity_reservation(mut self, input: crate::types::CapacityReservation) -> Self {
        self.capacity_reservation = ::std::option::Option::Some(input);
        self
    }
    /// <p>Information about the Capacity Reservation used by the instance group.</p>
    pub fn set_capacity_reservation(mut self, input: ::std::option::Option<crate::types::CapacityReservation>) -> Self {
        self.capacity_reservation = input;
        self
    }
    /// <p>Information about the Capacity Reservation used by the instance group.</p>
    pub fn get_capacity_reservation(&self) -> &::std::option::Option<crate::types::CapacityReservation> {
        &self.capacity_reservation
    }
    /// <p>The ID of the subnet where the instance group is located.</p>
    pub fn subnet_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.subnet_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The ID of the subnet where the instance group is located.</p>
    pub fn set_subnet_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.subnet_id = input;
        self
    }
    /// <p>The ID of the subnet where the instance group is located.</p>
    pub fn get_subnet_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.subnet_id
    }
    /// Appends an item to `security_group_ids`.
    ///
    /// To override the contents of this collection use [`set_security_group_ids`](Self::set_security_group_ids).
    ///
    /// <p>A list of security group IDs associated with the instance group.</p>
    pub fn security_group_ids(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        let mut v = self.security_group_ids.unwrap_or_default();
        v.push(input.into());
        self.security_group_ids = ::std::option::Option::Some(v);
        self
    }
    /// <p>A list of security group IDs associated with the instance group.</p>
    pub fn set_security_group_ids(mut self, input: ::std::option::Option<::std::vec::Vec<::std::string::String>>) -> Self {
        self.security_group_ids = input;
        self
    }
    /// <p>A list of security group IDs associated with the instance group.</p>
    pub fn get_security_group_ids(&self) -> &::std::option::Option<::std::vec::Vec<::std::string::String>> {
        &self.security_group_ids
    }
    /// <p>If you use a custom Amazon Machine Image (AMI) for the instance group, this field shows the ID of the custom AMI.</p>
    pub fn ami_override(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.ami_override = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>If you use a custom Amazon Machine Image (AMI) for the instance group, this field shows the ID of the custom AMI.</p>
    pub fn set_ami_override(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.ami_override = input;
        self
    }
    /// <p>If you use a custom Amazon Machine Image (AMI) for the instance group, this field shows the ID of the custom AMI.</p>
    pub fn get_ami_override(&self) -> &::std::option::Option<::std::string::String> {
        &self.ami_override
    }
    /// Consumes the builder and constructs a [`InstanceGroupMetadata`](crate::types::InstanceGroupMetadata).
    pub fn build(self) -> crate::types::InstanceGroupMetadata {
        crate::types::InstanceGroupMetadata {
            failure_message: self.failure_message,
            availability_zone_id: self.availability_zone_id,
            capacity_reservation: self.capacity_reservation,
            subnet_id: self.subnet_id,
            security_group_ids: self.security_group_ids,
            ami_override: self.ami_override,
        }
    }
}
