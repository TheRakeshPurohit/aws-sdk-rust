// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Detailed information about a specific event, including event metadata.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct EventDetails {
    /// <p>Metadata specific to the event, which may include information about the cluster, instance group, or instance involved.</p>
    pub event_metadata: ::std::option::Option<crate::types::EventMetadata>,
}
impl EventDetails {
    /// <p>Metadata specific to the event, which may include information about the cluster, instance group, or instance involved.</p>
    pub fn event_metadata(&self) -> ::std::option::Option<&crate::types::EventMetadata> {
        self.event_metadata.as_ref()
    }
}
impl EventDetails {
    /// Creates a new builder-style object to manufacture [`EventDetails`](crate::types::EventDetails).
    pub fn builder() -> crate::types::builders::EventDetailsBuilder {
        crate::types::builders::EventDetailsBuilder::default()
    }
}

/// A builder for [`EventDetails`](crate::types::EventDetails).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct EventDetailsBuilder {
    pub(crate) event_metadata: ::std::option::Option<crate::types::EventMetadata>,
}
impl EventDetailsBuilder {
    /// <p>Metadata specific to the event, which may include information about the cluster, instance group, or instance involved.</p>
    pub fn event_metadata(mut self, input: crate::types::EventMetadata) -> Self {
        self.event_metadata = ::std::option::Option::Some(input);
        self
    }
    /// <p>Metadata specific to the event, which may include information about the cluster, instance group, or instance involved.</p>
    pub fn set_event_metadata(mut self, input: ::std::option::Option<crate::types::EventMetadata>) -> Self {
        self.event_metadata = input;
        self
    }
    /// <p>Metadata specific to the event, which may include information about the cluster, instance group, or instance involved.</p>
    pub fn get_event_metadata(&self) -> &::std::option::Option<crate::types::EventMetadata> {
        &self.event_metadata
    }
    /// Consumes the builder and constructs a [`EventDetails`](crate::types::EventDetails).
    pub fn build(self) -> crate::types::EventDetails {
        crate::types::EventDetails {
            event_metadata: self.event_metadata,
        }
    }
}
