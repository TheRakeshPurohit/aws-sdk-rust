// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Information about additional Elastic Network Interfaces (ENIs) associated with an instance.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct AdditionalEnis {
    /// <p>A list of Elastic Fabric Adapter (EFA) ENIs associated with the instance.</p>
    pub efa_enis: ::std::option::Option<::std::vec::Vec<::std::string::String>>,
}
impl AdditionalEnis {
    /// <p>A list of Elastic Fabric Adapter (EFA) ENIs associated with the instance.</p>
    ///
    /// If no value was sent for this field, a default will be set. If you want to determine if no value was sent, use `.efa_enis.is_none()`.
    pub fn efa_enis(&self) -> &[::std::string::String] {
        self.efa_enis.as_deref().unwrap_or_default()
    }
}
impl AdditionalEnis {
    /// Creates a new builder-style object to manufacture [`AdditionalEnis`](crate::types::AdditionalEnis).
    pub fn builder() -> crate::types::builders::AdditionalEnisBuilder {
        crate::types::builders::AdditionalEnisBuilder::default()
    }
}

/// A builder for [`AdditionalEnis`](crate::types::AdditionalEnis).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct AdditionalEnisBuilder {
    pub(crate) efa_enis: ::std::option::Option<::std::vec::Vec<::std::string::String>>,
}
impl AdditionalEnisBuilder {
    /// Appends an item to `efa_enis`.
    ///
    /// To override the contents of this collection use [`set_efa_enis`](Self::set_efa_enis).
    ///
    /// <p>A list of Elastic Fabric Adapter (EFA) ENIs associated with the instance.</p>
    pub fn efa_enis(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        let mut v = self.efa_enis.unwrap_or_default();
        v.push(input.into());
        self.efa_enis = ::std::option::Option::Some(v);
        self
    }
    /// <p>A list of Elastic Fabric Adapter (EFA) ENIs associated with the instance.</p>
    pub fn set_efa_enis(mut self, input: ::std::option::Option<::std::vec::Vec<::std::string::String>>) -> Self {
        self.efa_enis = input;
        self
    }
    /// <p>A list of Elastic Fabric Adapter (EFA) ENIs associated with the instance.</p>
    pub fn get_efa_enis(&self) -> &::std::option::Option<::std::vec::Vec<::std::string::String>> {
        &self.efa_enis
    }
    /// Consumes the builder and constructs a [`AdditionalEnis`](crate::types::AdditionalEnis).
    pub fn build(self) -> crate::types::AdditionalEnis {
        crate::types::AdditionalEnis { efa_enis: self.efa_enis }
    }
}
