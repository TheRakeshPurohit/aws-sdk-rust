// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct UpdatePipelineVersionInput {
    /// <p>The Amazon Resource Name (ARN) of the pipeline.</p>
    pub pipeline_arn: ::std::option::Option<::std::string::String>,
    /// <p>The pipeline version ID to update.</p>
    pub pipeline_version_id: ::std::option::Option<i64>,
    /// <p>The display name of the pipeline version.</p>
    pub pipeline_version_display_name: ::std::option::Option<::std::string::String>,
    /// <p>The description of the pipeline version.</p>
    pub pipeline_version_description: ::std::option::Option<::std::string::String>,
}
impl UpdatePipelineVersionInput {
    /// <p>The Amazon Resource Name (ARN) of the pipeline.</p>
    pub fn pipeline_arn(&self) -> ::std::option::Option<&str> {
        self.pipeline_arn.as_deref()
    }
    /// <p>The pipeline version ID to update.</p>
    pub fn pipeline_version_id(&self) -> ::std::option::Option<i64> {
        self.pipeline_version_id
    }
    /// <p>The display name of the pipeline version.</p>
    pub fn pipeline_version_display_name(&self) -> ::std::option::Option<&str> {
        self.pipeline_version_display_name.as_deref()
    }
    /// <p>The description of the pipeline version.</p>
    pub fn pipeline_version_description(&self) -> ::std::option::Option<&str> {
        self.pipeline_version_description.as_deref()
    }
}
impl UpdatePipelineVersionInput {
    /// Creates a new builder-style object to manufacture [`UpdatePipelineVersionInput`](crate::operation::update_pipeline_version::UpdatePipelineVersionInput).
    pub fn builder() -> crate::operation::update_pipeline_version::builders::UpdatePipelineVersionInputBuilder {
        crate::operation::update_pipeline_version::builders::UpdatePipelineVersionInputBuilder::default()
    }
}

/// A builder for [`UpdatePipelineVersionInput`](crate::operation::update_pipeline_version::UpdatePipelineVersionInput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct UpdatePipelineVersionInputBuilder {
    pub(crate) pipeline_arn: ::std::option::Option<::std::string::String>,
    pub(crate) pipeline_version_id: ::std::option::Option<i64>,
    pub(crate) pipeline_version_display_name: ::std::option::Option<::std::string::String>,
    pub(crate) pipeline_version_description: ::std::option::Option<::std::string::String>,
}
impl UpdatePipelineVersionInputBuilder {
    /// <p>The Amazon Resource Name (ARN) of the pipeline.</p>
    /// This field is required.
    pub fn pipeline_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.pipeline_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the pipeline.</p>
    pub fn set_pipeline_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.pipeline_arn = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the pipeline.</p>
    pub fn get_pipeline_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.pipeline_arn
    }
    /// <p>The pipeline version ID to update.</p>
    /// This field is required.
    pub fn pipeline_version_id(mut self, input: i64) -> Self {
        self.pipeline_version_id = ::std::option::Option::Some(input);
        self
    }
    /// <p>The pipeline version ID to update.</p>
    pub fn set_pipeline_version_id(mut self, input: ::std::option::Option<i64>) -> Self {
        self.pipeline_version_id = input;
        self
    }
    /// <p>The pipeline version ID to update.</p>
    pub fn get_pipeline_version_id(&self) -> &::std::option::Option<i64> {
        &self.pipeline_version_id
    }
    /// <p>The display name of the pipeline version.</p>
    pub fn pipeline_version_display_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.pipeline_version_display_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The display name of the pipeline version.</p>
    pub fn set_pipeline_version_display_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.pipeline_version_display_name = input;
        self
    }
    /// <p>The display name of the pipeline version.</p>
    pub fn get_pipeline_version_display_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.pipeline_version_display_name
    }
    /// <p>The description of the pipeline version.</p>
    pub fn pipeline_version_description(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.pipeline_version_description = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The description of the pipeline version.</p>
    pub fn set_pipeline_version_description(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.pipeline_version_description = input;
        self
    }
    /// <p>The description of the pipeline version.</p>
    pub fn get_pipeline_version_description(&self) -> &::std::option::Option<::std::string::String> {
        &self.pipeline_version_description
    }
    /// Consumes the builder and constructs a [`UpdatePipelineVersionInput`](crate::operation::update_pipeline_version::UpdatePipelineVersionInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<crate::operation::update_pipeline_version::UpdatePipelineVersionInput, ::aws_smithy_types::error::operation::BuildError>
    {
        ::std::result::Result::Ok(crate::operation::update_pipeline_version::UpdatePipelineVersionInput {
            pipeline_arn: self.pipeline_arn,
            pipeline_version_id: self.pipeline_version_id,
            pipeline_version_display_name: self.pipeline_version_display_name,
            pipeline_version_description: self.pipeline_version_description,
        })
    }
}
