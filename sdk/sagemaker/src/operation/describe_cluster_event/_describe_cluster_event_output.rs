// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct DescribeClusterEventOutput {
    /// <p>Detailed information about the requested cluster event, including event metadata for various resource types such as <code>Cluster</code>, <code>InstanceGroup</code>, <code>Instance</code>, and their associated attributes.</p>
    pub event_details: ::std::option::Option<crate::types::ClusterEventDetail>,
    _request_id: Option<String>,
}
impl DescribeClusterEventOutput {
    /// <p>Detailed information about the requested cluster event, including event metadata for various resource types such as <code>Cluster</code>, <code>InstanceGroup</code>, <code>Instance</code>, and their associated attributes.</p>
    pub fn event_details(&self) -> ::std::option::Option<&crate::types::ClusterEventDetail> {
        self.event_details.as_ref()
    }
}
impl ::aws_types::request_id::RequestId for DescribeClusterEventOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl DescribeClusterEventOutput {
    /// Creates a new builder-style object to manufacture [`DescribeClusterEventOutput`](crate::operation::describe_cluster_event::DescribeClusterEventOutput).
    pub fn builder() -> crate::operation::describe_cluster_event::builders::DescribeClusterEventOutputBuilder {
        crate::operation::describe_cluster_event::builders::DescribeClusterEventOutputBuilder::default()
    }
}

/// A builder for [`DescribeClusterEventOutput`](crate::operation::describe_cluster_event::DescribeClusterEventOutput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct DescribeClusterEventOutputBuilder {
    pub(crate) event_details: ::std::option::Option<crate::types::ClusterEventDetail>,
    _request_id: Option<String>,
}
impl DescribeClusterEventOutputBuilder {
    /// <p>Detailed information about the requested cluster event, including event metadata for various resource types such as <code>Cluster</code>, <code>InstanceGroup</code>, <code>Instance</code>, and their associated attributes.</p>
    pub fn event_details(mut self, input: crate::types::ClusterEventDetail) -> Self {
        self.event_details = ::std::option::Option::Some(input);
        self
    }
    /// <p>Detailed information about the requested cluster event, including event metadata for various resource types such as <code>Cluster</code>, <code>InstanceGroup</code>, <code>Instance</code>, and their associated attributes.</p>
    pub fn set_event_details(mut self, input: ::std::option::Option<crate::types::ClusterEventDetail>) -> Self {
        self.event_details = input;
        self
    }
    /// <p>Detailed information about the requested cluster event, including event metadata for various resource types such as <code>Cluster</code>, <code>InstanceGroup</code>, <code>Instance</code>, and their associated attributes.</p>
    pub fn get_event_details(&self) -> &::std::option::Option<crate::types::ClusterEventDetail> {
        &self.event_details
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`DescribeClusterEventOutput`](crate::operation::describe_cluster_event::DescribeClusterEventOutput).
    pub fn build(self) -> crate::operation::describe_cluster_event::DescribeClusterEventOutput {
        crate::operation::describe_cluster_event::DescribeClusterEventOutput {
            event_details: self.event_details,
            _request_id: self._request_id,
        }
    }
}
