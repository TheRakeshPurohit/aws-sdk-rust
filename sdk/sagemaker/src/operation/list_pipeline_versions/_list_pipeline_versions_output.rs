// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ListPipelineVersionsOutput {
    /// <p>Contains a sorted list of pipeline version summary objects matching the specified filters. Each version summary includes the pipeline version ID, the creation date, and the last pipeline execution created from that version. This list can be empty.</p>
    pub pipeline_version_summaries: ::std::option::Option<::std::vec::Vec<crate::types::PipelineVersionSummary>>,
    /// <p>If the result of the previous <code>ListPipelineVersions</code> request was truncated, the response includes a <code>NextToken</code>. To retrieve the next set of pipeline versions, use this token in your next request.</p>
    pub next_token: ::std::option::Option<::std::string::String>,
    _request_id: Option<String>,
}
impl ListPipelineVersionsOutput {
    /// <p>Contains a sorted list of pipeline version summary objects matching the specified filters. Each version summary includes the pipeline version ID, the creation date, and the last pipeline execution created from that version. This list can be empty.</p>
    ///
    /// If no value was sent for this field, a default will be set. If you want to determine if no value was sent, use `.pipeline_version_summaries.is_none()`.
    pub fn pipeline_version_summaries(&self) -> &[crate::types::PipelineVersionSummary] {
        self.pipeline_version_summaries.as_deref().unwrap_or_default()
    }
    /// <p>If the result of the previous <code>ListPipelineVersions</code> request was truncated, the response includes a <code>NextToken</code>. To retrieve the next set of pipeline versions, use this token in your next request.</p>
    pub fn next_token(&self) -> ::std::option::Option<&str> {
        self.next_token.as_deref()
    }
}
impl ::aws_types::request_id::RequestId for ListPipelineVersionsOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl ListPipelineVersionsOutput {
    /// Creates a new builder-style object to manufacture [`ListPipelineVersionsOutput`](crate::operation::list_pipeline_versions::ListPipelineVersionsOutput).
    pub fn builder() -> crate::operation::list_pipeline_versions::builders::ListPipelineVersionsOutputBuilder {
        crate::operation::list_pipeline_versions::builders::ListPipelineVersionsOutputBuilder::default()
    }
}

/// A builder for [`ListPipelineVersionsOutput`](crate::operation::list_pipeline_versions::ListPipelineVersionsOutput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct ListPipelineVersionsOutputBuilder {
    pub(crate) pipeline_version_summaries: ::std::option::Option<::std::vec::Vec<crate::types::PipelineVersionSummary>>,
    pub(crate) next_token: ::std::option::Option<::std::string::String>,
    _request_id: Option<String>,
}
impl ListPipelineVersionsOutputBuilder {
    /// Appends an item to `pipeline_version_summaries`.
    ///
    /// To override the contents of this collection use [`set_pipeline_version_summaries`](Self::set_pipeline_version_summaries).
    ///
    /// <p>Contains a sorted list of pipeline version summary objects matching the specified filters. Each version summary includes the pipeline version ID, the creation date, and the last pipeline execution created from that version. This list can be empty.</p>
    pub fn pipeline_version_summaries(mut self, input: crate::types::PipelineVersionSummary) -> Self {
        let mut v = self.pipeline_version_summaries.unwrap_or_default();
        v.push(input);
        self.pipeline_version_summaries = ::std::option::Option::Some(v);
        self
    }
    /// <p>Contains a sorted list of pipeline version summary objects matching the specified filters. Each version summary includes the pipeline version ID, the creation date, and the last pipeline execution created from that version. This list can be empty.</p>
    pub fn set_pipeline_version_summaries(mut self, input: ::std::option::Option<::std::vec::Vec<crate::types::PipelineVersionSummary>>) -> Self {
        self.pipeline_version_summaries = input;
        self
    }
    /// <p>Contains a sorted list of pipeline version summary objects matching the specified filters. Each version summary includes the pipeline version ID, the creation date, and the last pipeline execution created from that version. This list can be empty.</p>
    pub fn get_pipeline_version_summaries(&self) -> &::std::option::Option<::std::vec::Vec<crate::types::PipelineVersionSummary>> {
        &self.pipeline_version_summaries
    }
    /// <p>If the result of the previous <code>ListPipelineVersions</code> request was truncated, the response includes a <code>NextToken</code>. To retrieve the next set of pipeline versions, use this token in your next request.</p>
    pub fn next_token(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.next_token = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>If the result of the previous <code>ListPipelineVersions</code> request was truncated, the response includes a <code>NextToken</code>. To retrieve the next set of pipeline versions, use this token in your next request.</p>
    pub fn set_next_token(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.next_token = input;
        self
    }
    /// <p>If the result of the previous <code>ListPipelineVersions</code> request was truncated, the response includes a <code>NextToken</code>. To retrieve the next set of pipeline versions, use this token in your next request.</p>
    pub fn get_next_token(&self) -> &::std::option::Option<::std::string::String> {
        &self.next_token
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`ListPipelineVersionsOutput`](crate::operation::list_pipeline_versions::ListPipelineVersionsOutput).
    pub fn build(self) -> crate::operation::list_pipeline_versions::ListPipelineVersionsOutput {
        crate::operation::list_pipeline_versions::ListPipelineVersionsOutput {
            pipeline_version_summaries: self.pipeline_version_summaries,
            next_token: self.next_token,
            _request_id: self._request_id,
        }
    }
}
