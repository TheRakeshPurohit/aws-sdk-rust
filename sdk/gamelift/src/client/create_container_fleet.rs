// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateContainerFleet`](crate::operation::create_container_fleet::builders::CreateContainerFleetFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`fleet_role_arn(impl Into<String>)`](crate::operation::create_container_fleet::builders::CreateContainerFleetFluentBuilder::fleet_role_arn) / [`set_fleet_role_arn(Option<String>)`](crate::operation::create_container_fleet::builders::CreateContainerFleetFluentBuilder::set_fleet_role_arn):<br>required: **true**<br><p>The unique identifier for an Identity and Access Management (IAM) role with permissions to run your containers on resources that are managed by Amazon GameLift Servers. Use an IAM service role with the <code>GameLiftContainerFleetPolicy</code> managed policy attached. For more information, see <a href="https://docs.aws.amazon.com/gamelift/latest/developerguide/setting-up-role.html">Set up an IAM service role</a>. You can't change this fleet property after the fleet is created.</p> <p>IAM role ARN values use the following pattern: <code>arn:aws:iam::\[Amazon Web Services account\]:role/\[role name\]</code>.</p><br>
    ///   - [`description(impl Into<String>)`](crate::operation::create_container_fleet::builders::CreateContainerFleetFluentBuilder::description) / [`set_description(Option<String>)`](crate::operation::create_container_fleet::builders::CreateContainerFleetFluentBuilder::set_description):<br>required: **false**<br><p>A meaningful description of the container fleet.</p><br>
    ///   - [`game_server_container_group_definition_name(impl Into<String>)`](crate::operation::create_container_fleet::builders::CreateContainerFleetFluentBuilder::game_server_container_group_definition_name) / [`set_game_server_container_group_definition_name(Option<String>)`](crate::operation::create_container_fleet::builders::CreateContainerFleetFluentBuilder::set_game_server_container_group_definition_name):<br>required: **false**<br><p>A container group definition resource that describes how to deploy containers with your game server build and support software onto each fleet instance. You can specify the container group definition's name to use the latest version. Alternatively, provide an ARN value with a specific version number.</p> <p>Create a container group definition by calling <a href="https://docs.aws.amazon.com/gamelift/latest/apireference/API_CreateContainerGroupDefinition.html">CreateContainerGroupDefinition</a>. This operation creates a <a href="https://docs.aws.amazon.com/gamelift/latest/apireference/API_ContainerGroupDefinition.html">ContainerGroupDefinition</a> resource.</p><br>
    ///   - [`per_instance_container_group_definition_name(impl Into<String>)`](crate::operation::create_container_fleet::builders::CreateContainerFleetFluentBuilder::per_instance_container_group_definition_name) / [`set_per_instance_container_group_definition_name(Option<String>)`](crate::operation::create_container_fleet::builders::CreateContainerFleetFluentBuilder::set_per_instance_container_group_definition_name):<br>required: **false**<br><p>The name of a container group definition resource that describes a set of axillary software. A fleet instance has one process for executables in this container group. A per-instance container group is optional. You can update the fleet to add or remove a per-instance container group at any time. You can specify the container group definition's name to use the latest version. Alternatively, provide an ARN value with a specific version number.</p> <p>Create a container group definition by calling <a href="https://docs.aws.amazon.com/gamelift/latest/apireference/API_CreateContainerGroupDefinition.html">https://docs.aws.amazon.com/gamelift/latest/apireference/API_CreateContainerGroupDefinition.html</a>. This operation creates a <a href="https://docs.aws.amazon.com/gamelift/latest/apireference/API_ContainerGroupDefinition.html">https://docs.aws.amazon.com/gamelift/latest/apireference/API_ContainerGroupDefinition.html</a> resource.</p><br>
    ///   - [`instance_connection_port_range(ConnectionPortRange)`](crate::operation::create_container_fleet::builders::CreateContainerFleetFluentBuilder::instance_connection_port_range) / [`set_instance_connection_port_range(Option<ConnectionPortRange>)`](crate::operation::create_container_fleet::builders::CreateContainerFleetFluentBuilder::set_instance_connection_port_range):<br>required: **false**<br><p>The set of port numbers to open on each fleet instance. A fleet's connection ports map to container ports that are configured in the fleet's container group definitions.</p> <p>By default, Amazon GameLift Servers calculates an optimal port range based on your fleet configuration. To use the calculated range, don't set this parameter. The values are:</p> <ul>  <li>   <p>Port range: 4192 to a number calculated based on your fleet configuration. Amazon GameLift Servers uses the following formula: <code>4192 + \[# of game server container groups per fleet instance\] * \[# of container ports in the game server container group definition\] + \[# of container ports in the game server container group definition\]</code></p></li> </ul> <p>You can also choose to manually set this parameter. When manually setting this parameter, you must use port numbers that match the fleet's inbound permissions port range.</p><note>  <p>If you set values manually, Amazon GameLift Servers no longer calculates a port range for you, even if you later remove the manual settings.</p> </note><br>
    ///   - [`instance_inbound_permissions(IpPermission)`](crate::operation::create_container_fleet::builders::CreateContainerFleetFluentBuilder::instance_inbound_permissions) / [`set_instance_inbound_permissions(Option<Vec::<IpPermission>>)`](crate::operation::create_container_fleet::builders::CreateContainerFleetFluentBuilder::set_instance_inbound_permissions):<br>required: **false**<br><p>The IP address ranges and port settings that allow inbound traffic to access game server processes and other processes on this fleet. As a best practice, when remotely accessing a fleet instance, we recommend opening ports only when you need them and closing them when you're finished.</p> <p>By default, Amazon GameLift Servers calculates an optimal port range based on your fleet configuration. To use the calculated range, don't set this parameter. The values are:</p> <ul>  <li>   <p>Protocol: UDP</p></li>  <li>   <p>Port range: 4192 to a number calculated based on your fleet configuration. Amazon GameLift Servers uses the following formula: <code>4192 + \[# of game server container groups per fleet instance\] * \[# of container ports in the game server container group definition\] + \[# of container ports in the game server container group definition\]</code></p></li> </ul> <p>You can also choose to manually set this parameter. When manually setting this parameter, you must use port numbers that match the fleet's connection port range.</p><note>  <p>If you set values manually, Amazon GameLift Servers no longer calculates a port range for you, even if you later remove the manual settings.</p> </note><br>
    ///   - [`game_server_container_groups_per_instance(i32)`](crate::operation::create_container_fleet::builders::CreateContainerFleetFluentBuilder::game_server_container_groups_per_instance) / [`set_game_server_container_groups_per_instance(Option<i32>)`](crate::operation::create_container_fleet::builders::CreateContainerFleetFluentBuilder::set_game_server_container_groups_per_instance):<br>required: **false**<br><p>The number of times to replicate the game server container group on each fleet instance.</p> <p>By default, Amazon GameLift Servers calculates the maximum number of game server container groups that can fit on each instance. This calculation is based on the CPU and memory resources of the fleet's instance type). To use the calculated maximum, don't set this parameter. If you set this number manually, Amazon GameLift Servers uses your value as long as it's less than the calculated maximum.</p><br>
    ///   - [`instance_type(impl Into<String>)`](crate::operation::create_container_fleet::builders::CreateContainerFleetFluentBuilder::instance_type) / [`set_instance_type(Option<String>)`](crate::operation::create_container_fleet::builders::CreateContainerFleetFluentBuilder::set_instance_type):<br>required: **false**<br><p>The Amazon EC2 instance type to use for all instances in the fleet. For multi-location fleets, the instance type must be available in the home region and all remote locations. Instance type determines the computing resources and processing power that's available to host your game servers. This includes including CPU, memory, storage, and networking capacity.</p> <p>By default, Amazon GameLift Servers selects an instance type that fits the needs of your container groups and is available in all selected fleet locations. You can also choose to manually set this parameter. See <a href="http://aws.amazon.com/ec2/instance-types/">Amazon Elastic Compute Cloud Instance Types</a> for detailed descriptions of Amazon EC2 instance types.</p> <p>You can't update this fleet property later.</p><br>
    ///   - [`billing_type(ContainerFleetBillingType)`](crate::operation::create_container_fleet::builders::CreateContainerFleetFluentBuilder::billing_type) / [`set_billing_type(Option<ContainerFleetBillingType>)`](crate::operation::create_container_fleet::builders::CreateContainerFleetFluentBuilder::set_billing_type):<br>required: **false**<br><p>Indicates whether to use On-Demand or Spot instances for this fleet. Learn more about when to use <a href="https://docs.aws.amazon.com/gamelift/latest/developerguide/gamelift-ec2-instances.html#gamelift-ec2-instances-spot"> On-Demand versus Spot Instances</a>. This fleet property can't be changed after the fleet is created.</p> <p>By default, this property is set to <code>ON_DEMAND</code>.</p> <p>You can't update this fleet property later.</p><br>
    ///   - [`locations(LocationConfiguration)`](crate::operation::create_container_fleet::builders::CreateContainerFleetFluentBuilder::locations) / [`set_locations(Option<Vec::<LocationConfiguration>>)`](crate::operation::create_container_fleet::builders::CreateContainerFleetFluentBuilder::set_locations):<br>required: **false**<br><p>A set of locations to deploy container fleet instances to. You can add any Amazon Web Services Region or Local Zone that's supported by Amazon GameLift Servers. Provide a list of one or more Amazon Web Services Region codes, such as <code>us-west-2</code>, or Local Zone names. Also include the fleet's home Region, which is the Amazon Web Services Region where the fleet is created. For a list of supported Regions and Local Zones, see <a href="https://docs.aws.amazon.com/gamelift/latest/developerguide/gamelift-regions.html"> Amazon GameLift Servers service locations</a> for managed hosting.</p><br>
    ///   - [`metric_groups(impl Into<String>)`](crate::operation::create_container_fleet::builders::CreateContainerFleetFluentBuilder::metric_groups) / [`set_metric_groups(Option<Vec::<String>>)`](crate::operation::create_container_fleet::builders::CreateContainerFleetFluentBuilder::set_metric_groups):<br>required: **false**<br><p>The name of an Amazon Web Services CloudWatch metric group to add this fleet to. You can use a metric group to aggregate metrics for multiple fleets. You can specify an existing metric group name or use a new name to create a new metric group. Each fleet can have only one metric group, but you can change this value at any time.</p><br>
    ///   - [`new_game_session_protection_policy(ProtectionPolicy)`](crate::operation::create_container_fleet::builders::CreateContainerFleetFluentBuilder::new_game_session_protection_policy) / [`set_new_game_session_protection_policy(Option<ProtectionPolicy>)`](crate::operation::create_container_fleet::builders::CreateContainerFleetFluentBuilder::set_new_game_session_protection_policy):<br>required: **false**<br><p>Determines whether Amazon GameLift Servers can shut down game sessions on the fleet that are actively running and hosting players. Amazon GameLift Servers might prompt an instance shutdown when scaling down fleet capacity or when retiring unhealthy instances. You can also set game session protection for individual game sessions using <a href="gamelift/latest/apireference/API_UpdateGameSession.html">UpdateGameSession</a>.</p> <ul>  <li>   <p><b>NoProtection</b> -- Game sessions can be shut down during active gameplay.</p></li>  <li>   <p><b>FullProtection</b> -- Game sessions in <code>ACTIVE</code> status can't be shut down.</p></li> </ul> <p>By default, this property is set to <code>NoProtection</code>.</p><br>
    ///   - [`game_session_creation_limit_policy(GameSessionCreationLimitPolicy)`](crate::operation::create_container_fleet::builders::CreateContainerFleetFluentBuilder::game_session_creation_limit_policy) / [`set_game_session_creation_limit_policy(Option<GameSessionCreationLimitPolicy>)`](crate::operation::create_container_fleet::builders::CreateContainerFleetFluentBuilder::set_game_session_creation_limit_policy):<br>required: **false**<br><p>A policy that limits the number of game sessions that each individual player can create on instances in this fleet. The limit applies for a specified span of time.</p><br>
    ///   - [`log_configuration(LogConfiguration)`](crate::operation::create_container_fleet::builders::CreateContainerFleetFluentBuilder::log_configuration) / [`set_log_configuration(Option<LogConfiguration>)`](crate::operation::create_container_fleet::builders::CreateContainerFleetFluentBuilder::set_log_configuration):<br>required: **false**<br><p>A method for collecting container logs for the fleet. Amazon GameLift Servers saves all standard output for each container in logs, including game session logs. You can select from the following methods:</p> <ul>  <li>   <p><code>CLOUDWATCH</code> -- Send logs to an Amazon CloudWatch log group that you define. Each container emits a log stream, which is organized in the log group.</p></li>  <li>   <p><code>S3</code> -- Store logs in an Amazon S3 bucket that you define.</p></li>  <li>   <p><code>NONE</code> -- Don't collect container logs.</p></li> </ul> <p>By default, this property is set to <code>CLOUDWATCH</code>.</p> <p>Amazon GameLift Servers requires permissions to send logs other Amazon Web Services services in your account. These permissions are included in the IAM fleet role for this container fleet (see <code>FleetRoleArn)</code>.</p><br>
    ///   - [`tags(Tag)`](crate::operation::create_container_fleet::builders::CreateContainerFleetFluentBuilder::tags) / [`set_tags(Option<Vec::<Tag>>)`](crate::operation::create_container_fleet::builders::CreateContainerFleetFluentBuilder::set_tags):<br>required: **false**<br><p>A list of labels to assign to the new fleet resource. Tags are developer-defined key-value pairs. Tagging Amazon Web Services resources are useful for resource management, access management and cost allocation. For more information, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html"> Tagging Amazon Web Services Resources</a> in the <i>Amazon Web Services General Reference</i>.</p><br>
    /// - On success, responds with [`CreateContainerFleetOutput`](crate::operation::create_container_fleet::CreateContainerFleetOutput) with field(s):
    ///   - [`container_fleet(Option<ContainerFleet>)`](crate::operation::create_container_fleet::CreateContainerFleetOutput::container_fleet): <p>The properties for the new container fleet, including current status. All fleets are initially placed in <code>PENDING</code> status.</p>
    /// - On failure, responds with [`SdkError<CreateContainerFleetError>`](crate::operation::create_container_fleet::CreateContainerFleetError)
    pub fn create_container_fleet(&self) -> crate::operation::create_container_fleet::builders::CreateContainerFleetFluentBuilder {
        crate::operation::create_container_fleet::builders::CreateContainerFleetFluentBuilder::new(self.handle.clone())
    }
}
