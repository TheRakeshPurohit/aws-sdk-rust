// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`UpdateContainerFleet`](crate::operation::update_container_fleet::builders::UpdateContainerFleetFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`fleet_id(impl Into<String>)`](crate::operation::update_container_fleet::builders::UpdateContainerFleetFluentBuilder::fleet_id) / [`set_fleet_id(Option<String>)`](crate::operation::update_container_fleet::builders::UpdateContainerFleetFluentBuilder::set_fleet_id):<br>required: **true**<br><p>A unique identifier for the container fleet to update. You can use either the fleet ID or ARN value.</p><br>
    ///   - [`game_server_container_group_definition_name(impl Into<String>)`](crate::operation::update_container_fleet::builders::UpdateContainerFleetFluentBuilder::game_server_container_group_definition_name) / [`set_game_server_container_group_definition_name(Option<String>)`](crate::operation::update_container_fleet::builders::UpdateContainerFleetFluentBuilder::set_game_server_container_group_definition_name):<br>required: **false**<br><p>The name or ARN value of a new game server container group definition to deploy on the fleet. If you're updating the fleet to a specific version of a container group definition, use the ARN value and include the version number. If you're updating the fleet to the latest version of a container group definition, you can use the name value. You can't remove a fleet's game server container group definition, you can only update or replace it with another definition.</p> <p>Update a container group definition by calling <a href="https://docs.aws.amazon.com/gamelift/latest/apireference/API_UpdateContainerGroupDefinition.html">UpdateContainerGroupDefinition</a>. This operation creates a <a href="https://docs.aws.amazon.com/gamelift/latest/apireference/API_ContainerGroupDefinition.html">ContainerGroupDefinition</a> resource with an incremented version.</p><br>
    ///   - [`per_instance_container_group_definition_name(impl Into<String>)`](crate::operation::update_container_fleet::builders::UpdateContainerFleetFluentBuilder::per_instance_container_group_definition_name) / [`set_per_instance_container_group_definition_name(Option<String>)`](crate::operation::update_container_fleet::builders::UpdateContainerFleetFluentBuilder::set_per_instance_container_group_definition_name):<br>required: **false**<br><p>The name or ARN value of a new per-instance container group definition to deploy on the fleet. If you're updating the fleet to a specific version of a container group definition, use the ARN value and include the version number. If you're updating the fleet to the latest version of a container group definition, you can use the name value.</p> <p>Update a container group definition by calling <a href="https://docs.aws.amazon.com/gamelift/latest/apireference/API_UpdateContainerGroupDefinition.html">UpdateContainerGroupDefinition</a>. This operation creates a <a href="https://docs.aws.amazon.com/gamelift/latest/apireference/API_ContainerGroupDefinition.html">ContainerGroupDefinition</a> resource with an incremented version.</p> <p>To remove a fleet's per-instance container group definition, leave this parameter empty and use the parameter <code>RemoveAttributes</code>.</p><br>
    ///   - [`game_server_container_groups_per_instance(i32)`](crate::operation::update_container_fleet::builders::UpdateContainerFleetFluentBuilder::game_server_container_groups_per_instance) / [`set_game_server_container_groups_per_instance(Option<i32>)`](crate::operation::update_container_fleet::builders::UpdateContainerFleetFluentBuilder::set_game_server_container_groups_per_instance):<br>required: **false**<br><p>The number of times to replicate the game server container group on each fleet instance. By default, Amazon GameLift Servers calculates the maximum number of game server container groups that can fit on each instance. You can remove this property value to use the calculated value, or set it manually. If you set this number manually, Amazon GameLift Servers uses your value as long as it's less than the calculated maximum.</p><br>
    ///   - [`instance_connection_port_range(ConnectionPortRange)`](crate::operation::update_container_fleet::builders::UpdateContainerFleetFluentBuilder::instance_connection_port_range) / [`set_instance_connection_port_range(Option<ConnectionPortRange>)`](crate::operation::update_container_fleet::builders::UpdateContainerFleetFluentBuilder::set_instance_connection_port_range):<br>required: **false**<br><p>A revised set of port numbers to open on each fleet instance. By default, Amazon GameLift Servers calculates an optimal port range based on your fleet configuration. If you previously set this parameter manually, you can't reset this to use the calculated settings.</p><br>
    ///   - [`instance_inbound_permission_authorizations(IpPermission)`](crate::operation::update_container_fleet::builders::UpdateContainerFleetFluentBuilder::instance_inbound_permission_authorizations) / [`set_instance_inbound_permission_authorizations(Option<Vec::<IpPermission>>)`](crate::operation::update_container_fleet::builders::UpdateContainerFleetFluentBuilder::set_instance_inbound_permission_authorizations):<br>required: **false**<br><p>A set of ports to add to the container fleet's inbound permissions.</p><br>
    ///   - [`instance_inbound_permission_revocations(IpPermission)`](crate::operation::update_container_fleet::builders::UpdateContainerFleetFluentBuilder::instance_inbound_permission_revocations) / [`set_instance_inbound_permission_revocations(Option<Vec::<IpPermission>>)`](crate::operation::update_container_fleet::builders::UpdateContainerFleetFluentBuilder::set_instance_inbound_permission_revocations):<br>required: **false**<br><p>A set of ports to remove from the container fleet's inbound permissions.</p><br>
    ///   - [`deployment_configuration(DeploymentConfiguration)`](crate::operation::update_container_fleet::builders::UpdateContainerFleetFluentBuilder::deployment_configuration) / [`set_deployment_configuration(Option<DeploymentConfiguration>)`](crate::operation::update_container_fleet::builders::UpdateContainerFleetFluentBuilder::set_deployment_configuration):<br>required: **false**<br><p>Instructions for how to deploy updates to a container fleet, if the fleet update initiates a deployment. The deployment configuration lets you determine how to replace fleet instances and what actions to take if the deployment fails.</p><br>
    ///   - [`description(impl Into<String>)`](crate::operation::update_container_fleet::builders::UpdateContainerFleetFluentBuilder::description) / [`set_description(Option<String>)`](crate::operation::update_container_fleet::builders::UpdateContainerFleetFluentBuilder::set_description):<br>required: **false**<br><p>A meaningful description of the container fleet.</p><br>
    ///   - [`metric_groups(impl Into<String>)`](crate::operation::update_container_fleet::builders::UpdateContainerFleetFluentBuilder::metric_groups) / [`set_metric_groups(Option<Vec::<String>>)`](crate::operation::update_container_fleet::builders::UpdateContainerFleetFluentBuilder::set_metric_groups):<br>required: **false**<br><p>The name of an Amazon Web Services CloudWatch metric group to add this fleet to.</p><br>
    ///   - [`new_game_session_protection_policy(ProtectionPolicy)`](crate::operation::update_container_fleet::builders::UpdateContainerFleetFluentBuilder::new_game_session_protection_policy) / [`set_new_game_session_protection_policy(Option<ProtectionPolicy>)`](crate::operation::update_container_fleet::builders::UpdateContainerFleetFluentBuilder::set_new_game_session_protection_policy):<br>required: **false**<br><p>The game session protection policy to apply to all new game sessions that are started in this fleet. Game sessions that already exist are not affected.</p><br>
    ///   - [`game_session_creation_limit_policy(GameSessionCreationLimitPolicy)`](crate::operation::update_container_fleet::builders::UpdateContainerFleetFluentBuilder::game_session_creation_limit_policy) / [`set_game_session_creation_limit_policy(Option<GameSessionCreationLimitPolicy>)`](crate::operation::update_container_fleet::builders::UpdateContainerFleetFluentBuilder::set_game_session_creation_limit_policy):<br>required: **false**<br><p>A policy that limits the number of game sessions that each individual player can create on instances in this fleet. The limit applies for a specified span of time.</p><br>
    ///   - [`log_configuration(LogConfiguration)`](crate::operation::update_container_fleet::builders::UpdateContainerFleetFluentBuilder::log_configuration) / [`set_log_configuration(Option<LogConfiguration>)`](crate::operation::update_container_fleet::builders::UpdateContainerFleetFluentBuilder::set_log_configuration):<br>required: **false**<br><p>The method for collecting container logs for the fleet.</p><br>
    ///   - [`remove_attributes(ContainerFleetRemoveAttribute)`](crate::operation::update_container_fleet::builders::UpdateContainerFleetFluentBuilder::remove_attributes) / [`set_remove_attributes(Option<Vec::<ContainerFleetRemoveAttribute>>)`](crate::operation::update_container_fleet::builders::UpdateContainerFleetFluentBuilder::set_remove_attributes):<br>required: **false**<br><p>If set, this update removes a fleet's per-instance container group definition. You can't remove a fleet's game server container group definition.</p><br>
    /// - On success, responds with [`UpdateContainerFleetOutput`](crate::operation::update_container_fleet::UpdateContainerFleetOutput) with field(s):
    ///   - [`container_fleet(Option<ContainerFleet>)`](crate::operation::update_container_fleet::UpdateContainerFleetOutput::container_fleet): <p>A collection of container fleet objects for all fleets that match the request criteria.</p>
    /// - On failure, responds with [`SdkError<UpdateContainerFleetError>`](crate::operation::update_container_fleet::UpdateContainerFleetError)
    pub fn update_container_fleet(&self) -> crate::operation::update_container_fleet::builders::UpdateContainerFleetFluentBuilder {
        crate::operation::update_container_fleet::builders::UpdateContainerFleetFluentBuilder::new(self.handle.clone())
    }
}
