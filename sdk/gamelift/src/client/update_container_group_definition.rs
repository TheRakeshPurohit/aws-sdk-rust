// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`UpdateContainerGroupDefinition`](crate::operation::update_container_group_definition::builders::UpdateContainerGroupDefinitionFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`name(impl Into<String>)`](crate::operation::update_container_group_definition::builders::UpdateContainerGroupDefinitionFluentBuilder::name) / [`set_name(Option<String>)`](crate::operation::update_container_group_definition::builders::UpdateContainerGroupDefinitionFluentBuilder::set_name):<br>required: **true**<br><p>A descriptive identifier for the container group definition. The name value must be unique in an Amazon Web Services Region.</p><br>
    ///   - [`game_server_container_definition(GameServerContainerDefinitionInput)`](crate::operation::update_container_group_definition::builders::UpdateContainerGroupDefinitionFluentBuilder::game_server_container_definition) / [`set_game_server_container_definition(Option<GameServerContainerDefinitionInput>)`](crate::operation::update_container_group_definition::builders::UpdateContainerGroupDefinitionFluentBuilder::set_game_server_container_definition):<br>required: **false**<br><p>An updated definition for the game server container in this group. Define a game server container only when the container group type is <code>GAME_SERVER</code>. You can pass in your container definitions as a JSON file.</p><br>
    ///   - [`support_container_definitions(SupportContainerDefinitionInput)`](crate::operation::update_container_group_definition::builders::UpdateContainerGroupDefinitionFluentBuilder::support_container_definitions) / [`set_support_container_definitions(Option<Vec::<SupportContainerDefinitionInput>>)`](crate::operation::update_container_group_definition::builders::UpdateContainerGroupDefinitionFluentBuilder::set_support_container_definitions):<br>required: **false**<br><p>One or more definitions for support containers in this group. You can define a support container in any type of container group. You can pass in your container definitions as a JSON file.</p><br>
    ///   - [`total_memory_limit_mebibytes(i32)`](crate::operation::update_container_group_definition::builders::UpdateContainerGroupDefinitionFluentBuilder::total_memory_limit_mebibytes) / [`set_total_memory_limit_mebibytes(Option<i32>)`](crate::operation::update_container_group_definition::builders::UpdateContainerGroupDefinitionFluentBuilder::set_total_memory_limit_mebibytes):<br>required: **false**<br><p>The maximum amount of memory (in MiB) to allocate to the container group. All containers in the group share this memory. If you specify memory limits for an individual container, the total value must be greater than any individual container's memory limit.</p><br>
    ///   - [`total_vcpu_limit(f64)`](crate::operation::update_container_group_definition::builders::UpdateContainerGroupDefinitionFluentBuilder::total_vcpu_limit) / [`set_total_vcpu_limit(Option<f64>)`](crate::operation::update_container_group_definition::builders::UpdateContainerGroupDefinitionFluentBuilder::set_total_vcpu_limit):<br>required: **false**<br><p>The maximum amount of vCPU units to allocate to the container group (1 vCPU is equal to 1024 CPU units). All containers in the group share this memory. If you specify vCPU limits for individual containers, the total value must be equal to or greater than the sum of the CPU limits for all containers in the group.</p><br>
    ///   - [`version_description(impl Into<String>)`](crate::operation::update_container_group_definition::builders::UpdateContainerGroupDefinitionFluentBuilder::version_description) / [`set_version_description(Option<String>)`](crate::operation::update_container_group_definition::builders::UpdateContainerGroupDefinitionFluentBuilder::set_version_description):<br>required: **false**<br><p>A description for this update to the container group definition.</p><br>
    ///   - [`source_version_number(i32)`](crate::operation::update_container_group_definition::builders::UpdateContainerGroupDefinitionFluentBuilder::source_version_number) / [`set_source_version_number(Option<i32>)`](crate::operation::update_container_group_definition::builders::UpdateContainerGroupDefinitionFluentBuilder::set_source_version_number):<br>required: **false**<br><p>The container group definition version to update. The new version starts with values from the source version, and then updates values included in this request.</p><br>
    ///   - [`operating_system(ContainerOperatingSystem)`](crate::operation::update_container_group_definition::builders::UpdateContainerGroupDefinitionFluentBuilder::operating_system) / [`set_operating_system(Option<ContainerOperatingSystem>)`](crate::operation::update_container_group_definition::builders::UpdateContainerGroupDefinitionFluentBuilder::set_operating_system):<br>required: **false**<br><p>The platform that all containers in the group use. Containers in a group must run on the same operating system.</p><note>  <p>Amazon Linux 2 (AL2) will reach end of support on 6/30/2025. See more details in the <a href="http://aws.amazon.com/amazon-linux-2/faqs/">Amazon Linux 2 FAQs</a>. For game servers that are hosted on AL2 and use server SDK version 4.x for Amazon GameLift Servers, first update the game server build to server SDK 5.x, and then deploy to AL2023 instances. See <a href="https://docs.aws.amazon.com/gamelift/latest/developerguide/reference-serversdk5-migration.html"> Migrate to server SDK version 5.</a></p> </note><br>
    /// - On success, responds with [`UpdateContainerGroupDefinitionOutput`](crate::operation::update_container_group_definition::UpdateContainerGroupDefinitionOutput) with field(s):
    ///   - [`container_group_definition(Option<ContainerGroupDefinition>)`](crate::operation::update_container_group_definition::UpdateContainerGroupDefinitionOutput::container_group_definition): <p>The properties of the updated container group definition version.</p>
    /// - On failure, responds with [`SdkError<UpdateContainerGroupDefinitionError>`](crate::operation::update_container_group_definition::UpdateContainerGroupDefinitionError)
    pub fn update_container_group_definition(
        &self,
    ) -> crate::operation::update_container_group_definition::builders::UpdateContainerGroupDefinitionFluentBuilder {
        crate::operation::update_container_group_definition::builders::UpdateContainerGroupDefinitionFluentBuilder::new(self.handle.clone())
    }
}
