// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>A structure that contains basic information about a tenant.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct TenantInfo {
    /// <p>The name of the tenant.</p>
    pub tenant_name: ::std::option::Option<::std::string::String>,
    /// <p>A unique identifier for the tenant.</p>
    pub tenant_id: ::std::option::Option<::std::string::String>,
    /// <p>The Amazon Resource Name (ARN) of the tenant.</p>
    pub tenant_arn: ::std::option::Option<::std::string::String>,
    /// <p>The date and time when the tenant was created.</p>
    pub created_timestamp: ::std::option::Option<::aws_smithy_types::DateTime>,
}
impl TenantInfo {
    /// <p>The name of the tenant.</p>
    pub fn tenant_name(&self) -> ::std::option::Option<&str> {
        self.tenant_name.as_deref()
    }
    /// <p>A unique identifier for the tenant.</p>
    pub fn tenant_id(&self) -> ::std::option::Option<&str> {
        self.tenant_id.as_deref()
    }
    /// <p>The Amazon Resource Name (ARN) of the tenant.</p>
    pub fn tenant_arn(&self) -> ::std::option::Option<&str> {
        self.tenant_arn.as_deref()
    }
    /// <p>The date and time when the tenant was created.</p>
    pub fn created_timestamp(&self) -> ::std::option::Option<&::aws_smithy_types::DateTime> {
        self.created_timestamp.as_ref()
    }
}
impl TenantInfo {
    /// Creates a new builder-style object to manufacture [`TenantInfo`](crate::types::TenantInfo).
    pub fn builder() -> crate::types::builders::TenantInfoBuilder {
        crate::types::builders::TenantInfoBuilder::default()
    }
}

/// A builder for [`TenantInfo`](crate::types::TenantInfo).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct TenantInfoBuilder {
    pub(crate) tenant_name: ::std::option::Option<::std::string::String>,
    pub(crate) tenant_id: ::std::option::Option<::std::string::String>,
    pub(crate) tenant_arn: ::std::option::Option<::std::string::String>,
    pub(crate) created_timestamp: ::std::option::Option<::aws_smithy_types::DateTime>,
}
impl TenantInfoBuilder {
    /// <p>The name of the tenant.</p>
    pub fn tenant_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.tenant_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of the tenant.</p>
    pub fn set_tenant_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.tenant_name = input;
        self
    }
    /// <p>The name of the tenant.</p>
    pub fn get_tenant_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.tenant_name
    }
    /// <p>A unique identifier for the tenant.</p>
    pub fn tenant_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.tenant_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>A unique identifier for the tenant.</p>
    pub fn set_tenant_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.tenant_id = input;
        self
    }
    /// <p>A unique identifier for the tenant.</p>
    pub fn get_tenant_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.tenant_id
    }
    /// <p>The Amazon Resource Name (ARN) of the tenant.</p>
    pub fn tenant_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.tenant_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the tenant.</p>
    pub fn set_tenant_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.tenant_arn = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the tenant.</p>
    pub fn get_tenant_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.tenant_arn
    }
    /// <p>The date and time when the tenant was created.</p>
    pub fn created_timestamp(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.created_timestamp = ::std::option::Option::Some(input);
        self
    }
    /// <p>The date and time when the tenant was created.</p>
    pub fn set_created_timestamp(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.created_timestamp = input;
        self
    }
    /// <p>The date and time when the tenant was created.</p>
    pub fn get_created_timestamp(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.created_timestamp
    }
    /// Consumes the builder and constructs a [`TenantInfo`](crate::types::TenantInfo).
    pub fn build(self) -> crate::types::TenantInfo {
        crate::types::TenantInfo {
            tenant_name: self.tenant_name,
            tenant_id: self.tenant_id,
            tenant_arn: self.tenant_arn,
            created_timestamp: self.created_timestamp,
        }
    }
}
