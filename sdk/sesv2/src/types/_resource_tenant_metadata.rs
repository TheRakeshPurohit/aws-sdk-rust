// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>A structure that contains information about a tenant associated with a resource.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ResourceTenantMetadata {
    /// <p>The name of the tenant associated with the resource.</p>
    pub tenant_name: ::std::option::Option<::std::string::String>,
    /// <p>A unique identifier for the tenant associated with the resource.</p>
    pub tenant_id: ::std::option::Option<::std::string::String>,
    /// <p>The Amazon Resource Name (ARN) of the resource.</p>
    pub resource_arn: ::std::option::Option<::std::string::String>,
    /// <p>The date and time when the resource was associated with the tenant.</p>
    pub associated_timestamp: ::std::option::Option<::aws_smithy_types::DateTime>,
}
impl ResourceTenantMetadata {
    /// <p>The name of the tenant associated with the resource.</p>
    pub fn tenant_name(&self) -> ::std::option::Option<&str> {
        self.tenant_name.as_deref()
    }
    /// <p>A unique identifier for the tenant associated with the resource.</p>
    pub fn tenant_id(&self) -> ::std::option::Option<&str> {
        self.tenant_id.as_deref()
    }
    /// <p>The Amazon Resource Name (ARN) of the resource.</p>
    pub fn resource_arn(&self) -> ::std::option::Option<&str> {
        self.resource_arn.as_deref()
    }
    /// <p>The date and time when the resource was associated with the tenant.</p>
    pub fn associated_timestamp(&self) -> ::std::option::Option<&::aws_smithy_types::DateTime> {
        self.associated_timestamp.as_ref()
    }
}
impl ResourceTenantMetadata {
    /// Creates a new builder-style object to manufacture [`ResourceTenantMetadata`](crate::types::ResourceTenantMetadata).
    pub fn builder() -> crate::types::builders::ResourceTenantMetadataBuilder {
        crate::types::builders::ResourceTenantMetadataBuilder::default()
    }
}

/// A builder for [`ResourceTenantMetadata`](crate::types::ResourceTenantMetadata).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct ResourceTenantMetadataBuilder {
    pub(crate) tenant_name: ::std::option::Option<::std::string::String>,
    pub(crate) tenant_id: ::std::option::Option<::std::string::String>,
    pub(crate) resource_arn: ::std::option::Option<::std::string::String>,
    pub(crate) associated_timestamp: ::std::option::Option<::aws_smithy_types::DateTime>,
}
impl ResourceTenantMetadataBuilder {
    /// <p>The name of the tenant associated with the resource.</p>
    pub fn tenant_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.tenant_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of the tenant associated with the resource.</p>
    pub fn set_tenant_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.tenant_name = input;
        self
    }
    /// <p>The name of the tenant associated with the resource.</p>
    pub fn get_tenant_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.tenant_name
    }
    /// <p>A unique identifier for the tenant associated with the resource.</p>
    pub fn tenant_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.tenant_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>A unique identifier for the tenant associated with the resource.</p>
    pub fn set_tenant_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.tenant_id = input;
        self
    }
    /// <p>A unique identifier for the tenant associated with the resource.</p>
    pub fn get_tenant_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.tenant_id
    }
    /// <p>The Amazon Resource Name (ARN) of the resource.</p>
    pub fn resource_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.resource_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the resource.</p>
    pub fn set_resource_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.resource_arn = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the resource.</p>
    pub fn get_resource_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.resource_arn
    }
    /// <p>The date and time when the resource was associated with the tenant.</p>
    pub fn associated_timestamp(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.associated_timestamp = ::std::option::Option::Some(input);
        self
    }
    /// <p>The date and time when the resource was associated with the tenant.</p>
    pub fn set_associated_timestamp(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.associated_timestamp = input;
        self
    }
    /// <p>The date and time when the resource was associated with the tenant.</p>
    pub fn get_associated_timestamp(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.associated_timestamp
    }
    /// Consumes the builder and constructs a [`ResourceTenantMetadata`](crate::types::ResourceTenantMetadata).
    pub fn build(self) -> crate::types::ResourceTenantMetadata {
        crate::types::ResourceTenantMetadata {
            tenant_name: self.tenant_name,
            tenant_id: self.tenant_id,
            resource_arn: self.resource_arn,
            associated_timestamp: self.associated_timestamp,
        }
    }
}
