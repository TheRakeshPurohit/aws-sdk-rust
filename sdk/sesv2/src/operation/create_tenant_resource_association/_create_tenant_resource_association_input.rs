// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Represents a request to associate a resource with a tenant.</p>
/// <p>Resources can be email identities, configuration sets, or email templates. When you associate a resource with a tenant, you can use that resource when sending emails on behalf of that tenant.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct CreateTenantResourceAssociationInput {
    /// <p>The name of the tenant to associate the resource with.</p>
    pub tenant_name: ::std::option::Option<::std::string::String>,
    /// <p>The Amazon Resource Name (ARN) of the resource to associate with the tenant.</p>
    pub resource_arn: ::std::option::Option<::std::string::String>,
}
impl CreateTenantResourceAssociationInput {
    /// <p>The name of the tenant to associate the resource with.</p>
    pub fn tenant_name(&self) -> ::std::option::Option<&str> {
        self.tenant_name.as_deref()
    }
    /// <p>The Amazon Resource Name (ARN) of the resource to associate with the tenant.</p>
    pub fn resource_arn(&self) -> ::std::option::Option<&str> {
        self.resource_arn.as_deref()
    }
}
impl CreateTenantResourceAssociationInput {
    /// Creates a new builder-style object to manufacture [`CreateTenantResourceAssociationInput`](crate::operation::create_tenant_resource_association::CreateTenantResourceAssociationInput).
    pub fn builder() -> crate::operation::create_tenant_resource_association::builders::CreateTenantResourceAssociationInputBuilder {
        crate::operation::create_tenant_resource_association::builders::CreateTenantResourceAssociationInputBuilder::default()
    }
}

/// A builder for [`CreateTenantResourceAssociationInput`](crate::operation::create_tenant_resource_association::CreateTenantResourceAssociationInput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct CreateTenantResourceAssociationInputBuilder {
    pub(crate) tenant_name: ::std::option::Option<::std::string::String>,
    pub(crate) resource_arn: ::std::option::Option<::std::string::String>,
}
impl CreateTenantResourceAssociationInputBuilder {
    /// <p>The name of the tenant to associate the resource with.</p>
    /// This field is required.
    pub fn tenant_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.tenant_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of the tenant to associate the resource with.</p>
    pub fn set_tenant_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.tenant_name = input;
        self
    }
    /// <p>The name of the tenant to associate the resource with.</p>
    pub fn get_tenant_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.tenant_name
    }
    /// <p>The Amazon Resource Name (ARN) of the resource to associate with the tenant.</p>
    /// This field is required.
    pub fn resource_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.resource_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the resource to associate with the tenant.</p>
    pub fn set_resource_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.resource_arn = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the resource to associate with the tenant.</p>
    pub fn get_resource_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.resource_arn
    }
    /// Consumes the builder and constructs a [`CreateTenantResourceAssociationInput`](crate::operation::create_tenant_resource_association::CreateTenantResourceAssociationInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::create_tenant_resource_association::CreateTenantResourceAssociationInput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(
            crate::operation::create_tenant_resource_association::CreateTenantResourceAssociationInput {
                tenant_name: self.tenant_name,
                resource_arn: self.resource_arn,
            },
        )
    }
}
