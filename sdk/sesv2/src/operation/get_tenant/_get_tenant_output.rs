// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Information about a specific tenant.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct GetTenantOutput {
    /// <p>A structure that contains details about the tenant.</p>
    pub tenant: ::std::option::Option<crate::types::Tenant>,
    _request_id: Option<String>,
}
impl GetTenantOutput {
    /// <p>A structure that contains details about the tenant.</p>
    pub fn tenant(&self) -> ::std::option::Option<&crate::types::Tenant> {
        self.tenant.as_ref()
    }
}
impl ::aws_types::request_id::RequestId for GetTenantOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl GetTenantOutput {
    /// Creates a new builder-style object to manufacture [`GetTenantOutput`](crate::operation::get_tenant::GetTenantOutput).
    pub fn builder() -> crate::operation::get_tenant::builders::GetTenantOutputBuilder {
        crate::operation::get_tenant::builders::GetTenantOutputBuilder::default()
    }
}

/// A builder for [`GetTenantOutput`](crate::operation::get_tenant::GetTenantOutput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct GetTenantOutputBuilder {
    pub(crate) tenant: ::std::option::Option<crate::types::Tenant>,
    _request_id: Option<String>,
}
impl GetTenantOutputBuilder {
    /// <p>A structure that contains details about the tenant.</p>
    pub fn tenant(mut self, input: crate::types::Tenant) -> Self {
        self.tenant = ::std::option::Option::Some(input);
        self
    }
    /// <p>A structure that contains details about the tenant.</p>
    pub fn set_tenant(mut self, input: ::std::option::Option<crate::types::Tenant>) -> Self {
        self.tenant = input;
        self
    }
    /// <p>A structure that contains details about the tenant.</p>
    pub fn get_tenant(&self) -> &::std::option::Option<crate::types::Tenant> {
        &self.tenant
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`GetTenantOutput`](crate::operation::get_tenant::GetTenantOutput).
    pub fn build(self) -> crate::operation::get_tenant::GetTenantOutput {
        crate::operation::get_tenant::GetTenantOutput {
            tenant: self.tenant,
            _request_id: self._request_id,
        }
    }
}
