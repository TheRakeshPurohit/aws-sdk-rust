// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub use crate::operation::get_reputation_entity::_get_reputation_entity_output::GetReputationEntityOutputBuilder;

pub use crate::operation::get_reputation_entity::_get_reputation_entity_input::GetReputationEntityInputBuilder;

impl crate::operation::get_reputation_entity::builders::GetReputationEntityInputBuilder {
    /// Sends a request with this input using the given client.
    pub async fn send_with(
        self,
        client: &crate::Client,
    ) -> ::std::result::Result<
        crate::operation::get_reputation_entity::GetReputationEntityOutput,
        ::aws_smithy_runtime_api::client::result::SdkError<
            crate::operation::get_reputation_entity::GetReputationEntityError,
            ::aws_smithy_runtime_api::client::orchestrator::HttpResponse,
        >,
    > {
        let mut fluent_builder = client.get_reputation_entity();
        fluent_builder.inner = self;
        fluent_builder.send().await
    }
}
/// Fluent builder constructing a request to `GetReputationEntity`.
///
/// <p>Retrieve information about a specific reputation entity, including its reputation management policy, customer-managed status, Amazon Web Services Amazon SES-managed status, and aggregate sending status.</p>
/// <p><i>Reputation entities</i> represent resources in your Amazon SES account that have reputation tracking and management capabilities. The reputation impact reflects the highest impact reputation finding for the entity. Reputation findings can be retrieved using the <code>ListRecommendations</code> operation.</p>
#[derive(::std::clone::Clone, ::std::fmt::Debug)]
pub struct GetReputationEntityFluentBuilder {
    handle: ::std::sync::Arc<crate::client::Handle>,
    inner: crate::operation::get_reputation_entity::builders::GetReputationEntityInputBuilder,
    config_override: ::std::option::Option<crate::config::Builder>,
}
impl
    crate::client::customize::internal::CustomizableSend<
        crate::operation::get_reputation_entity::GetReputationEntityOutput,
        crate::operation::get_reputation_entity::GetReputationEntityError,
    > for GetReputationEntityFluentBuilder
{
    fn send(
        self,
        config_override: crate::config::Builder,
    ) -> crate::client::customize::internal::BoxFuture<
        crate::client::customize::internal::SendResult<
            crate::operation::get_reputation_entity::GetReputationEntityOutput,
            crate::operation::get_reputation_entity::GetReputationEntityError,
        >,
    > {
        ::std::boxed::Box::pin(async move { self.config_override(config_override).send().await })
    }
}
impl GetReputationEntityFluentBuilder {
    /// Creates a new `GetReputationEntityFluentBuilder`.
    pub(crate) fn new(handle: ::std::sync::Arc<crate::client::Handle>) -> Self {
        Self {
            handle,
            inner: ::std::default::Default::default(),
            config_override: ::std::option::Option::None,
        }
    }
    /// Access the GetReputationEntity as a reference.
    pub fn as_input(&self) -> &crate::operation::get_reputation_entity::builders::GetReputationEntityInputBuilder {
        &self.inner
    }
    /// Sends the request and returns the response.
    ///
    /// If an error occurs, an `SdkError` will be returned with additional details that
    /// can be matched against.
    ///
    /// By default, any retryable failures will be retried twice. Retry behavior
    /// is configurable with the [RetryConfig](aws_smithy_types::retry::RetryConfig), which can be
    /// set when configuring the client.
    pub async fn send(
        self,
    ) -> ::std::result::Result<
        crate::operation::get_reputation_entity::GetReputationEntityOutput,
        ::aws_smithy_runtime_api::client::result::SdkError<
            crate::operation::get_reputation_entity::GetReputationEntityError,
            ::aws_smithy_runtime_api::client::orchestrator::HttpResponse,
        >,
    > {
        let input = self
            .inner
            .build()
            .map_err(::aws_smithy_runtime_api::client::result::SdkError::construction_failure)?;
        let runtime_plugins = crate::operation::get_reputation_entity::GetReputationEntity::operation_runtime_plugins(
            self.handle.runtime_plugins.clone(),
            &self.handle.conf,
            self.config_override,
        );
        crate::operation::get_reputation_entity::GetReputationEntity::orchestrate(&runtime_plugins, input).await
    }

    /// Consumes this builder, creating a customizable operation that can be modified before being sent.
    pub fn customize(
        self,
    ) -> crate::client::customize::CustomizableOperation<
        crate::operation::get_reputation_entity::GetReputationEntityOutput,
        crate::operation::get_reputation_entity::GetReputationEntityError,
        Self,
    > {
        crate::client::customize::CustomizableOperation::new(self)
    }
    pub(crate) fn config_override(mut self, config_override: impl ::std::convert::Into<crate::config::Builder>) -> Self {
        self.set_config_override(::std::option::Option::Some(config_override.into()));
        self
    }

    pub(crate) fn set_config_override(&mut self, config_override: ::std::option::Option<crate::config::Builder>) -> &mut Self {
        self.config_override = config_override;
        self
    }
    /// <p>The unique identifier for the reputation entity. For resource-type entities, this is the Amazon Resource Name (ARN) of the resource.</p>
    pub fn reputation_entity_reference(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.inner = self.inner.reputation_entity_reference(input.into());
        self
    }
    /// <p>The unique identifier for the reputation entity. For resource-type entities, this is the Amazon Resource Name (ARN) of the resource.</p>
    pub fn set_reputation_entity_reference(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.inner = self.inner.set_reputation_entity_reference(input);
        self
    }
    /// <p>The unique identifier for the reputation entity. For resource-type entities, this is the Amazon Resource Name (ARN) of the resource.</p>
    pub fn get_reputation_entity_reference(&self) -> &::std::option::Option<::std::string::String> {
        self.inner.get_reputation_entity_reference()
    }
    /// <p>The type of reputation entity. Currently, only <code>RESOURCE</code> type entities are supported.</p>
    pub fn reputation_entity_type(mut self, input: crate::types::ReputationEntityType) -> Self {
        self.inner = self.inner.reputation_entity_type(input);
        self
    }
    /// <p>The type of reputation entity. Currently, only <code>RESOURCE</code> type entities are supported.</p>
    pub fn set_reputation_entity_type(mut self, input: ::std::option::Option<crate::types::ReputationEntityType>) -> Self {
        self.inner = self.inner.set_reputation_entity_type(input);
        self
    }
    /// <p>The type of reputation entity. Currently, only <code>RESOURCE</code> type entities are supported.</p>
    pub fn get_reputation_entity_type(&self) -> &::std::option::Option<crate::types::ReputationEntityType> {
        self.inner.get_reputation_entity_type()
    }
}
