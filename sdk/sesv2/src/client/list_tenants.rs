// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ListTenants`](crate::operation::list_tenants::builders::ListTenantsFluentBuilder) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::operation::list_tenants::builders::ListTenantsFluentBuilder::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`next_token(impl Into<String>)`](crate::operation::list_tenants::builders::ListTenantsFluentBuilder::next_token) / [`set_next_token(Option<String>)`](crate::operation::list_tenants::builders::ListTenantsFluentBuilder::set_next_token):<br>required: **false**<br><p>A token returned from a previous call to <code>ListTenants</code> to indicate the position in the list of tenants.</p><br>
    ///   - [`page_size(i32)`](crate::operation::list_tenants::builders::ListTenantsFluentBuilder::page_size) / [`set_page_size(Option<i32>)`](crate::operation::list_tenants::builders::ListTenantsFluentBuilder::set_page_size):<br>required: **false**<br><p>The number of results to show in a single call to <code>ListTenants</code>. If the number of results is larger than the number you specified in this parameter, then the response includes a <code>NextToken</code> element, which you can use to obtain additional results.</p><br>
    /// - On success, responds with [`ListTenantsOutput`](crate::operation::list_tenants::ListTenantsOutput) with field(s):
    ///   - [`tenants(Option<Vec::<TenantInfo>>)`](crate::operation::list_tenants::ListTenantsOutput::tenants): <p>An array that contains basic information about each tenant.</p>
    ///   - [`next_token(Option<String>)`](crate::operation::list_tenants::ListTenantsOutput::next_token): <p>A token that indicates that there are additional tenants to list. To view additional tenants, issue another request to <code>ListTenants</code>, and pass this token in the <code>NextToken</code> parameter.</p>
    /// - On failure, responds with [`SdkError<ListTenantsError>`](crate::operation::list_tenants::ListTenantsError)
    pub fn list_tenants(&self) -> crate::operation::list_tenants::builders::ListTenantsFluentBuilder {
        crate::operation::list_tenants::builders::ListTenantsFluentBuilder::new(self.handle.clone())
    }
}
