// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ListTenantResources`](crate::operation::list_tenant_resources::builders::ListTenantResourcesFluentBuilder) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::operation::list_tenant_resources::builders::ListTenantResourcesFluentBuilder::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`tenant_name(impl Into<String>)`](crate::operation::list_tenant_resources::builders::ListTenantResourcesFluentBuilder::tenant_name) / [`set_tenant_name(Option<String>)`](crate::operation::list_tenant_resources::builders::ListTenantResourcesFluentBuilder::set_tenant_name):<br>required: **true**<br><p>The name of the tenant to list resources for.</p><br>
    ///   - [`filter(ListTenantResourcesFilterKey, impl Into<String>)`](crate::operation::list_tenant_resources::builders::ListTenantResourcesFluentBuilder::filter) / [`set_filter(Option<HashMap::<ListTenantResourcesFilterKey, String>>)`](crate::operation::list_tenant_resources::builders::ListTenantResourcesFluentBuilder::set_filter):<br>required: **false**<br><p>A map of filter keys and values for filtering the list of tenant resources. Currently, the only supported filter key is <code>RESOURCE_TYPE</code>.</p><br>
    ///   - [`page_size(i32)`](crate::operation::list_tenant_resources::builders::ListTenantResourcesFluentBuilder::page_size) / [`set_page_size(Option<i32>)`](crate::operation::list_tenant_resources::builders::ListTenantResourcesFluentBuilder::set_page_size):<br>required: **false**<br><p>The number of results to show in a single call to <code>ListTenantResources</code>. If the number of results is larger than the number you specified in this parameter, then the response includes a <code>NextToken</code> element, which you can use to obtain additional results.</p><br>
    ///   - [`next_token(impl Into<String>)`](crate::operation::list_tenant_resources::builders::ListTenantResourcesFluentBuilder::next_token) / [`set_next_token(Option<String>)`](crate::operation::list_tenant_resources::builders::ListTenantResourcesFluentBuilder::set_next_token):<br>required: **false**<br><p>A token returned from a previous call to <code>ListTenantResources</code> to indicate the position in the list of tenant resources.</p><br>
    /// - On success, responds with [`ListTenantResourcesOutput`](crate::operation::list_tenant_resources::ListTenantResourcesOutput) with field(s):
    ///   - [`tenant_resources(Option<Vec::<TenantResource>>)`](crate::operation::list_tenant_resources::ListTenantResourcesOutput::tenant_resources): <p>An array that contains information about each resource associated with the tenant.</p>
    ///   - [`next_token(Option<String>)`](crate::operation::list_tenant_resources::ListTenantResourcesOutput::next_token): <p>A token that indicates that there are additional resources to list. To view additional resources, issue another request to <code>ListTenantResources</code>, and pass this token in the <code>NextToken</code> parameter.</p>
    /// - On failure, responds with [`SdkError<ListTenantResourcesError>`](crate::operation::list_tenant_resources::ListTenantResourcesError)
    pub fn list_tenant_resources(&self) -> crate::operation::list_tenant_resources::builders::ListTenantResourcesFluentBuilder {
        crate::operation::list_tenant_resources::builders::ListTenantResourcesFluentBuilder::new(self.handle.clone())
    }
}
