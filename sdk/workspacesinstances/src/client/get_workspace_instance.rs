// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`GetWorkspaceInstance`](crate::operation::get_workspace_instance::builders::GetWorkspaceInstanceFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`workspace_instance_id(impl Into<String>)`](crate::operation::get_workspace_instance::builders::GetWorkspaceInstanceFluentBuilder::workspace_instance_id) / [`set_workspace_instance_id(Option<String>)`](crate::operation::get_workspace_instance::builders::GetWorkspaceInstanceFluentBuilder::set_workspace_instance_id):<br>required: **true**<br><p>Unique identifier of the WorkSpace Instance to retrieve.</p><br>
    /// - On success, responds with [`GetWorkspaceInstanceOutput`](crate::operation::get_workspace_instance::GetWorkspaceInstanceOutput) with field(s):
    ///   - [`workspace_instance_errors(Option<Vec::<WorkspaceInstanceError>>)`](crate::operation::get_workspace_instance::GetWorkspaceInstanceOutput::workspace_instance_errors): <p>Captures any errors specific to the WorkSpace Instance lifecycle.</p>
    ///   - [`ec2_instance_errors(Option<Vec::<Ec2InstanceError>>)`](crate::operation::get_workspace_instance::GetWorkspaceInstanceOutput::ec2_instance_errors): <p>Includes any underlying EC2 instance errors encountered.</p>
    ///   - [`provision_state(Option<ProvisionStateEnum>)`](crate::operation::get_workspace_instance::GetWorkspaceInstanceOutput::provision_state): <p>Current provisioning state of the WorkSpaces Instance.</p>
    ///   - [`workspace_instance_id(Option<String>)`](crate::operation::get_workspace_instance::GetWorkspaceInstanceOutput::workspace_instance_id): <p>Unique identifier of the retrieved WorkSpaces Instance.</p>
    ///   - [`ec2_managed_instance(Option<Ec2ManagedInstance>)`](crate::operation::get_workspace_instance::GetWorkspaceInstanceOutput::ec2_managed_instance): <p>Details of the associated EC2 managed instance.</p>
    /// - On failure, responds with [`SdkError<GetWorkspaceInstanceError>`](crate::operation::get_workspace_instance::GetWorkspaceInstanceError)
    pub fn get_workspace_instance(&self) -> crate::operation::get_workspace_instance::builders::GetWorkspaceInstanceFluentBuilder {
        crate::operation::get_workspace_instance::builders::GetWorkspaceInstanceFluentBuilder::new(self.handle.clone())
    }
}
