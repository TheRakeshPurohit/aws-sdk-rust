// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub(crate) fn type_erase_result<O, E>(
    result: ::std::result::Result<O, E>,
) -> ::std::result::Result<
    ::aws_smithy_runtime_api::client::interceptors::context::Output,
    ::aws_smithy_runtime_api::client::orchestrator::OrchestratorError<::aws_smithy_runtime_api::client::interceptors::context::Error>,
>
where
    O: ::std::fmt::Debug + ::std::marker::Send + ::std::marker::Sync + 'static,
    E: ::std::error::Error + std::fmt::Debug + ::std::marker::Send + ::std::marker::Sync + 'static,
{
    result
        .map(|output| ::aws_smithy_runtime_api::client::interceptors::context::Output::erase(output))
        .map_err(|error| ::aws_smithy_runtime_api::client::interceptors::context::Error::erase(error))
        .map_err(::std::convert::Into::into)
}

pub fn parse_http_error_metadata(
    _response_status: u16,
    response_headers: &::aws_smithy_runtime_api::http::Headers,
    response_body: &[u8],
) -> ::std::result::Result<::aws_smithy_types::error::metadata::Builder, ::aws_smithy_json::deserialize::error::DeserializeError> {
    crate::json_errors::parse_error_metadata(response_body, response_headers)
}

pub(crate) mod shape_associate_volume;

pub(crate) mod shape_create_volume;

pub(crate) mod shape_create_workspace_instance;

pub(crate) mod shape_delete_volume;

pub(crate) mod shape_delete_workspace_instance;

pub(crate) mod shape_disassociate_volume;

pub(crate) mod shape_get_workspace_instance;

pub(crate) mod shape_list_instance_types;

pub(crate) mod shape_list_regions;

pub(crate) mod shape_list_tags_for_resource;

pub(crate) mod shape_list_workspace_instances;

pub(crate) mod shape_tag_resource;

pub(crate) mod shape_untag_resource;

pub(crate) fn or_empty_doc(data: &[u8]) -> &[u8] {
    if data.is_empty() {
        b"{}"
    } else {
        data
    }
}

pub(crate) mod shape_access_denied_exception;

pub(crate) mod shape_associate_volume_input;

pub(crate) mod shape_conflict_exception;

pub(crate) mod shape_create_volume_input;

pub(crate) mod shape_create_workspace_instance_input;

pub(crate) mod shape_delete_volume_input;

pub(crate) mod shape_delete_workspace_instance_input;

pub(crate) mod shape_disassociate_volume_input;

pub(crate) mod shape_get_workspace_instance_input;

pub(crate) mod shape_internal_server_exception;

pub(crate) mod shape_list_instance_types_input;

pub(crate) mod shape_list_regions_input;

pub(crate) mod shape_list_tags_for_resource_input;

pub(crate) mod shape_list_workspace_instances_input;

pub(crate) mod shape_resource_not_found_exception;

pub(crate) mod shape_service_quota_exceeded_exception;

pub(crate) mod shape_tag_resource_input;

pub(crate) mod shape_throttling_exception;

pub(crate) mod shape_untag_resource_input;

pub(crate) mod shape_validation_exception;

pub(crate) mod shape_ec2_instance_errors;

pub(crate) mod shape_ec2_managed_instance;

pub(crate) mod shape_instance_types;

pub(crate) mod shape_managed_instance_request;

pub(crate) mod shape_region_list;

pub(crate) mod shape_tag;

pub(crate) mod shape_tag_list;

pub(crate) mod shape_tag_specification;

pub(crate) mod shape_validation_exception_field_list;

pub(crate) mod shape_workspace_instance_errors;

pub(crate) mod shape_workspace_instances;

pub(crate) mod shape_block_device_mapping_request;

pub(crate) mod shape_capacity_reservation_specification;

pub(crate) mod shape_cpu_options_request;

pub(crate) mod shape_credit_specification_request;

pub(crate) mod shape_ec2_instance_error;

pub(crate) mod shape_enclave_options_request;

pub(crate) mod shape_hibernation_options_request;

pub(crate) mod shape_iam_instance_profile_specification;

pub(crate) mod shape_instance_ipv6_address;

pub(crate) mod shape_instance_maintenance_options_request;

pub(crate) mod shape_instance_market_options_request;

pub(crate) mod shape_instance_metadata_options_request;

pub(crate) mod shape_instance_network_interface_specification;

pub(crate) mod shape_instance_network_performance_options_request;

pub(crate) mod shape_instance_type_info;

pub(crate) mod shape_license_configuration_request;

pub(crate) mod shape_placement;

pub(crate) mod shape_private_dns_name_options_request;

pub(crate) mod shape_region;

pub(crate) mod shape_run_instances_monitoring_enabled;

pub(crate) mod shape_validation_exception_field;

pub(crate) mod shape_workspace_instance;

pub(crate) mod shape_workspace_instance_error;

pub(crate) mod shape_capacity_reservation_target;

pub(crate) mod shape_connection_tracking_specification_request;

pub(crate) mod shape_ebs_block_device;

pub(crate) mod shape_ena_srd_specification_request;

pub(crate) mod shape_ipv4_prefix_specification_request;

pub(crate) mod shape_ipv6_prefix_specification_request;

pub(crate) mod shape_private_ip_address_specification;

pub(crate) mod shape_spot_market_options;

pub(crate) mod shape_ena_srd_udp_specification_request;
