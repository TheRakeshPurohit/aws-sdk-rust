// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_related_item_input_content(
    object_2: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::types::RelatedItemInputContent,
) -> ::std::result::Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    match input {
        crate::types::RelatedItemInputContent::Contact(inner) => {
            #[allow(unused_mut)]
            let mut object_1 = object_2.key("contact").start_object();
            crate::protocol_serde::shape_contact::ser_contact(&mut object_1, inner)?;
            object_1.finish();
        }
        crate::types::RelatedItemInputContent::Comment(inner) => {
            #[allow(unused_mut)]
            let mut object_2 = object_2.key("comment").start_object();
            crate::protocol_serde::shape_comment_content::ser_comment_content(&mut object_2, inner)?;
            object_2.finish();
        }
        crate::types::RelatedItemInputContent::File(inner) => {
            #[allow(unused_mut)]
            let mut object_3 = object_2.key("file").start_object();
            crate::protocol_serde::shape_file_content::ser_file_content(&mut object_3, inner)?;
            object_3.finish();
        }
        crate::types::RelatedItemInputContent::Sla(inner) => {
            #[allow(unused_mut)]
            let mut object_4 = object_2.key("sla").start_object();
            crate::protocol_serde::shape_sla_input_content::ser_sla_input_content(&mut object_4, inner)?;
            object_4.finish();
        }
        crate::types::RelatedItemInputContent::ConnectCase(inner) => {
            #[allow(unused_mut)]
            let mut object_5 = object_2.key("connectCase").start_object();
            crate::protocol_serde::shape_connect_case_input_content::ser_connect_case_input_content(&mut object_5, inner)?;
            object_5.finish();
        }
        crate::types::RelatedItemInputContent::Custom(inner) => {
            #[allow(unused_mut)]
            let mut object_6 = object_2.key("custom").start_object();
            crate::protocol_serde::shape_custom_input_content::ser_custom_input_content(&mut object_6, inner)?;
            object_6.finish();
        }
        crate::types::RelatedItemInputContent::Unknown => {
            return Err(::aws_smithy_types::error::operation::SerializationError::unknown_variant(
                "RelatedItemInputContent",
            ))
        }
    }
    Ok(())
}
