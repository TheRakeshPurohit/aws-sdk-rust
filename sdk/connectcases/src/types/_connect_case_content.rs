// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// Represents the content of a Case related item
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ConnectCaseContent {
    /// The unique identifier of the related case
    pub case_id: ::std::string::String,
}
impl ConnectCaseContent {
    /// The unique identifier of the related case
    pub fn case_id(&self) -> &str {
        use std::ops::Deref;
        self.case_id.deref()
    }
}
impl ConnectCaseContent {
    /// Creates a new builder-style object to manufacture [`ConnectCaseContent`](crate::types::ConnectCaseContent).
    pub fn builder() -> crate::types::builders::ConnectCaseContentBuilder {
        crate::types::builders::ConnectCaseContentBuilder::default()
    }
}

/// A builder for [`ConnectCaseContent`](crate::types::ConnectCaseContent).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct ConnectCaseContentBuilder {
    pub(crate) case_id: ::std::option::Option<::std::string::String>,
}
impl ConnectCaseContentBuilder {
    /// The unique identifier of the related case
    /// This field is required.
    pub fn case_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.case_id = ::std::option::Option::Some(input.into());
        self
    }
    /// The unique identifier of the related case
    pub fn set_case_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.case_id = input;
        self
    }
    /// The unique identifier of the related case
    pub fn get_case_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.case_id
    }
    /// Consumes the builder and constructs a [`ConnectCaseContent`](crate::types::ConnectCaseContent).
    /// This method will fail if any of the following fields are not set:
    /// - [`case_id`](crate::types::builders::ConnectCaseContentBuilder::case_id)
    pub fn build(self) -> ::std::result::Result<crate::types::ConnectCaseContent, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::ConnectCaseContent {
            case_id: self.case_id.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "case_id",
                    "case_id was not specified but it is required when building ConnectCaseContent",
                )
            })?,
        })
    }
}
