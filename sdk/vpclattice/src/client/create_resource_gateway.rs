// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateResourceGateway`](crate::operation::create_resource_gateway::builders::CreateResourceGatewayFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`client_token(impl Into<String>)`](crate::operation::create_resource_gateway::builders::CreateResourceGatewayFluentBuilder::client_token) / [`set_client_token(Option<String>)`](crate::operation::create_resource_gateway::builders::CreateResourceGatewayFluentBuilder::set_client_token):<br>required: **false**<br><p>A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. If you retry a request that completed successfully using the same client token and parameters, the retry succeeds without performing any actions. If the parameters aren't identical, the retry fails.</p><br>
    ///   - [`name(impl Into<String>)`](crate::operation::create_resource_gateway::builders::CreateResourceGatewayFluentBuilder::name) / [`set_name(Option<String>)`](crate::operation::create_resource_gateway::builders::CreateResourceGatewayFluentBuilder::set_name):<br>required: **true**<br><p>The name of the resource gateway.</p><br>
    ///   - [`vpc_identifier(impl Into<String>)`](crate::operation::create_resource_gateway::builders::CreateResourceGatewayFluentBuilder::vpc_identifier) / [`set_vpc_identifier(Option<String>)`](crate::operation::create_resource_gateway::builders::CreateResourceGatewayFluentBuilder::set_vpc_identifier):<br>required: **false**<br><p>The ID of the VPC for the resource gateway.</p><br>
    ///   - [`subnet_ids(impl Into<String>)`](crate::operation::create_resource_gateway::builders::CreateResourceGatewayFluentBuilder::subnet_ids) / [`set_subnet_ids(Option<Vec::<String>>)`](crate::operation::create_resource_gateway::builders::CreateResourceGatewayFluentBuilder::set_subnet_ids):<br>required: **false**<br><p>The IDs of the VPC subnets in which to create the resource gateway.</p><br>
    ///   - [`security_group_ids(impl Into<String>)`](crate::operation::create_resource_gateway::builders::CreateResourceGatewayFluentBuilder::security_group_ids) / [`set_security_group_ids(Option<Vec::<String>>)`](crate::operation::create_resource_gateway::builders::CreateResourceGatewayFluentBuilder::set_security_group_ids):<br>required: **false**<br><p>The IDs of the security groups to apply to the resource gateway. The security groups must be in the same VPC.</p><br>
    ///   - [`ip_address_type(ResourceGatewayIpAddressType)`](crate::operation::create_resource_gateway::builders::CreateResourceGatewayFluentBuilder::ip_address_type) / [`set_ip_address_type(Option<ResourceGatewayIpAddressType>)`](crate::operation::create_resource_gateway::builders::CreateResourceGatewayFluentBuilder::set_ip_address_type):<br>required: **false**<br><p>A resource gateway can have IPv4, IPv6 or dualstack addresses. The IP address type of a resource gateway must be compatible with the subnets of the resource gateway and the IP address type of the resource, as described here:</p> <ul>  <li>   <p><b>IPv4</b>Assign IPv4 addresses to your resource gateway network interfaces. This option is supported only if all selected subnets have IPv4 address ranges, and the resource also has an IPv4 address.</p></li>  <li>   <p><b>IPv6</b>Assign IPv6 addresses to your resource gateway network interfaces. This option is supported only if all selected subnets are IPv6 only subnets, and the resource also has an IPv6 address.</p></li>  <li>   <p><b>Dualstack</b>Assign both IPv4 and IPv6 addresses to your resource gateway network interfaces. This option is supported only if all selected subnets have both IPv4 and IPv6 address ranges, and the resource either has an IPv4 or IPv6 address.</p></li> </ul> <p>The IP address type of the resource gateway is independent of the IP address type of the client or the VPC endpoint through which the resource is accessed.</p><br>
    ///   - [`ipv4_addresses_per_eni(i32)`](crate::operation::create_resource_gateway::builders::CreateResourceGatewayFluentBuilder::ipv4_addresses_per_eni) / [`set_ipv4_addresses_per_eni(Option<i32>)`](crate::operation::create_resource_gateway::builders::CreateResourceGatewayFluentBuilder::set_ipv4_addresses_per_eni):<br>required: **false**<br><p>The number of IPv4 addresses in each ENI for the resource gateway.</p><br>
    ///   - [`tags(impl Into<String>, impl Into<String>)`](crate::operation::create_resource_gateway::builders::CreateResourceGatewayFluentBuilder::tags) / [`set_tags(Option<HashMap::<String, String>>)`](crate::operation::create_resource_gateway::builders::CreateResourceGatewayFluentBuilder::set_tags):<br>required: **false**<br><p>The tags for the resource gateway.</p><br>
    /// - On success, responds with [`CreateResourceGatewayOutput`](crate::operation::create_resource_gateway::CreateResourceGatewayOutput) with field(s):
    ///   - [`name(Option<String>)`](crate::operation::create_resource_gateway::CreateResourceGatewayOutput::name): <p>The name of the resource gateway.</p>
    ///   - [`id(Option<String>)`](crate::operation::create_resource_gateway::CreateResourceGatewayOutput::id): <p>The ID of the resource gateway.</p>
    ///   - [`arn(Option<String>)`](crate::operation::create_resource_gateway::CreateResourceGatewayOutput::arn): <p>The Amazon Resource Name (ARN) of the resource gateway.</p>
    ///   - [`status(Option<ResourceGatewayStatus>)`](crate::operation::create_resource_gateway::CreateResourceGatewayOutput::status): <p>The status of the resource gateway.</p>
    ///   - [`vpc_identifier(Option<String>)`](crate::operation::create_resource_gateway::CreateResourceGatewayOutput::vpc_identifier): <p>The ID of the VPC.</p>
    ///   - [`subnet_ids(Option<Vec::<String>>)`](crate::operation::create_resource_gateway::CreateResourceGatewayOutput::subnet_ids): <p>The IDs of the resource gateway subnets.</p>
    ///   - [`security_group_ids(Option<Vec::<String>>)`](crate::operation::create_resource_gateway::CreateResourceGatewayOutput::security_group_ids): <p>The IDs of the security groups for the resource gateway.</p>
    ///   - [`ip_address_type(Option<ResourceGatewayIpAddressType>)`](crate::operation::create_resource_gateway::CreateResourceGatewayOutput::ip_address_type): <p>The type of IP address for the resource gateway.</p>
    ///   - [`ipv4_addresses_per_eni(Option<i32>)`](crate::operation::create_resource_gateway::CreateResourceGatewayOutput::ipv4_addresses_per_eni): <p>The number of IPv4 addresses in each ENI for the resource gateway.</p>
    /// - On failure, responds with [`SdkError<CreateResourceGatewayError>`](crate::operation::create_resource_gateway::CreateResourceGatewayError)
    pub fn create_resource_gateway(&self) -> crate::operation::create_resource_gateway::builders::CreateResourceGatewayFluentBuilder {
        crate::operation::create_resource_gateway::builders::CreateResourceGatewayFluentBuilder::new(self.handle.clone())
    }
}
