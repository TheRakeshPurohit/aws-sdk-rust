// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Contains information about an Amazon Web Services service that has been granted streaming access to your Resource Explorer data.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct StreamingAccessDetails {
    /// <p>The service principal of the Amazon Web Services service that has streaming access to your Resource Explorer data. A service principal is a unique identifier for an Amazon Web Services service.</p>
    pub service_principal: ::std::string::String,
    /// <p>The date and time when streaming access was granted to the Amazon Web Services service, in ISO 8601 format.</p>
    pub created_at: ::aws_smithy_types::DateTime,
}
impl StreamingAccessDetails {
    /// <p>The service principal of the Amazon Web Services service that has streaming access to your Resource Explorer data. A service principal is a unique identifier for an Amazon Web Services service.</p>
    pub fn service_principal(&self) -> &str {
        use std::ops::Deref;
        self.service_principal.deref()
    }
    /// <p>The date and time when streaming access was granted to the Amazon Web Services service, in ISO 8601 format.</p>
    pub fn created_at(&self) -> &::aws_smithy_types::DateTime {
        &self.created_at
    }
}
impl StreamingAccessDetails {
    /// Creates a new builder-style object to manufacture [`StreamingAccessDetails`](crate::types::StreamingAccessDetails).
    pub fn builder() -> crate::types::builders::StreamingAccessDetailsBuilder {
        crate::types::builders::StreamingAccessDetailsBuilder::default()
    }
}

/// A builder for [`StreamingAccessDetails`](crate::types::StreamingAccessDetails).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct StreamingAccessDetailsBuilder {
    pub(crate) service_principal: ::std::option::Option<::std::string::String>,
    pub(crate) created_at: ::std::option::Option<::aws_smithy_types::DateTime>,
}
impl StreamingAccessDetailsBuilder {
    /// <p>The service principal of the Amazon Web Services service that has streaming access to your Resource Explorer data. A service principal is a unique identifier for an Amazon Web Services service.</p>
    /// This field is required.
    pub fn service_principal(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.service_principal = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The service principal of the Amazon Web Services service that has streaming access to your Resource Explorer data. A service principal is a unique identifier for an Amazon Web Services service.</p>
    pub fn set_service_principal(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.service_principal = input;
        self
    }
    /// <p>The service principal of the Amazon Web Services service that has streaming access to your Resource Explorer data. A service principal is a unique identifier for an Amazon Web Services service.</p>
    pub fn get_service_principal(&self) -> &::std::option::Option<::std::string::String> {
        &self.service_principal
    }
    /// <p>The date and time when streaming access was granted to the Amazon Web Services service, in ISO 8601 format.</p>
    /// This field is required.
    pub fn created_at(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.created_at = ::std::option::Option::Some(input);
        self
    }
    /// <p>The date and time when streaming access was granted to the Amazon Web Services service, in ISO 8601 format.</p>
    pub fn set_created_at(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.created_at = input;
        self
    }
    /// <p>The date and time when streaming access was granted to the Amazon Web Services service, in ISO 8601 format.</p>
    pub fn get_created_at(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.created_at
    }
    /// Consumes the builder and constructs a [`StreamingAccessDetails`](crate::types::StreamingAccessDetails).
    /// This method will fail if any of the following fields are not set:
    /// - [`service_principal`](crate::types::builders::StreamingAccessDetailsBuilder::service_principal)
    /// - [`created_at`](crate::types::builders::StreamingAccessDetailsBuilder::created_at)
    pub fn build(self) -> ::std::result::Result<crate::types::StreamingAccessDetails, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::StreamingAccessDetails {
            service_principal: self.service_principal.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "service_principal",
                    "service_principal was not specified but it is required when building StreamingAccessDetails",
                )
            })?,
            created_at: self.created_at.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "created_at",
                    "created_at was not specified but it is required when building StreamingAccessDetails",
                )
            })?,
        })
    }
}
