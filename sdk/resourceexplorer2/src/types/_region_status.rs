// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Contains information about the status of Resource Explorer configuration in a specific Amazon Web Services Region.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct RegionStatus {
    /// <p>The Amazon Web Services Region for which this status information applies.</p>
    pub region: ::std::option::Option<::std::string::String>,
    /// <p>The status information for the Resource Explorer index in this Region.</p>
    pub index: ::std::option::Option<crate::types::IndexStatus>,
    /// <p>The status information for the Resource Explorer view in this Region.</p>
    pub view: ::std::option::Option<crate::types::ViewStatus>,
}
impl RegionStatus {
    /// <p>The Amazon Web Services Region for which this status information applies.</p>
    pub fn region(&self) -> ::std::option::Option<&str> {
        self.region.as_deref()
    }
    /// <p>The status information for the Resource Explorer index in this Region.</p>
    pub fn index(&self) -> ::std::option::Option<&crate::types::IndexStatus> {
        self.index.as_ref()
    }
    /// <p>The status information for the Resource Explorer view in this Region.</p>
    pub fn view(&self) -> ::std::option::Option<&crate::types::ViewStatus> {
        self.view.as_ref()
    }
}
impl RegionStatus {
    /// Creates a new builder-style object to manufacture [`RegionStatus`](crate::types::RegionStatus).
    pub fn builder() -> crate::types::builders::RegionStatusBuilder {
        crate::types::builders::RegionStatusBuilder::default()
    }
}

/// A builder for [`RegionStatus`](crate::types::RegionStatus).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct RegionStatusBuilder {
    pub(crate) region: ::std::option::Option<::std::string::String>,
    pub(crate) index: ::std::option::Option<crate::types::IndexStatus>,
    pub(crate) view: ::std::option::Option<crate::types::ViewStatus>,
}
impl RegionStatusBuilder {
    /// <p>The Amazon Web Services Region for which this status information applies.</p>
    pub fn region(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.region = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Web Services Region for which this status information applies.</p>
    pub fn set_region(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.region = input;
        self
    }
    /// <p>The Amazon Web Services Region for which this status information applies.</p>
    pub fn get_region(&self) -> &::std::option::Option<::std::string::String> {
        &self.region
    }
    /// <p>The status information for the Resource Explorer index in this Region.</p>
    pub fn index(mut self, input: crate::types::IndexStatus) -> Self {
        self.index = ::std::option::Option::Some(input);
        self
    }
    /// <p>The status information for the Resource Explorer index in this Region.</p>
    pub fn set_index(mut self, input: ::std::option::Option<crate::types::IndexStatus>) -> Self {
        self.index = input;
        self
    }
    /// <p>The status information for the Resource Explorer index in this Region.</p>
    pub fn get_index(&self) -> &::std::option::Option<crate::types::IndexStatus> {
        &self.index
    }
    /// <p>The status information for the Resource Explorer view in this Region.</p>
    pub fn view(mut self, input: crate::types::ViewStatus) -> Self {
        self.view = ::std::option::Option::Some(input);
        self
    }
    /// <p>The status information for the Resource Explorer view in this Region.</p>
    pub fn set_view(mut self, input: ::std::option::Option<crate::types::ViewStatus>) -> Self {
        self.view = input;
        self
    }
    /// <p>The status information for the Resource Explorer view in this Region.</p>
    pub fn get_view(&self) -> &::std::option::Option<crate::types::ViewStatus> {
        &self.view
    }
    /// Consumes the builder and constructs a [`RegionStatus`](crate::types::RegionStatus).
    pub fn build(self) -> crate::types::RegionStatus {
        crate::types::RegionStatus {
            region: self.region,
            index: self.index,
            view: self.view,
        }
    }
}
