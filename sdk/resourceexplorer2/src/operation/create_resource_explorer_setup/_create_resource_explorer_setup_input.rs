// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct CreateResourceExplorerSetupInput {
    /// <p>A list of Amazon Web Services Regions where Resource Explorer should be configured. Each Region in the list will have a user-owned index created.</p>
    pub region_list: ::std::option::Option<::std::vec::Vec<::std::string::String>>,
    /// <p>A list of Amazon Web Services Regions that should be configured as aggregator Regions. Aggregator Regions receive replicated index information from all other Regions where there is a user-owned index.</p>
    pub aggregator_regions: ::std::option::Option<::std::vec::Vec<::std::string::String>>,
    /// <p>The name for the view to be created as part of the Resource Explorer setup. The view name must be unique within the Amazon Web Services account and Region.</p>
    pub view_name: ::std::option::Option<::std::string::String>,
}
impl CreateResourceExplorerSetupInput {
    /// <p>A list of Amazon Web Services Regions where Resource Explorer should be configured. Each Region in the list will have a user-owned index created.</p>
    ///
    /// If no value was sent for this field, a default will be set. If you want to determine if no value was sent, use `.region_list.is_none()`.
    pub fn region_list(&self) -> &[::std::string::String] {
        self.region_list.as_deref().unwrap_or_default()
    }
    /// <p>A list of Amazon Web Services Regions that should be configured as aggregator Regions. Aggregator Regions receive replicated index information from all other Regions where there is a user-owned index.</p>
    ///
    /// If no value was sent for this field, a default will be set. If you want to determine if no value was sent, use `.aggregator_regions.is_none()`.
    pub fn aggregator_regions(&self) -> &[::std::string::String] {
        self.aggregator_regions.as_deref().unwrap_or_default()
    }
    /// <p>The name for the view to be created as part of the Resource Explorer setup. The view name must be unique within the Amazon Web Services account and Region.</p>
    pub fn view_name(&self) -> ::std::option::Option<&str> {
        self.view_name.as_deref()
    }
}
impl CreateResourceExplorerSetupInput {
    /// Creates a new builder-style object to manufacture [`CreateResourceExplorerSetupInput`](crate::operation::create_resource_explorer_setup::CreateResourceExplorerSetupInput).
    pub fn builder() -> crate::operation::create_resource_explorer_setup::builders::CreateResourceExplorerSetupInputBuilder {
        crate::operation::create_resource_explorer_setup::builders::CreateResourceExplorerSetupInputBuilder::default()
    }
}

/// A builder for [`CreateResourceExplorerSetupInput`](crate::operation::create_resource_explorer_setup::CreateResourceExplorerSetupInput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct CreateResourceExplorerSetupInputBuilder {
    pub(crate) region_list: ::std::option::Option<::std::vec::Vec<::std::string::String>>,
    pub(crate) aggregator_regions: ::std::option::Option<::std::vec::Vec<::std::string::String>>,
    pub(crate) view_name: ::std::option::Option<::std::string::String>,
}
impl CreateResourceExplorerSetupInputBuilder {
    /// Appends an item to `region_list`.
    ///
    /// To override the contents of this collection use [`set_region_list`](Self::set_region_list).
    ///
    /// <p>A list of Amazon Web Services Regions where Resource Explorer should be configured. Each Region in the list will have a user-owned index created.</p>
    pub fn region_list(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        let mut v = self.region_list.unwrap_or_default();
        v.push(input.into());
        self.region_list = ::std::option::Option::Some(v);
        self
    }
    /// <p>A list of Amazon Web Services Regions where Resource Explorer should be configured. Each Region in the list will have a user-owned index created.</p>
    pub fn set_region_list(mut self, input: ::std::option::Option<::std::vec::Vec<::std::string::String>>) -> Self {
        self.region_list = input;
        self
    }
    /// <p>A list of Amazon Web Services Regions where Resource Explorer should be configured. Each Region in the list will have a user-owned index created.</p>
    pub fn get_region_list(&self) -> &::std::option::Option<::std::vec::Vec<::std::string::String>> {
        &self.region_list
    }
    /// Appends an item to `aggregator_regions`.
    ///
    /// To override the contents of this collection use [`set_aggregator_regions`](Self::set_aggregator_regions).
    ///
    /// <p>A list of Amazon Web Services Regions that should be configured as aggregator Regions. Aggregator Regions receive replicated index information from all other Regions where there is a user-owned index.</p>
    pub fn aggregator_regions(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        let mut v = self.aggregator_regions.unwrap_or_default();
        v.push(input.into());
        self.aggregator_regions = ::std::option::Option::Some(v);
        self
    }
    /// <p>A list of Amazon Web Services Regions that should be configured as aggregator Regions. Aggregator Regions receive replicated index information from all other Regions where there is a user-owned index.</p>
    pub fn set_aggregator_regions(mut self, input: ::std::option::Option<::std::vec::Vec<::std::string::String>>) -> Self {
        self.aggregator_regions = input;
        self
    }
    /// <p>A list of Amazon Web Services Regions that should be configured as aggregator Regions. Aggregator Regions receive replicated index information from all other Regions where there is a user-owned index.</p>
    pub fn get_aggregator_regions(&self) -> &::std::option::Option<::std::vec::Vec<::std::string::String>> {
        &self.aggregator_regions
    }
    /// <p>The name for the view to be created as part of the Resource Explorer setup. The view name must be unique within the Amazon Web Services account and Region.</p>
    /// This field is required.
    pub fn view_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.view_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name for the view to be created as part of the Resource Explorer setup. The view name must be unique within the Amazon Web Services account and Region.</p>
    pub fn set_view_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.view_name = input;
        self
    }
    /// <p>The name for the view to be created as part of the Resource Explorer setup. The view name must be unique within the Amazon Web Services account and Region.</p>
    pub fn get_view_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.view_name
    }
    /// Consumes the builder and constructs a [`CreateResourceExplorerSetupInput`](crate::operation::create_resource_explorer_setup::CreateResourceExplorerSetupInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::create_resource_explorer_setup::CreateResourceExplorerSetupInput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(crate::operation::create_resource_explorer_setup::CreateResourceExplorerSetupInput {
            region_list: self.region_list,
            aggregator_regions: self.aggregator_regions,
            view_name: self.view_name,
        })
    }
}
