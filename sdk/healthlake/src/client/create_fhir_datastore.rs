// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateFHIRDatastore`](crate::operation::create_fhir_datastore::builders::CreateFHIRDatastoreFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`datastore_name(impl Into<String>)`](crate::operation::create_fhir_datastore::builders::CreateFHIRDatastoreFluentBuilder::datastore_name) / [`set_datastore_name(Option<String>)`](crate::operation::create_fhir_datastore::builders::CreateFHIRDatastoreFluentBuilder::set_datastore_name):<br>required: **false**<br><p>The data store name (user-generated).</p><br>
    ///   - [`datastore_type_version(FhirVersion)`](crate::operation::create_fhir_datastore::builders::CreateFHIRDatastoreFluentBuilder::datastore_type_version) / [`set_datastore_type_version(Option<FhirVersion>)`](crate::operation::create_fhir_datastore::builders::CreateFHIRDatastoreFluentBuilder::set_datastore_type_version):<br>required: **true**<br><p>The FHIR release version supported by the data store. Current support is for version <code>R4</code>.</p><br>
    ///   - [`sse_configuration(SseConfiguration)`](crate::operation::create_fhir_datastore::builders::CreateFHIRDatastoreFluentBuilder::sse_configuration) / [`set_sse_configuration(Option<SseConfiguration>)`](crate::operation::create_fhir_datastore::builders::CreateFHIRDatastoreFluentBuilder::set_sse_configuration):<br>required: **false**<br><p>The server-side encryption key configuration for a customer-provided encryption key specified for creating a data store.</p><br>
    ///   - [`preload_data_config(PreloadDataConfig)`](crate::operation::create_fhir_datastore::builders::CreateFHIRDatastoreFluentBuilder::preload_data_config) / [`set_preload_data_config(Option<PreloadDataConfig>)`](crate::operation::create_fhir_datastore::builders::CreateFHIRDatastoreFluentBuilder::set_preload_data_config):<br>required: **false**<br><p>An optional parameter to preload (import) open source Synthea FHIR data upon creation of the data store.</p><br>
    ///   - [`client_token(impl Into<String>)`](crate::operation::create_fhir_datastore::builders::CreateFHIRDatastoreFluentBuilder::client_token) / [`set_client_token(Option<String>)`](crate::operation::create_fhir_datastore::builders::CreateFHIRDatastoreFluentBuilder::set_client_token):<br>required: **false**<br><p>An optional user-provided token to ensure API idempotency.</p><br>
    ///   - [`tags(Tag)`](crate::operation::create_fhir_datastore::builders::CreateFHIRDatastoreFluentBuilder::tags) / [`set_tags(Option<Vec::<Tag>>)`](crate::operation::create_fhir_datastore::builders::CreateFHIRDatastoreFluentBuilder::set_tags):<br>required: **false**<br><p>The resource tags applied to a data store when it is created.</p><br>
    ///   - [`identity_provider_configuration(IdentityProviderConfiguration)`](crate::operation::create_fhir_datastore::builders::CreateFHIRDatastoreFluentBuilder::identity_provider_configuration) / [`set_identity_provider_configuration(Option<IdentityProviderConfiguration>)`](crate::operation::create_fhir_datastore::builders::CreateFHIRDatastoreFluentBuilder::set_identity_provider_configuration):<br>required: **false**<br><p>The identity provider configuration to use for the data store.</p><br>
    /// - On success, responds with [`CreateFhirDatastoreOutput`](crate::operation::create_fhir_datastore::CreateFhirDatastoreOutput) with field(s):
    ///   - [`datastore_id(String)`](crate::operation::create_fhir_datastore::CreateFhirDatastoreOutput::datastore_id): <p>The data store identifier.</p>
    ///   - [`datastore_arn(String)`](crate::operation::create_fhir_datastore::CreateFhirDatastoreOutput::datastore_arn): <p>The Amazon Resource Name (ARN) for the data store.</p>
    ///   - [`datastore_status(DatastoreStatus)`](crate::operation::create_fhir_datastore::CreateFhirDatastoreOutput::datastore_status): <p>The data store status.</p>
    ///   - [`datastore_endpoint(String)`](crate::operation::create_fhir_datastore::CreateFhirDatastoreOutput::datastore_endpoint): <p>The AWS endpoint created for the data store.</p>
    /// - On failure, responds with [`SdkError<CreateFHIRDatastoreError>`](crate::operation::create_fhir_datastore::CreateFHIRDatastoreError)
    pub fn create_fhir_datastore(&self) -> crate::operation::create_fhir_datastore::builders::CreateFHIRDatastoreFluentBuilder {
        crate::operation::create_fhir_datastore::builders::CreateFHIRDatastoreFluentBuilder::new(self.handle.clone())
    }
}
