// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateEventBus`](crate::operation::create_event_bus::builders::CreateEventBusFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`name(impl Into<String>)`](crate::operation::create_event_bus::builders::CreateEventBusFluentBuilder::name) / [`set_name(Option<String>)`](crate::operation::create_event_bus::builders::CreateEventBusFluentBuilder::set_name):<br>required: **true**<br><p>The name of the new event bus.</p> <p>Custom event bus names can't contain the <code>/</code> character, but you can use the <code>/</code> character in partner event bus names. In addition, for partner event buses, the name must exactly match the name of the partner event source that this event bus is matched to.</p> <p>You can't use the name <code>default</code> for a custom event bus, as this name is already used for your account's default event bus.</p><br>
    ///   - [`event_source_name(impl Into<String>)`](crate::operation::create_event_bus::builders::CreateEventBusFluentBuilder::event_source_name) / [`set_event_source_name(Option<String>)`](crate::operation::create_event_bus::builders::CreateEventBusFluentBuilder::set_event_source_name):<br>required: **false**<br><p>If you are creating a partner event bus, this specifies the partner event source that the new event bus will be matched with.</p><br>
    ///   - [`description(impl Into<String>)`](crate::operation::create_event_bus::builders::CreateEventBusFluentBuilder::description) / [`set_description(Option<String>)`](crate::operation::create_event_bus::builders::CreateEventBusFluentBuilder::set_description):<br>required: **false**<br><p>The event bus description.</p><br>
    ///   - [`kms_key_identifier(impl Into<String>)`](crate::operation::create_event_bus::builders::CreateEventBusFluentBuilder::kms_key_identifier) / [`set_kms_key_identifier(Option<String>)`](crate::operation::create_event_bus::builders::CreateEventBusFluentBuilder::set_kms_key_identifier):<br>required: **false**<br><p>The identifier of the KMS customer managed key for EventBridge to use, if you choose to use a customer managed key to encrypt events on this event bus. The identifier can be the key Amazon Resource Name (ARN), KeyId, key alias, or key alias ARN.</p> <p>If you do not specify a customer managed key identifier, EventBridge uses an Amazon Web Services owned key to encrypt events on the event bus.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/viewing-keys.html">Identify and view keys</a> in the <i>Key Management Service Developer Guide</i>.</p><note>  <p>Schema discovery is not supported for event buses encrypted using a customer managed key. EventBridge returns an error if:</p>  <ul>   <li>    <p>You call <code> <a href="https://docs.aws.amazon.com/eventbridge/latest/schema-reference/v1-discoverers.html#CreateDiscoverer">CreateDiscoverer</a> </code> on an event bus set to use a customer managed key for encryption.</p></li>   <li>    <p>You call <code> <a href="https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_UpdatedEventBus.html">UpdatedEventBus</a> </code> to set a customer managed key on an event bus with schema discovery enabled.</p></li>  </ul>  <p>To enable schema discovery on an event bus, choose to use an Amazon Web Services owned key. For more information, see <a href="https://docs.aws.amazon.com/eventbridge/latest/userguide/eb-encryption-event-bus-cmkey.html">Encrypting events</a> in the <i>Amazon EventBridge User Guide</i>.</p> </note> <important>  <p>If you have specified that EventBridge use a customer managed key for encrypting the source event bus, we strongly recommend you also specify a customer managed key for any archives for the event bus as well.</p>  <p>For more information, see <a href="https://docs.aws.amazon.com/eventbridge/latest/userguide/encryption-archives.html">Encrypting archives</a> in the <i>Amazon EventBridge User Guide</i>.</p> </important><br>
    ///   - [`dead_letter_config(DeadLetterConfig)`](crate::operation::create_event_bus::builders::CreateEventBusFluentBuilder::dead_letter_config) / [`set_dead_letter_config(Option<DeadLetterConfig>)`](crate::operation::create_event_bus::builders::CreateEventBusFluentBuilder::set_dead_letter_config):<br>required: **false**<br><p>Configuration details of the Amazon SQS queue for EventBridge to use as a dead-letter queue (DLQ).</p> <p>For more information, see <a href="https://docs.aws.amazon.com/eventbridge/latest/userguide/eb-rule-event-delivery.html#eb-rule-dlq">Using dead-letter queues to process undelivered events</a> in the <i>EventBridge User Guide</i>.</p><br>
    ///   - [`log_config(LogConfig)`](crate::operation::create_event_bus::builders::CreateEventBusFluentBuilder::log_config) / [`set_log_config(Option<LogConfig>)`](crate::operation::create_event_bus::builders::CreateEventBusFluentBuilder::set_log_config):<br>required: **false**<br><p>The logging configuration settings for the event bus.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/eb-event-bus-logs.html">Configuring logs for event buses</a> in the <i>EventBridge User Guide</i>.</p><br>
    ///   - [`tags(Tag)`](crate::operation::create_event_bus::builders::CreateEventBusFluentBuilder::tags) / [`set_tags(Option<Vec::<Tag>>)`](crate::operation::create_event_bus::builders::CreateEventBusFluentBuilder::set_tags):<br>required: **false**<br><p>Tags to associate with the event bus.</p><br>
    /// - On success, responds with [`CreateEventBusOutput`](crate::operation::create_event_bus::CreateEventBusOutput) with field(s):
    ///   - [`event_bus_arn(Option<String>)`](crate::operation::create_event_bus::CreateEventBusOutput::event_bus_arn): <p>The ARN of the new event bus.</p>
    ///   - [`description(Option<String>)`](crate::operation::create_event_bus::CreateEventBusOutput::description): <p>The event bus description.</p>
    ///   - [`kms_key_identifier(Option<String>)`](crate::operation::create_event_bus::CreateEventBusOutput::kms_key_identifier): <p>The identifier of the KMS customer managed key for EventBridge to use to encrypt events on this event bus, if one has been specified.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/eventbridge/latest/userguide/eb-encryption.html">Data encryption in EventBridge</a> in the <i>Amazon EventBridge User Guide</i>.</p>
    ///   - [`dead_letter_config(Option<DeadLetterConfig>)`](crate::operation::create_event_bus::CreateEventBusOutput::dead_letter_config): <p>Configuration details of the Amazon SQS queue for EventBridge to use as a dead-letter queue (DLQ).</p> <p>For more information, see <a href="https://docs.aws.amazon.com/eventbridge/latest/userguide/eb-rule-event-delivery.html#eb-rule-dlq">Using dead-letter queues to process undelivered events</a> in the <i>EventBridge User Guide</i>.</p>
    ///   - [`log_config(Option<LogConfig>)`](crate::operation::create_event_bus::CreateEventBusOutput::log_config): <p>The logging configuration settings for the event bus.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/eb-event-bus-logs.html">Configuring logs for event buses</a> in the <i>EventBridge User Guide</i>.</p>
    /// - On failure, responds with [`SdkError<CreateEventBusError>`](crate::operation::create_event_bus::CreateEventBusError)
    pub fn create_event_bus(&self) -> crate::operation::create_event_bus::builders::CreateEventBusFluentBuilder {
        crate::operation::create_event_bus::builders::CreateEventBusFluentBuilder::new(self.handle.clone())
    }
}
