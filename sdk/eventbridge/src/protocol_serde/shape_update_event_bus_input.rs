// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_update_event_bus_input_input(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::operation::update_event_bus::UpdateEventBusInput,
) -> ::std::result::Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    if let Some(var_1) = &input.name {
        object.key("Name").string(var_1.as_str());
    }
    if let Some(var_2) = &input.kms_key_identifier {
        object.key("KmsKeyIdentifier").string(var_2.as_str());
    }
    if let Some(var_3) = &input.description {
        object.key("Description").string(var_3.as_str());
    }
    if let Some(var_4) = &input.dead_letter_config {
        #[allow(unused_mut)]
        let mut object_5 = object.key("DeadLetterConfig").start_object();
        crate::protocol_serde::shape_dead_letter_config::ser_dead_letter_config(&mut object_5, var_4)?;
        object_5.finish();
    }
    if let Some(var_6) = &input.log_config {
        #[allow(unused_mut)]
        let mut object_7 = object.key("LogConfig").start_object();
        crate::protocol_serde::shape_log_config::ser_log_config(&mut object_7, var_6)?;
        object_7.finish();
    }
    Ok(())
}
