// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct CreatePipelineEndpointInput {
    /// <p>The Amazon Resource Name (ARN) of the pipeline to create the endpoint for.</p>
    pub pipeline_arn: ::std::option::Option<::std::string::String>,
    /// <p>Container for the VPC configuration for the pipeline endpoint, including subnet IDs and security group IDs.</p>
    pub vpc_options: ::std::option::Option<crate::types::PipelineEndpointVpcOptions>,
}
impl CreatePipelineEndpointInput {
    /// <p>The Amazon Resource Name (ARN) of the pipeline to create the endpoint for.</p>
    pub fn pipeline_arn(&self) -> ::std::option::Option<&str> {
        self.pipeline_arn.as_deref()
    }
    /// <p>Container for the VPC configuration for the pipeline endpoint, including subnet IDs and security group IDs.</p>
    pub fn vpc_options(&self) -> ::std::option::Option<&crate::types::PipelineEndpointVpcOptions> {
        self.vpc_options.as_ref()
    }
}
impl CreatePipelineEndpointInput {
    /// Creates a new builder-style object to manufacture [`CreatePipelineEndpointInput`](crate::operation::create_pipeline_endpoint::CreatePipelineEndpointInput).
    pub fn builder() -> crate::operation::create_pipeline_endpoint::builders::CreatePipelineEndpointInputBuilder {
        crate::operation::create_pipeline_endpoint::builders::CreatePipelineEndpointInputBuilder::default()
    }
}

/// A builder for [`CreatePipelineEndpointInput`](crate::operation::create_pipeline_endpoint::CreatePipelineEndpointInput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct CreatePipelineEndpointInputBuilder {
    pub(crate) pipeline_arn: ::std::option::Option<::std::string::String>,
    pub(crate) vpc_options: ::std::option::Option<crate::types::PipelineEndpointVpcOptions>,
}
impl CreatePipelineEndpointInputBuilder {
    /// <p>The Amazon Resource Name (ARN) of the pipeline to create the endpoint for.</p>
    /// This field is required.
    pub fn pipeline_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.pipeline_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the pipeline to create the endpoint for.</p>
    pub fn set_pipeline_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.pipeline_arn = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the pipeline to create the endpoint for.</p>
    pub fn get_pipeline_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.pipeline_arn
    }
    /// <p>Container for the VPC configuration for the pipeline endpoint, including subnet IDs and security group IDs.</p>
    /// This field is required.
    pub fn vpc_options(mut self, input: crate::types::PipelineEndpointVpcOptions) -> Self {
        self.vpc_options = ::std::option::Option::Some(input);
        self
    }
    /// <p>Container for the VPC configuration for the pipeline endpoint, including subnet IDs and security group IDs.</p>
    pub fn set_vpc_options(mut self, input: ::std::option::Option<crate::types::PipelineEndpointVpcOptions>) -> Self {
        self.vpc_options = input;
        self
    }
    /// <p>Container for the VPC configuration for the pipeline endpoint, including subnet IDs and security group IDs.</p>
    pub fn get_vpc_options(&self) -> &::std::option::Option<crate::types::PipelineEndpointVpcOptions> {
        &self.vpc_options
    }
    /// Consumes the builder and constructs a [`CreatePipelineEndpointInput`](crate::operation::create_pipeline_endpoint::CreatePipelineEndpointInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::create_pipeline_endpoint::CreatePipelineEndpointInput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(crate::operation::create_pipeline_endpoint::CreatePipelineEndpointInput {
            pipeline_arn: self.pipeline_arn,
            vpc_options: self.vpc_options,
        })
    }
}
