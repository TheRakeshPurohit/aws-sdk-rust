// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub(crate) fn reflens_list_pipeline_endpoint_connections_output_output_next_token(
    input: &crate::operation::list_pipeline_endpoint_connections::ListPipelineEndpointConnectionsOutput,
) -> ::std::option::Option<&::std::string::String> {
    let input = match &input.next_token {
        ::std::option::Option::None => return ::std::option::Option::None,
        ::std::option::Option::Some(t) => t,
    };
    ::std::option::Option::Some(input)
}

pub(crate) fn reflens_list_pipeline_endpoints_output_output_next_token(
    input: &crate::operation::list_pipeline_endpoints::ListPipelineEndpointsOutput,
) -> ::std::option::Option<&::std::string::String> {
    let input = match &input.next_token {
        ::std::option::Option::None => return ::std::option::Option::None,
        ::std::option::Option::Some(t) => t,
    };
    ::std::option::Option::Some(input)
}

pub(crate) fn reflens_list_pipelines_output_output_next_token(
    input: &crate::operation::list_pipelines::ListPipelinesOutput,
) -> ::std::option::Option<&::std::string::String> {
    let input = match &input.next_token {
        ::std::option::Option::None => return ::std::option::Option::None,
        ::std::option::Option::Some(t) => t,
    };
    ::std::option::Option::Some(input)
}

pub(crate) fn lens_list_pipeline_endpoint_connections_output_output_pipeline_endpoint_connections(
    input: crate::operation::list_pipeline_endpoint_connections::ListPipelineEndpointConnectionsOutput,
) -> ::std::option::Option<::std::vec::Vec<crate::types::PipelineEndpointConnection>> {
    let input = input.pipeline_endpoint_connections?;
    ::std::option::Option::Some(input)
}

pub(crate) fn lens_list_pipeline_endpoints_output_output_pipeline_endpoints(
    input: crate::operation::list_pipeline_endpoints::ListPipelineEndpointsOutput,
) -> ::std::option::Option<::std::vec::Vec<crate::types::PipelineEndpoint>> {
    let input = input.pipeline_endpoints?;
    ::std::option::Option::Some(input)
}
