// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Represents a connection to a pipeline endpoint, containing details about the endpoint association.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct PipelineEndpointConnection {
    /// <p>The Amazon Resource Name (ARN) of the pipeline in the endpoint connection.</p>
    pub pipeline_arn: ::std::option::Option<::std::string::String>,
    /// <p>The unique identifier of the endpoint in the connection.</p>
    pub endpoint_id: ::std::option::Option<::std::string::String>,
    /// <p>The current status of the pipeline endpoint connection.</p>
    pub status: ::std::option::Option<crate::types::PipelineEndpointStatus>,
    /// <p>The Amazon Web Services account ID that owns the VPC endpoint used in this connection.</p>
    pub vpc_endpoint_owner: ::std::option::Option<::std::string::String>,
}
impl PipelineEndpointConnection {
    /// <p>The Amazon Resource Name (ARN) of the pipeline in the endpoint connection.</p>
    pub fn pipeline_arn(&self) -> ::std::option::Option<&str> {
        self.pipeline_arn.as_deref()
    }
    /// <p>The unique identifier of the endpoint in the connection.</p>
    pub fn endpoint_id(&self) -> ::std::option::Option<&str> {
        self.endpoint_id.as_deref()
    }
    /// <p>The current status of the pipeline endpoint connection.</p>
    pub fn status(&self) -> ::std::option::Option<&crate::types::PipelineEndpointStatus> {
        self.status.as_ref()
    }
    /// <p>The Amazon Web Services account ID that owns the VPC endpoint used in this connection.</p>
    pub fn vpc_endpoint_owner(&self) -> ::std::option::Option<&str> {
        self.vpc_endpoint_owner.as_deref()
    }
}
impl PipelineEndpointConnection {
    /// Creates a new builder-style object to manufacture [`PipelineEndpointConnection`](crate::types::PipelineEndpointConnection).
    pub fn builder() -> crate::types::builders::PipelineEndpointConnectionBuilder {
        crate::types::builders::PipelineEndpointConnectionBuilder::default()
    }
}

/// A builder for [`PipelineEndpointConnection`](crate::types::PipelineEndpointConnection).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct PipelineEndpointConnectionBuilder {
    pub(crate) pipeline_arn: ::std::option::Option<::std::string::String>,
    pub(crate) endpoint_id: ::std::option::Option<::std::string::String>,
    pub(crate) status: ::std::option::Option<crate::types::PipelineEndpointStatus>,
    pub(crate) vpc_endpoint_owner: ::std::option::Option<::std::string::String>,
}
impl PipelineEndpointConnectionBuilder {
    /// <p>The Amazon Resource Name (ARN) of the pipeline in the endpoint connection.</p>
    pub fn pipeline_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.pipeline_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the pipeline in the endpoint connection.</p>
    pub fn set_pipeline_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.pipeline_arn = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the pipeline in the endpoint connection.</p>
    pub fn get_pipeline_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.pipeline_arn
    }
    /// <p>The unique identifier of the endpoint in the connection.</p>
    pub fn endpoint_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.endpoint_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The unique identifier of the endpoint in the connection.</p>
    pub fn set_endpoint_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.endpoint_id = input;
        self
    }
    /// <p>The unique identifier of the endpoint in the connection.</p>
    pub fn get_endpoint_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.endpoint_id
    }
    /// <p>The current status of the pipeline endpoint connection.</p>
    pub fn status(mut self, input: crate::types::PipelineEndpointStatus) -> Self {
        self.status = ::std::option::Option::Some(input);
        self
    }
    /// <p>The current status of the pipeline endpoint connection.</p>
    pub fn set_status(mut self, input: ::std::option::Option<crate::types::PipelineEndpointStatus>) -> Self {
        self.status = input;
        self
    }
    /// <p>The current status of the pipeline endpoint connection.</p>
    pub fn get_status(&self) -> &::std::option::Option<crate::types::PipelineEndpointStatus> {
        &self.status
    }
    /// <p>The Amazon Web Services account ID that owns the VPC endpoint used in this connection.</p>
    pub fn vpc_endpoint_owner(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.vpc_endpoint_owner = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Web Services account ID that owns the VPC endpoint used in this connection.</p>
    pub fn set_vpc_endpoint_owner(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.vpc_endpoint_owner = input;
        self
    }
    /// <p>The Amazon Web Services account ID that owns the VPC endpoint used in this connection.</p>
    pub fn get_vpc_endpoint_owner(&self) -> &::std::option::Option<::std::string::String> {
        &self.vpc_endpoint_owner
    }
    /// Consumes the builder and constructs a [`PipelineEndpointConnection`](crate::types::PipelineEndpointConnection).
    pub fn build(self) -> crate::types::PipelineEndpointConnection {
        crate::types::PipelineEndpointConnection {
            pipeline_arn: self.pipeline_arn,
            endpoint_id: self.endpoint_id,
            status: self.status,
            vpc_endpoint_owner: self.vpc_endpoint_owner,
        }
    }
}
