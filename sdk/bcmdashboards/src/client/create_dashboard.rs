// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateDashboard`](crate::operation::create_dashboard::builders::CreateDashboardFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`name(impl Into<String>)`](crate::operation::create_dashboard::builders::CreateDashboardFluentBuilder::name) / [`set_name(Option<String>)`](crate::operation::create_dashboard::builders::CreateDashboardFluentBuilder::set_name):<br>required: **true**<br><p>The name of the dashboard. The name must be unique within your account.</p><br>
    ///   - [`description(impl Into<String>)`](crate::operation::create_dashboard::builders::CreateDashboardFluentBuilder::description) / [`set_description(Option<String>)`](crate::operation::create_dashboard::builders::CreateDashboardFluentBuilder::set_description):<br>required: **false**<br><p>A description of the dashboard's purpose or contents.</p><br>
    ///   - [`widgets(Widget)`](crate::operation::create_dashboard::builders::CreateDashboardFluentBuilder::widgets) / [`set_widgets(Option<Vec::<Widget>>)`](crate::operation::create_dashboard::builders::CreateDashboardFluentBuilder::set_widgets):<br>required: **true**<br><p>An array of widget configurations that define the visualizations to be displayed in the dashboard. Each dashboard can contain up to 20 widgets.</p><br>
    ///   - [`resource_tags(ResourceTag)`](crate::operation::create_dashboard::builders::CreateDashboardFluentBuilder::resource_tags) / [`set_resource_tags(Option<Vec::<ResourceTag>>)`](crate::operation::create_dashboard::builders::CreateDashboardFluentBuilder::set_resource_tags):<br>required: **false**<br><p>The tags to apply to the dashboard resource for organization and management.</p><br>
    /// - On success, responds with [`CreateDashboardOutput`](crate::operation::create_dashboard::CreateDashboardOutput) with field(s):
    ///   - [`arn(String)`](crate::operation::create_dashboard::CreateDashboardOutput::arn): <p>The ARN of the newly created dashboard.</p>
    /// - On failure, responds with [`SdkError<CreateDashboardError>`](crate::operation::create_dashboard::CreateDashboardError)
    pub fn create_dashboard(&self) -> crate::operation::create_dashboard::builders::CreateDashboardFluentBuilder {
        crate::operation::create_dashboard::builders::CreateDashboardFluentBuilder::new(self.handle.clone())
    }
}
