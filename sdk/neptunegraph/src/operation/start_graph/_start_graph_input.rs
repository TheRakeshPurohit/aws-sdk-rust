// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct StartGraphInput {
    /// <p>The unique identifier of the Neptune Analytics graph.</p>
    pub graph_identifier: ::std::option::Option<::std::string::String>,
}
impl StartGraphInput {
    /// <p>The unique identifier of the Neptune Analytics graph.</p>
    pub fn graph_identifier(&self) -> ::std::option::Option<&str> {
        self.graph_identifier.as_deref()
    }
}
impl StartGraphInput {
    /// Creates a new builder-style object to manufacture [`StartGraphInput`](crate::operation::start_graph::StartGraphInput).
    pub fn builder() -> crate::operation::start_graph::builders::StartGraphInputBuilder {
        crate::operation::start_graph::builders::StartGraphInputBuilder::default()
    }
}

/// A builder for [`StartGraphInput`](crate::operation::start_graph::StartGraphInput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct StartGraphInputBuilder {
    pub(crate) graph_identifier: ::std::option::Option<::std::string::String>,
}
impl StartGraphInputBuilder {
    /// <p>The unique identifier of the Neptune Analytics graph.</p>
    /// This field is required.
    pub fn graph_identifier(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.graph_identifier = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The unique identifier of the Neptune Analytics graph.</p>
    pub fn set_graph_identifier(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.graph_identifier = input;
        self
    }
    /// <p>The unique identifier of the Neptune Analytics graph.</p>
    pub fn get_graph_identifier(&self) -> &::std::option::Option<::std::string::String> {
        &self.graph_identifier
    }
    /// Consumes the builder and constructs a [`StartGraphInput`](crate::operation::start_graph::StartGraphInput).
    pub fn build(self) -> ::std::result::Result<crate::operation::start_graph::StartGraphInput, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::operation::start_graph::StartGraphInput {
            graph_identifier: self.graph_identifier,
        })
    }
}
