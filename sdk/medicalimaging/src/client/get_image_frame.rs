// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`GetImageFrame`](crate::operation::get_image_frame::builders::GetImageFrameFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`datastore_id(impl Into<String>)`](crate::operation::get_image_frame::builders::GetImageFrameFluentBuilder::datastore_id) / [`set_datastore_id(Option<String>)`](crate::operation::get_image_frame::builders::GetImageFrameFluentBuilder::set_datastore_id):<br>required: **true**<br><p>The data store identifier.</p><br>
    ///   - [`image_set_id(impl Into<String>)`](crate::operation::get_image_frame::builders::GetImageFrameFluentBuilder::image_set_id) / [`set_image_set_id(Option<String>)`](crate::operation::get_image_frame::builders::GetImageFrameFluentBuilder::set_image_set_id):<br>required: **true**<br><p>The image set identifier.</p><br>
    ///   - [`image_frame_information(ImageFrameInformation)`](crate::operation::get_image_frame::builders::GetImageFrameFluentBuilder::image_frame_information) / [`set_image_frame_information(Option<ImageFrameInformation>)`](crate::operation::get_image_frame::builders::GetImageFrameFluentBuilder::set_image_frame_information):<br>required: **true**<br><p>Information about the image frame (pixel data) identifier.</p><br>
    /// - On success, responds with [`GetImageFrameOutput`](crate::operation::get_image_frame::GetImageFrameOutput) with field(s):
    ///   - [`image_frame_blob(ByteStream)`](crate::operation::get_image_frame::GetImageFrameOutput::image_frame_blob): <p>The blob containing the aggregated image frame information.</p>
    ///   - [`content_type(Option<String>)`](crate::operation::get_image_frame::GetImageFrameOutput::content_type): <p>The format in which the image frame information is returned to the customer. Default is <code>application/octet-stream</code>.</p><note>  <ul>   <li>    <p>If the stored transfer syntax is <code>1.2.840.10008.1.2.1</code>, the returned <code>contentType</code> is <code>application/octet-stream</code>.</p></li>  </ul>  <ul>   <li>    <p>If the stored transfer syntax is <code>1.2.840.10008.1.2.4.50</code>, the returned <code>contentType</code> is <code>image/jpeg</code>.</p></li>  </ul>  <ul>   <li>    <p>If the stored transfer syntax is <code>1.2.840.10008.1.2.4.91</code>, the returned <code>contentType</code> is <code>image/j2c</code>.</p></li>  </ul>  <ul>   <li>    <p>If the stored transfer syntax is MPEG2, <code>1.2.840.10008.1.2.4.100</code>, <code>1.2.840.10008.1.2.4.100.1</code>, <code>1.2.840.10008.1.2.4.101</code>, or <code>1.2.840.10008.1.2.4.101.1</code>, the returned <code>contentType</code> is <code>video/mpeg</code>.</p></li>  </ul>  <ul>   <li>    <p>If the stored transfer syntax is MPEG-4 AVC/H.264, UID <code>1.2.840.10008.1.2.4.102</code>, <code>1.2.840.10008.1.2.4.102.1</code>, <code>1.2.840.10008.1.2.4.103</code>, <code>1.2.840.10008.1.2.4.103.1</code>, <code>1.2.840.10008.1.2.4.104</code>, <code>1.2.840.10008.1.2.4.104.1</code>, <code>1.2.840.10008.1.2.4.105</code>, <code>1.2.840.10008.1.2.4.105.1</code>, <code>1.2.840.10008.1.2.4.106</code>, or <code>1.2.840.10008.1.2.4.106.1</code>, the returned <code>contentType</code> is <code>video/mp4</code>.</p></li>  </ul>  <ul>   <li>    <p>If the stored transfer syntax is HEVC/H.265, UID <code>1.2.840.10008.1.2.4.107</code> or <code>1.2.840.10008.1.2.4.108</code>, the returned <code>contentType</code> is <code>video/H256</code>.</p></li>  </ul>  <ul>   <li>    <p>If the stored transfer syntax is <code>1.2.840.10008.1.2.4.202</code> or if the stored transfer syntax is <i>missing</i>, the returned <code>contentType</code> is <code>image/jph</code>.</p></li>  </ul>  <ul>   <li>    <p>If the stored transfer syntax is <code>1.2.840.10008.1.2.4.203</code>, the returned contentType is <code>image/jphc</code>.</p></li>  </ul> </note>
    /// - On failure, responds with [`SdkError<GetImageFrameError>`](crate::operation::get_image_frame::GetImageFrameError)
    pub fn get_image_frame(&self) -> crate::operation::get_image_frame::builders::GetImageFrameFluentBuilder {
        crate::operation::get_image_frame::builders::GetImageFrameFluentBuilder::new(self.handle.clone())
    }
}
