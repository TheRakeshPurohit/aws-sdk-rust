// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct GetDocumentContentOutput {
    /// <p>A pre-signed URL that provides temporary access to download the document content directly from Amazon Q Business. The URL expires after 5 minutes for security purposes. This URL is generated only after successful ACL validation.</p>
    pub presigned_url: ::std::string::String,
    /// <p>The MIME type of the document content (e.g., application/pdf, text/plain, application/vnd.openxmlformats-officedocument.wordprocessingml.document).</p>
    pub mime_type: ::std::string::String,
    _request_id: Option<String>,
}
impl GetDocumentContentOutput {
    /// <p>A pre-signed URL that provides temporary access to download the document content directly from Amazon Q Business. The URL expires after 5 minutes for security purposes. This URL is generated only after successful ACL validation.</p>
    pub fn presigned_url(&self) -> &str {
        use std::ops::Deref;
        self.presigned_url.deref()
    }
    /// <p>The MIME type of the document content (e.g., application/pdf, text/plain, application/vnd.openxmlformats-officedocument.wordprocessingml.document).</p>
    pub fn mime_type(&self) -> &str {
        use std::ops::Deref;
        self.mime_type.deref()
    }
}
impl ::aws_types::request_id::RequestId for GetDocumentContentOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl GetDocumentContentOutput {
    /// Creates a new builder-style object to manufacture [`GetDocumentContentOutput`](crate::operation::get_document_content::GetDocumentContentOutput).
    pub fn builder() -> crate::operation::get_document_content::builders::GetDocumentContentOutputBuilder {
        crate::operation::get_document_content::builders::GetDocumentContentOutputBuilder::default()
    }
}

/// A builder for [`GetDocumentContentOutput`](crate::operation::get_document_content::GetDocumentContentOutput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct GetDocumentContentOutputBuilder {
    pub(crate) presigned_url: ::std::option::Option<::std::string::String>,
    pub(crate) mime_type: ::std::option::Option<::std::string::String>,
    _request_id: Option<String>,
}
impl GetDocumentContentOutputBuilder {
    /// <p>A pre-signed URL that provides temporary access to download the document content directly from Amazon Q Business. The URL expires after 5 minutes for security purposes. This URL is generated only after successful ACL validation.</p>
    /// This field is required.
    pub fn presigned_url(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.presigned_url = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>A pre-signed URL that provides temporary access to download the document content directly from Amazon Q Business. The URL expires after 5 minutes for security purposes. This URL is generated only after successful ACL validation.</p>
    pub fn set_presigned_url(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.presigned_url = input;
        self
    }
    /// <p>A pre-signed URL that provides temporary access to download the document content directly from Amazon Q Business. The URL expires after 5 minutes for security purposes. This URL is generated only after successful ACL validation.</p>
    pub fn get_presigned_url(&self) -> &::std::option::Option<::std::string::String> {
        &self.presigned_url
    }
    /// <p>The MIME type of the document content (e.g., application/pdf, text/plain, application/vnd.openxmlformats-officedocument.wordprocessingml.document).</p>
    /// This field is required.
    pub fn mime_type(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.mime_type = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The MIME type of the document content (e.g., application/pdf, text/plain, application/vnd.openxmlformats-officedocument.wordprocessingml.document).</p>
    pub fn set_mime_type(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.mime_type = input;
        self
    }
    /// <p>The MIME type of the document content (e.g., application/pdf, text/plain, application/vnd.openxmlformats-officedocument.wordprocessingml.document).</p>
    pub fn get_mime_type(&self) -> &::std::option::Option<::std::string::String> {
        &self.mime_type
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`GetDocumentContentOutput`](crate::operation::get_document_content::GetDocumentContentOutput).
    /// This method will fail if any of the following fields are not set:
    /// - [`presigned_url`](crate::operation::get_document_content::builders::GetDocumentContentOutputBuilder::presigned_url)
    /// - [`mime_type`](crate::operation::get_document_content::builders::GetDocumentContentOutputBuilder::mime_type)
    pub fn build(
        self,
    ) -> ::std::result::Result<crate::operation::get_document_content::GetDocumentContentOutput, ::aws_smithy_types::error::operation::BuildError>
    {
        ::std::result::Result::Ok(crate::operation::get_document_content::GetDocumentContentOutput {
            presigned_url: self.presigned_url.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "presigned_url",
                    "presigned_url was not specified but it is required when building GetDocumentContentOutput",
                )
            })?,
            mime_type: self.mime_type.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "mime_type",
                    "mime_type was not specified but it is required when building GetDocumentContentOutput",
                )
            })?,
            _request_id: self._request_id,
        })
    }
}
