// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateAndAttachS3AccessPoint`](crate::operation::create_and_attach_s3_access_point::builders::CreateAndAttachS3AccessPointFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`client_request_token(impl Into<String>)`](crate::operation::create_and_attach_s3_access_point::builders::CreateAndAttachS3AccessPointFluentBuilder::client_request_token) / [`set_client_request_token(Option<String>)`](crate::operation::create_and_attach_s3_access_point::builders::CreateAndAttachS3AccessPointFluentBuilder::set_client_request_token):<br>required: **false**<br><p>(Optional) An idempotency token for resource creation, in a string of up to 63 ASCII characters. This token is automatically filled on your behalf when you use the Command Line Interface (CLI) or an Amazon Web Services SDK.</p><br>
    ///   - [`name(impl Into<String>)`](crate::operation::create_and_attach_s3_access_point::builders::CreateAndAttachS3AccessPointFluentBuilder::name) / [`set_name(Option<String>)`](crate::operation::create_and_attach_s3_access_point::builders::CreateAndAttachS3AccessPointFluentBuilder::set_name):<br>required: **true**<br><p>The name you want to assign to this S3 access point.</p><br>
    ///   - [`r#type(S3AccessPointAttachmentType)`](crate::operation::create_and_attach_s3_access_point::builders::CreateAndAttachS3AccessPointFluentBuilder::type) / [`set_type(Option<S3AccessPointAttachmentType>)`](crate::operation::create_and_attach_s3_access_point::builders::CreateAndAttachS3AccessPointFluentBuilder::set_type):<br>required: **true**<br><p>The type of S3 access point you want to create. Only <code>OpenZFS</code> is supported.</p><br>
    ///   - [`open_zfs_configuration(CreateAndAttachS3AccessPointOpenZfsConfiguration)`](crate::operation::create_and_attach_s3_access_point::builders::CreateAndAttachS3AccessPointFluentBuilder::open_zfs_configuration) / [`set_open_zfs_configuration(Option<CreateAndAttachS3AccessPointOpenZfsConfiguration>)`](crate::operation::create_and_attach_s3_access_point::builders::CreateAndAttachS3AccessPointFluentBuilder::set_open_zfs_configuration):<br>required: **false**<br><p>Specifies the configuration to use when creating and attaching an S3 access point to an FSx for OpenZFS volume.</p><br>
    ///   - [`s3_access_point(CreateAndAttachS3AccessPointS3Configuration)`](crate::operation::create_and_attach_s3_access_point::builders::CreateAndAttachS3AccessPointFluentBuilder::s3_access_point) / [`set_s3_access_point(Option<CreateAndAttachS3AccessPointS3Configuration>)`](crate::operation::create_and_attach_s3_access_point::builders::CreateAndAttachS3AccessPointFluentBuilder::set_s3_access_point):<br>required: **false**<br><p>Specifies the virtual private cloud (VPC) configuration if you're creating an access point that is restricted to a VPC. For more information, see <a href="https://docs.aws.amazon.com/fsx/latest/OpenZFSGuide/access-points-vpc.html">Creating access points restricted to a virtual private cloud</a>.</p><br>
    /// - On success, responds with [`CreateAndAttachS3AccessPointOutput`](crate::operation::create_and_attach_s3_access_point::CreateAndAttachS3AccessPointOutput) with field(s):
    ///   - [`s3_access_point_attachment(Option<S3AccessPointAttachment>)`](crate::operation::create_and_attach_s3_access_point::CreateAndAttachS3AccessPointOutput::s3_access_point_attachment): <p>Describes the configuration of the S3 access point created.</p>
    /// - On failure, responds with [`SdkError<CreateAndAttachS3AccessPointError>`](crate::operation::create_and_attach_s3_access_point::CreateAndAttachS3AccessPointError)
    pub fn create_and_attach_s3_access_point(
        &self,
    ) -> crate::operation::create_and_attach_s3_access_point::builders::CreateAndAttachS3AccessPointFluentBuilder {
        crate::operation::create_and_attach_s3_access_point::builders::CreateAndAttachS3AccessPointFluentBuilder::new(self.handle.clone())
    }
}
