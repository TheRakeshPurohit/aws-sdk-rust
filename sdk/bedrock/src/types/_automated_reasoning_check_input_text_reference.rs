// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>References a portion of the original input text that corresponds to logical elements.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq)]
pub struct AutomatedReasoningCheckInputTextReference {
    /// <p>The specific text from the original input that this reference points to.</p>
    pub text: ::std::option::Option<::std::string::String>,
}
impl AutomatedReasoningCheckInputTextReference {
    /// <p>The specific text from the original input that this reference points to.</p>
    pub fn text(&self) -> ::std::option::Option<&str> {
        self.text.as_deref()
    }
}
impl ::std::fmt::Debug for AutomatedReasoningCheckInputTextReference {
    fn fmt(&self, f: &mut ::std::fmt::Formatter<'_>) -> ::std::fmt::Result {
        let mut formatter = f.debug_struct("AutomatedReasoningCheckInputTextReference");
        formatter.field("text", &"*** Sensitive Data Redacted ***");
        formatter.finish()
    }
}
impl AutomatedReasoningCheckInputTextReference {
    /// Creates a new builder-style object to manufacture [`AutomatedReasoningCheckInputTextReference`](crate::types::AutomatedReasoningCheckInputTextReference).
    pub fn builder() -> crate::types::builders::AutomatedReasoningCheckInputTextReferenceBuilder {
        crate::types::builders::AutomatedReasoningCheckInputTextReferenceBuilder::default()
    }
}

/// A builder for [`AutomatedReasoningCheckInputTextReference`](crate::types::AutomatedReasoningCheckInputTextReference).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default)]
#[non_exhaustive]
pub struct AutomatedReasoningCheckInputTextReferenceBuilder {
    pub(crate) text: ::std::option::Option<::std::string::String>,
}
impl AutomatedReasoningCheckInputTextReferenceBuilder {
    /// <p>The specific text from the original input that this reference points to.</p>
    pub fn text(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.text = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The specific text from the original input that this reference points to.</p>
    pub fn set_text(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.text = input;
        self
    }
    /// <p>The specific text from the original input that this reference points to.</p>
    pub fn get_text(&self) -> &::std::option::Option<::std::string::String> {
        &self.text
    }
    /// Consumes the builder and constructs a [`AutomatedReasoningCheckInputTextReference`](crate::types::AutomatedReasoningCheckInputTextReference).
    pub fn build(self) -> crate::types::AutomatedReasoningCheckInputTextReference {
        crate::types::AutomatedReasoningCheckInputTextReference { text: self.text }
    }
}
impl ::std::fmt::Debug for AutomatedReasoningCheckInputTextReferenceBuilder {
    fn fmt(&self, f: &mut ::std::fmt::Formatter<'_>) -> ::std::fmt::Result {
        let mut formatter = f.debug_struct("AutomatedReasoningCheckInputTextReferenceBuilder");
        formatter.field("text", &"*** Sensitive Data Redacted ***");
        formatter.finish()
    }
}
