// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Represents a message generated during a build step, providing information about what happened or any issues encountered.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct AutomatedReasoningPolicyBuildStepMessage {
    /// <p>The content of the message, describing what occurred during the build step.</p>
    pub message: ::std::string::String,
    /// <p>The type of message (e.g., INFO, WARNING, ERROR) indicating its severity and purpose.</p>
    pub message_type: crate::types::AutomatedReasoningPolicyBuildMessageType,
}
impl AutomatedReasoningPolicyBuildStepMessage {
    /// <p>The content of the message, describing what occurred during the build step.</p>
    pub fn message(&self) -> &str {
        use std::ops::Deref;
        self.message.deref()
    }
    /// <p>The type of message (e.g., INFO, WARNING, ERROR) indicating its severity and purpose.</p>
    pub fn message_type(&self) -> &crate::types::AutomatedReasoningPolicyBuildMessageType {
        &self.message_type
    }
}
impl AutomatedReasoningPolicyBuildStepMessage {
    /// Creates a new builder-style object to manufacture [`AutomatedReasoningPolicyBuildStepMessage`](crate::types::AutomatedReasoningPolicyBuildStepMessage).
    pub fn builder() -> crate::types::builders::AutomatedReasoningPolicyBuildStepMessageBuilder {
        crate::types::builders::AutomatedReasoningPolicyBuildStepMessageBuilder::default()
    }
}

/// A builder for [`AutomatedReasoningPolicyBuildStepMessage`](crate::types::AutomatedReasoningPolicyBuildStepMessage).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct AutomatedReasoningPolicyBuildStepMessageBuilder {
    pub(crate) message: ::std::option::Option<::std::string::String>,
    pub(crate) message_type: ::std::option::Option<crate::types::AutomatedReasoningPolicyBuildMessageType>,
}
impl AutomatedReasoningPolicyBuildStepMessageBuilder {
    /// <p>The content of the message, describing what occurred during the build step.</p>
    /// This field is required.
    pub fn message(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.message = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The content of the message, describing what occurred during the build step.</p>
    pub fn set_message(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.message = input;
        self
    }
    /// <p>The content of the message, describing what occurred during the build step.</p>
    pub fn get_message(&self) -> &::std::option::Option<::std::string::String> {
        &self.message
    }
    /// <p>The type of message (e.g., INFO, WARNING, ERROR) indicating its severity and purpose.</p>
    /// This field is required.
    pub fn message_type(mut self, input: crate::types::AutomatedReasoningPolicyBuildMessageType) -> Self {
        self.message_type = ::std::option::Option::Some(input);
        self
    }
    /// <p>The type of message (e.g., INFO, WARNING, ERROR) indicating its severity and purpose.</p>
    pub fn set_message_type(mut self, input: ::std::option::Option<crate::types::AutomatedReasoningPolicyBuildMessageType>) -> Self {
        self.message_type = input;
        self
    }
    /// <p>The type of message (e.g., INFO, WARNING, ERROR) indicating its severity and purpose.</p>
    pub fn get_message_type(&self) -> &::std::option::Option<crate::types::AutomatedReasoningPolicyBuildMessageType> {
        &self.message_type
    }
    /// Consumes the builder and constructs a [`AutomatedReasoningPolicyBuildStepMessage`](crate::types::AutomatedReasoningPolicyBuildStepMessage).
    /// This method will fail if any of the following fields are not set:
    /// - [`message`](crate::types::builders::AutomatedReasoningPolicyBuildStepMessageBuilder::message)
    /// - [`message_type`](crate::types::builders::AutomatedReasoningPolicyBuildStepMessageBuilder::message_type)
    pub fn build(
        self,
    ) -> ::std::result::Result<crate::types::AutomatedReasoningPolicyBuildStepMessage, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::AutomatedReasoningPolicyBuildStepMessage {
            message: self.message.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "message",
                    "message was not specified but it is required when building AutomatedReasoningPolicyBuildStepMessage",
                )
            })?,
            message_type: self.message_type.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "message_type",
                    "message_type was not specified but it is required when building AutomatedReasoningPolicyBuildStepMessage",
                )
            })?,
        })
    }
}
