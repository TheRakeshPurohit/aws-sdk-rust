// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Represents the configuration of Automated Reasoning policies within a Amazon Bedrock Guardrail, including the policies to apply and confidence thresholds.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct GuardrailAutomatedReasoningPolicy {
    /// <p>The list of Automated Reasoning policy ARNs that should be applied as part of this guardrail configuration.</p>
    pub policies: ::std::vec::Vec<::std::string::String>,
    /// <p>The minimum confidence level required for Automated Reasoning policy violations to trigger guardrail actions. Values range from 0.0 to 1.0.</p>
    pub confidence_threshold: ::std::option::Option<f64>,
}
impl GuardrailAutomatedReasoningPolicy {
    /// <p>The list of Automated Reasoning policy ARNs that should be applied as part of this guardrail configuration.</p>
    pub fn policies(&self) -> &[::std::string::String] {
        use std::ops::Deref;
        self.policies.deref()
    }
    /// <p>The minimum confidence level required for Automated Reasoning policy violations to trigger guardrail actions. Values range from 0.0 to 1.0.</p>
    pub fn confidence_threshold(&self) -> ::std::option::Option<f64> {
        self.confidence_threshold
    }
}
impl GuardrailAutomatedReasoningPolicy {
    /// Creates a new builder-style object to manufacture [`GuardrailAutomatedReasoningPolicy`](crate::types::GuardrailAutomatedReasoningPolicy).
    pub fn builder() -> crate::types::builders::GuardrailAutomatedReasoningPolicyBuilder {
        crate::types::builders::GuardrailAutomatedReasoningPolicyBuilder::default()
    }
}

/// A builder for [`GuardrailAutomatedReasoningPolicy`](crate::types::GuardrailAutomatedReasoningPolicy).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct GuardrailAutomatedReasoningPolicyBuilder {
    pub(crate) policies: ::std::option::Option<::std::vec::Vec<::std::string::String>>,
    pub(crate) confidence_threshold: ::std::option::Option<f64>,
}
impl GuardrailAutomatedReasoningPolicyBuilder {
    /// Appends an item to `policies`.
    ///
    /// To override the contents of this collection use [`set_policies`](Self::set_policies).
    ///
    /// <p>The list of Automated Reasoning policy ARNs that should be applied as part of this guardrail configuration.</p>
    pub fn policies(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        let mut v = self.policies.unwrap_or_default();
        v.push(input.into());
        self.policies = ::std::option::Option::Some(v);
        self
    }
    /// <p>The list of Automated Reasoning policy ARNs that should be applied as part of this guardrail configuration.</p>
    pub fn set_policies(mut self, input: ::std::option::Option<::std::vec::Vec<::std::string::String>>) -> Self {
        self.policies = input;
        self
    }
    /// <p>The list of Automated Reasoning policy ARNs that should be applied as part of this guardrail configuration.</p>
    pub fn get_policies(&self) -> &::std::option::Option<::std::vec::Vec<::std::string::String>> {
        &self.policies
    }
    /// <p>The minimum confidence level required for Automated Reasoning policy violations to trigger guardrail actions. Values range from 0.0 to 1.0.</p>
    pub fn confidence_threshold(mut self, input: f64) -> Self {
        self.confidence_threshold = ::std::option::Option::Some(input);
        self
    }
    /// <p>The minimum confidence level required for Automated Reasoning policy violations to trigger guardrail actions. Values range from 0.0 to 1.0.</p>
    pub fn set_confidence_threshold(mut self, input: ::std::option::Option<f64>) -> Self {
        self.confidence_threshold = input;
        self
    }
    /// <p>The minimum confidence level required for Automated Reasoning policy violations to trigger guardrail actions. Values range from 0.0 to 1.0.</p>
    pub fn get_confidence_threshold(&self) -> &::std::option::Option<f64> {
        &self.confidence_threshold
    }
    /// Consumes the builder and constructs a [`GuardrailAutomatedReasoningPolicy`](crate::types::GuardrailAutomatedReasoningPolicy).
    /// This method will fail if any of the following fields are not set:
    /// - [`policies`](crate::types::builders::GuardrailAutomatedReasoningPolicyBuilder::policies)
    pub fn build(self) -> ::std::result::Result<crate::types::GuardrailAutomatedReasoningPolicy, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::GuardrailAutomatedReasoningPolicy {
            policies: self.policies.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "policies",
                    "policies was not specified but it is required when building GuardrailAutomatedReasoningPolicy",
                )
            })?,
            confidence_threshold: self.confidence_threshold,
        })
    }
}
