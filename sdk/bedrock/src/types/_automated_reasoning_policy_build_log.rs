// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Contains detailed logging information about the policy build process, including steps taken, decisions made, and any issues encountered.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct AutomatedReasoningPolicyBuildLog {
    /// <p>A list of log entries documenting each step in the policy build process, including timestamps, status, and detailed messages.</p>
    pub entries: ::std::vec::Vec<crate::types::AutomatedReasoningPolicyBuildLogEntry>,
}
impl AutomatedReasoningPolicyBuildLog {
    /// <p>A list of log entries documenting each step in the policy build process, including timestamps, status, and detailed messages.</p>
    pub fn entries(&self) -> &[crate::types::AutomatedReasoningPolicyBuildLogEntry] {
        use std::ops::Deref;
        self.entries.deref()
    }
}
impl AutomatedReasoningPolicyBuildLog {
    /// Creates a new builder-style object to manufacture [`AutomatedReasoningPolicyBuildLog`](crate::types::AutomatedReasoningPolicyBuildLog).
    pub fn builder() -> crate::types::builders::AutomatedReasoningPolicyBuildLogBuilder {
        crate::types::builders::AutomatedReasoningPolicyBuildLogBuilder::default()
    }
}

/// A builder for [`AutomatedReasoningPolicyBuildLog`](crate::types::AutomatedReasoningPolicyBuildLog).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct AutomatedReasoningPolicyBuildLogBuilder {
    pub(crate) entries: ::std::option::Option<::std::vec::Vec<crate::types::AutomatedReasoningPolicyBuildLogEntry>>,
}
impl AutomatedReasoningPolicyBuildLogBuilder {
    /// Appends an item to `entries`.
    ///
    /// To override the contents of this collection use [`set_entries`](Self::set_entries).
    ///
    /// <p>A list of log entries documenting each step in the policy build process, including timestamps, status, and detailed messages.</p>
    pub fn entries(mut self, input: crate::types::AutomatedReasoningPolicyBuildLogEntry) -> Self {
        let mut v = self.entries.unwrap_or_default();
        v.push(input);
        self.entries = ::std::option::Option::Some(v);
        self
    }
    /// <p>A list of log entries documenting each step in the policy build process, including timestamps, status, and detailed messages.</p>
    pub fn set_entries(mut self, input: ::std::option::Option<::std::vec::Vec<crate::types::AutomatedReasoningPolicyBuildLogEntry>>) -> Self {
        self.entries = input;
        self
    }
    /// <p>A list of log entries documenting each step in the policy build process, including timestamps, status, and detailed messages.</p>
    pub fn get_entries(&self) -> &::std::option::Option<::std::vec::Vec<crate::types::AutomatedReasoningPolicyBuildLogEntry>> {
        &self.entries
    }
    /// Consumes the builder and constructs a [`AutomatedReasoningPolicyBuildLog`](crate::types::AutomatedReasoningPolicyBuildLog).
    /// This method will fail if any of the following fields are not set:
    /// - [`entries`](crate::types::builders::AutomatedReasoningPolicyBuildLogBuilder::entries)
    pub fn build(self) -> ::std::result::Result<crate::types::AutomatedReasoningPolicyBuildLog, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::AutomatedReasoningPolicyBuildLog {
            entries: self.entries.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "entries",
                    "entries was not specified but it is required when building AutomatedReasoningPolicyBuildLog",
                )
            })?,
        })
    }
}
