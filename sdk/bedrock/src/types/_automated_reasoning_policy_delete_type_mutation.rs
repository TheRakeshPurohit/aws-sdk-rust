// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>A mutation operation that removes a custom type from the policy definition during the build process.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq)]
pub struct AutomatedReasoningPolicyDeleteTypeMutation {
    /// <p>The name of the custom type to delete.</p>
    pub name: ::std::string::String,
}
impl AutomatedReasoningPolicyDeleteTypeMutation {
    /// <p>The name of the custom type to delete.</p>
    pub fn name(&self) -> &str {
        use std::ops::Deref;
        self.name.deref()
    }
}
impl ::std::fmt::Debug for AutomatedReasoningPolicyDeleteTypeMutation {
    fn fmt(&self, f: &mut ::std::fmt::Formatter<'_>) -> ::std::fmt::Result {
        let mut formatter = f.debug_struct("AutomatedReasoningPolicyDeleteTypeMutation");
        formatter.field("name", &"*** Sensitive Data Redacted ***");
        formatter.finish()
    }
}
impl AutomatedReasoningPolicyDeleteTypeMutation {
    /// Creates a new builder-style object to manufacture [`AutomatedReasoningPolicyDeleteTypeMutation`](crate::types::AutomatedReasoningPolicyDeleteTypeMutation).
    pub fn builder() -> crate::types::builders::AutomatedReasoningPolicyDeleteTypeMutationBuilder {
        crate::types::builders::AutomatedReasoningPolicyDeleteTypeMutationBuilder::default()
    }
}

/// A builder for [`AutomatedReasoningPolicyDeleteTypeMutation`](crate::types::AutomatedReasoningPolicyDeleteTypeMutation).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default)]
#[non_exhaustive]
pub struct AutomatedReasoningPolicyDeleteTypeMutationBuilder {
    pub(crate) name: ::std::option::Option<::std::string::String>,
}
impl AutomatedReasoningPolicyDeleteTypeMutationBuilder {
    /// <p>The name of the custom type to delete.</p>
    /// This field is required.
    pub fn name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of the custom type to delete.</p>
    pub fn set_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.name = input;
        self
    }
    /// <p>The name of the custom type to delete.</p>
    pub fn get_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.name
    }
    /// Consumes the builder and constructs a [`AutomatedReasoningPolicyDeleteTypeMutation`](crate::types::AutomatedReasoningPolicyDeleteTypeMutation).
    /// This method will fail if any of the following fields are not set:
    /// - [`name`](crate::types::builders::AutomatedReasoningPolicyDeleteTypeMutationBuilder::name)
    pub fn build(
        self,
    ) -> ::std::result::Result<crate::types::AutomatedReasoningPolicyDeleteTypeMutation, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::AutomatedReasoningPolicyDeleteTypeMutation {
            name: self.name.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "name",
                    "name was not specified but it is required when building AutomatedReasoningPolicyDeleteTypeMutation",
                )
            })?,
        })
    }
}
impl ::std::fmt::Debug for AutomatedReasoningPolicyDeleteTypeMutationBuilder {
    fn fmt(&self, f: &mut ::std::fmt::Formatter<'_>) -> ::std::fmt::Result {
        let mut formatter = f.debug_struct("AutomatedReasoningPolicyDeleteTypeMutationBuilder");
        formatter.field("name", &"*** Sensitive Data Redacted ***");
        formatter.finish()
    }
}
