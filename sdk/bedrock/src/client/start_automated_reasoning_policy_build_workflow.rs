// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`StartAutomatedReasoningPolicyBuildWorkflow`](crate::operation::start_automated_reasoning_policy_build_workflow::builders::StartAutomatedReasoningPolicyBuildWorkflowFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`policy_arn(impl Into<String>)`](crate::operation::start_automated_reasoning_policy_build_workflow::builders::StartAutomatedReasoningPolicyBuildWorkflowFluentBuilder::policy_arn) / [`set_policy_arn(Option<String>)`](crate::operation::start_automated_reasoning_policy_build_workflow::builders::StartAutomatedReasoningPolicyBuildWorkflowFluentBuilder::set_policy_arn):<br>required: **true**<br><p>The Amazon Resource Name (ARN) of the Automated Reasoning policy for which to start the build workflow.</p><br>
    ///   - [`build_workflow_type(AutomatedReasoningPolicyBuildWorkflowType)`](crate::operation::start_automated_reasoning_policy_build_workflow::builders::StartAutomatedReasoningPolicyBuildWorkflowFluentBuilder::build_workflow_type) / [`set_build_workflow_type(Option<AutomatedReasoningPolicyBuildWorkflowType>)`](crate::operation::start_automated_reasoning_policy_build_workflow::builders::StartAutomatedReasoningPolicyBuildWorkflowFluentBuilder::set_build_workflow_type):<br>required: **true**<br><p>The type of build workflow to start (e.g., DOCUMENT_INGESTION for processing new documents, POLICY_REPAIR for fixing existing policies).</p><br>
    ///   - [`client_request_token(impl Into<String>)`](crate::operation::start_automated_reasoning_policy_build_workflow::builders::StartAutomatedReasoningPolicyBuildWorkflowFluentBuilder::client_request_token) / [`set_client_request_token(Option<String>)`](crate::operation::start_automated_reasoning_policy_build_workflow::builders::StartAutomatedReasoningPolicyBuildWorkflowFluentBuilder::set_client_request_token):<br>required: **false**<br><p>A unique, case-sensitive identifier to ensure that the operation completes no more than once. If this token matches a previous request, Amazon Bedrock ignores the request but doesn't return an error.</p><br>
    ///   - [`source_content(AutomatedReasoningPolicyBuildWorkflowSource)`](crate::operation::start_automated_reasoning_policy_build_workflow::builders::StartAutomatedReasoningPolicyBuildWorkflowFluentBuilder::source_content) / [`set_source_content(Option<AutomatedReasoningPolicyBuildWorkflowSource>)`](crate::operation::start_automated_reasoning_policy_build_workflow::builders::StartAutomatedReasoningPolicyBuildWorkflowFluentBuilder::set_source_content):<br>required: **true**<br><p>The source content for the build workflow, such as documents to analyze or repair instructions for existing policies.</p><br>
    /// - On success, responds with [`StartAutomatedReasoningPolicyBuildWorkflowOutput`](crate::operation::start_automated_reasoning_policy_build_workflow::StartAutomatedReasoningPolicyBuildWorkflowOutput) with field(s):
    ///   - [`policy_arn(String)`](crate::operation::start_automated_reasoning_policy_build_workflow::StartAutomatedReasoningPolicyBuildWorkflowOutput::policy_arn): <p>The Amazon Resource Name (ARN) of the Automated Reasoning policy.</p>
    ///   - [`build_workflow_id(String)`](crate::operation::start_automated_reasoning_policy_build_workflow::StartAutomatedReasoningPolicyBuildWorkflowOutput::build_workflow_id): <p>The unique identifier of the newly started build workflow. Use this ID to track the workflow's progress and retrieve its results.</p>
    /// - On failure, responds with [`SdkError<StartAutomatedReasoningPolicyBuildWorkflowError>`](crate::operation::start_automated_reasoning_policy_build_workflow::StartAutomatedReasoningPolicyBuildWorkflowError)
    pub fn start_automated_reasoning_policy_build_workflow(
        &self,
    ) -> crate::operation::start_automated_reasoning_policy_build_workflow::builders::StartAutomatedReasoningPolicyBuildWorkflowFluentBuilder {
        crate::operation::start_automated_reasoning_policy_build_workflow::builders::StartAutomatedReasoningPolicyBuildWorkflowFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
