// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ListAutomatedReasoningPolicyTestResults`](crate::operation::list_automated_reasoning_policy_test_results::builders::ListAutomatedReasoningPolicyTestResultsFluentBuilder) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::operation::list_automated_reasoning_policy_test_results::builders::ListAutomatedReasoningPolicyTestResultsFluentBuilder::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`policy_arn(impl Into<String>)`](crate::operation::list_automated_reasoning_policy_test_results::builders::ListAutomatedReasoningPolicyTestResultsFluentBuilder::policy_arn) / [`set_policy_arn(Option<String>)`](crate::operation::list_automated_reasoning_policy_test_results::builders::ListAutomatedReasoningPolicyTestResultsFluentBuilder::set_policy_arn):<br>required: **true**<br><p>The Amazon Resource Name (ARN) of the Automated Reasoning policy whose test results you want to list.</p><br>
    ///   - [`build_workflow_id(impl Into<String>)`](crate::operation::list_automated_reasoning_policy_test_results::builders::ListAutomatedReasoningPolicyTestResultsFluentBuilder::build_workflow_id) / [`set_build_workflow_id(Option<String>)`](crate::operation::list_automated_reasoning_policy_test_results::builders::ListAutomatedReasoningPolicyTestResultsFluentBuilder::set_build_workflow_id):<br>required: **true**<br><p>The unique identifier of the build workflow whose test results you want to list.</p><br>
    ///   - [`next_token(impl Into<String>)`](crate::operation::list_automated_reasoning_policy_test_results::builders::ListAutomatedReasoningPolicyTestResultsFluentBuilder::next_token) / [`set_next_token(Option<String>)`](crate::operation::list_automated_reasoning_policy_test_results::builders::ListAutomatedReasoningPolicyTestResultsFluentBuilder::set_next_token):<br>required: **false**<br><p>A pagination token from a previous request to continue listing test results from where the previous request left off.</p><br>
    ///   - [`max_results(i32)`](crate::operation::list_automated_reasoning_policy_test_results::builders::ListAutomatedReasoningPolicyTestResultsFluentBuilder::max_results) / [`set_max_results(Option<i32>)`](crate::operation::list_automated_reasoning_policy_test_results::builders::ListAutomatedReasoningPolicyTestResultsFluentBuilder::set_max_results):<br>required: **false**<br><p>The maximum number of test results to return in a single response. Valid range is 1-100.</p><br>
    /// - On success, responds with [`ListAutomatedReasoningPolicyTestResultsOutput`](crate::operation::list_automated_reasoning_policy_test_results::ListAutomatedReasoningPolicyTestResultsOutput) with field(s):
    ///   - [`test_results(Vec::<AutomatedReasoningPolicyTestResult>)`](crate::operation::list_automated_reasoning_policy_test_results::ListAutomatedReasoningPolicyTestResultsOutput::test_results): <p>A list of test results, each containing information about how the policy performed on specific test scenarios.</p>
    ///   - [`next_token(Option<String>)`](crate::operation::list_automated_reasoning_policy_test_results::ListAutomatedReasoningPolicyTestResultsOutput::next_token): <p>A pagination token to use in subsequent requests to retrieve additional test results.</p>
    /// - On failure, responds with [`SdkError<ListAutomatedReasoningPolicyTestResultsError>`](crate::operation::list_automated_reasoning_policy_test_results::ListAutomatedReasoningPolicyTestResultsError)
    pub fn list_automated_reasoning_policy_test_results(
        &self,
    ) -> crate::operation::list_automated_reasoning_policy_test_results::builders::ListAutomatedReasoningPolicyTestResultsFluentBuilder {
        crate::operation::list_automated_reasoning_policy_test_results::builders::ListAutomatedReasoningPolicyTestResultsFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
