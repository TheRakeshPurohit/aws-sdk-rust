// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`GetAutomatedReasoningPolicyNextScenario`](crate::operation::get_automated_reasoning_policy_next_scenario::builders::GetAutomatedReasoningPolicyNextScenarioFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`policy_arn(impl Into<String>)`](crate::operation::get_automated_reasoning_policy_next_scenario::builders::GetAutomatedReasoningPolicyNextScenarioFluentBuilder::policy_arn) / [`set_policy_arn(Option<String>)`](crate::operation::get_automated_reasoning_policy_next_scenario::builders::GetAutomatedReasoningPolicyNextScenarioFluentBuilder::set_policy_arn):<br>required: **true**<br><p>The Amazon Resource Name (ARN) of the Automated Reasoning policy for which you want to get the next test scenario.</p><br>
    ///   - [`build_workflow_id(impl Into<String>)`](crate::operation::get_automated_reasoning_policy_next_scenario::builders::GetAutomatedReasoningPolicyNextScenarioFluentBuilder::build_workflow_id) / [`set_build_workflow_id(Option<String>)`](crate::operation::get_automated_reasoning_policy_next_scenario::builders::GetAutomatedReasoningPolicyNextScenarioFluentBuilder::set_build_workflow_id):<br>required: **true**<br><p>The unique identifier of the build workflow associated with the test scenarios.</p><br>
    /// - On success, responds with [`GetAutomatedReasoningPolicyNextScenarioOutput`](crate::operation::get_automated_reasoning_policy_next_scenario::GetAutomatedReasoningPolicyNextScenarioOutput) with field(s):
    ///   - [`policy_arn(String)`](crate::operation::get_automated_reasoning_policy_next_scenario::GetAutomatedReasoningPolicyNextScenarioOutput::policy_arn): <p>The Amazon Resource Name (ARN) of the Automated Reasoning policy.</p>
    ///   - [`scenario(Option<AutomatedReasoningPolicyScenario>)`](crate::operation::get_automated_reasoning_policy_next_scenario::GetAutomatedReasoningPolicyNextScenarioOutput::scenario): <p>The next test scenario to validate, including the test expression and expected results.</p>
    /// - On failure, responds with [`SdkError<GetAutomatedReasoningPolicyNextScenarioError>`](crate::operation::get_automated_reasoning_policy_next_scenario::GetAutomatedReasoningPolicyNextScenarioError)
    pub fn get_automated_reasoning_policy_next_scenario(
        &self,
    ) -> crate::operation::get_automated_reasoning_policy_next_scenario::builders::GetAutomatedReasoningPolicyNextScenarioFluentBuilder {
        crate::operation::get_automated_reasoning_policy_next_scenario::builders::GetAutomatedReasoningPolicyNextScenarioFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
