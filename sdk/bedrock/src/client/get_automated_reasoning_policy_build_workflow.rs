// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`GetAutomatedReasoningPolicyBuildWorkflow`](crate::operation::get_automated_reasoning_policy_build_workflow::builders::GetAutomatedReasoningPolicyBuildWorkflowFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`policy_arn(impl Into<String>)`](crate::operation::get_automated_reasoning_policy_build_workflow::builders::GetAutomatedReasoningPolicyBuildWorkflowFluentBuilder::policy_arn) / [`set_policy_arn(Option<String>)`](crate::operation::get_automated_reasoning_policy_build_workflow::builders::GetAutomatedReasoningPolicyBuildWorkflowFluentBuilder::set_policy_arn):<br>required: **true**<br><p>The Amazon Resource Name (ARN) of the Automated Reasoning policy whose build workflow you want to retrieve.</p><br>
    ///   - [`build_workflow_id(impl Into<String>)`](crate::operation::get_automated_reasoning_policy_build_workflow::builders::GetAutomatedReasoningPolicyBuildWorkflowFluentBuilder::build_workflow_id) / [`set_build_workflow_id(Option<String>)`](crate::operation::get_automated_reasoning_policy_build_workflow::builders::GetAutomatedReasoningPolicyBuildWorkflowFluentBuilder::set_build_workflow_id):<br>required: **true**<br><p>The unique identifier of the build workflow to retrieve.</p><br>
    /// - On success, responds with [`GetAutomatedReasoningPolicyBuildWorkflowOutput`](crate::operation::get_automated_reasoning_policy_build_workflow::GetAutomatedReasoningPolicyBuildWorkflowOutput) with field(s):
    ///   - [`policy_arn(String)`](crate::operation::get_automated_reasoning_policy_build_workflow::GetAutomatedReasoningPolicyBuildWorkflowOutput::policy_arn): <p>The Amazon Resource Name (ARN) of the Automated Reasoning policy.</p>
    ///   - [`build_workflow_id(String)`](crate::operation::get_automated_reasoning_policy_build_workflow::GetAutomatedReasoningPolicyBuildWorkflowOutput::build_workflow_id): <p>The unique identifier of the build workflow.</p>
    ///   - [`status(AutomatedReasoningPolicyBuildWorkflowStatus)`](crate::operation::get_automated_reasoning_policy_build_workflow::GetAutomatedReasoningPolicyBuildWorkflowOutput::status): <p>The current status of the build workflow (e.g., RUNNING, COMPLETED, FAILED, CANCELLED).</p>
    ///   - [`build_workflow_type(AutomatedReasoningPolicyBuildWorkflowType)`](crate::operation::get_automated_reasoning_policy_build_workflow::GetAutomatedReasoningPolicyBuildWorkflowOutput::build_workflow_type): <p>The type of build workflow being executed (e.g., DOCUMENT_INGESTION, POLICY_REPAIR).</p>
    ///   - [`document_name(Option<String>)`](crate::operation::get_automated_reasoning_policy_build_workflow::GetAutomatedReasoningPolicyBuildWorkflowOutput::document_name): <p>The name of the source document used in the build workflow.</p>
    ///   - [`document_content_type(Option<AutomatedReasoningPolicyBuildDocumentContentType>)`](crate::operation::get_automated_reasoning_policy_build_workflow::GetAutomatedReasoningPolicyBuildWorkflowOutput::document_content_type): <p>The content type of the source document (e.g., text/plain, application/pdf).</p>
    ///   - [`document_description(Option<String>)`](crate::operation::get_automated_reasoning_policy_build_workflow::GetAutomatedReasoningPolicyBuildWorkflowOutput::document_description): <p>A detailed description of the document's content and how it should be used in the policy generation process.</p>
    ///   - [`created_at(DateTime)`](crate::operation::get_automated_reasoning_policy_build_workflow::GetAutomatedReasoningPolicyBuildWorkflowOutput::created_at): <p>The timestamp when the build workflow was created.</p>
    ///   - [`updated_at(DateTime)`](crate::operation::get_automated_reasoning_policy_build_workflow::GetAutomatedReasoningPolicyBuildWorkflowOutput::updated_at): <p>The timestamp when the build workflow was last updated.</p>
    /// - On failure, responds with [`SdkError<GetAutomatedReasoningPolicyBuildWorkflowError>`](crate::operation::get_automated_reasoning_policy_build_workflow::GetAutomatedReasoningPolicyBuildWorkflowError)
    pub fn get_automated_reasoning_policy_build_workflow(
        &self,
    ) -> crate::operation::get_automated_reasoning_policy_build_workflow::builders::GetAutomatedReasoningPolicyBuildWorkflowFluentBuilder {
        crate::operation::get_automated_reasoning_policy_build_workflow::builders::GetAutomatedReasoningPolicyBuildWorkflowFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
