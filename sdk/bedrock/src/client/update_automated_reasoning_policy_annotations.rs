// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`UpdateAutomatedReasoningPolicyAnnotations`](crate::operation::update_automated_reasoning_policy_annotations::builders::UpdateAutomatedReasoningPolicyAnnotationsFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`policy_arn(impl Into<String>)`](crate::operation::update_automated_reasoning_policy_annotations::builders::UpdateAutomatedReasoningPolicyAnnotationsFluentBuilder::policy_arn) / [`set_policy_arn(Option<String>)`](crate::operation::update_automated_reasoning_policy_annotations::builders::UpdateAutomatedReasoningPolicyAnnotationsFluentBuilder::set_policy_arn):<br>required: **true**<br><p>The Amazon Resource Name (ARN) of the Automated Reasoning policy whose annotations you want to update.</p><br>
    ///   - [`build_workflow_id(impl Into<String>)`](crate::operation::update_automated_reasoning_policy_annotations::builders::UpdateAutomatedReasoningPolicyAnnotationsFluentBuilder::build_workflow_id) / [`set_build_workflow_id(Option<String>)`](crate::operation::update_automated_reasoning_policy_annotations::builders::UpdateAutomatedReasoningPolicyAnnotationsFluentBuilder::set_build_workflow_id):<br>required: **true**<br><p>The unique identifier of the build workflow whose annotations you want to update.</p><br>
    ///   - [`annotations(AutomatedReasoningPolicyAnnotation)`](crate::operation::update_automated_reasoning_policy_annotations::builders::UpdateAutomatedReasoningPolicyAnnotationsFluentBuilder::annotations) / [`set_annotations(Option<Vec::<AutomatedReasoningPolicyAnnotation>>)`](crate::operation::update_automated_reasoning_policy_annotations::builders::UpdateAutomatedReasoningPolicyAnnotationsFluentBuilder::set_annotations):<br>required: **true**<br><p>The updated annotations containing modified rules, variables, and types for the policy.</p><br>
    ///   - [`last_updated_annotation_set_hash(impl Into<String>)`](crate::operation::update_automated_reasoning_policy_annotations::builders::UpdateAutomatedReasoningPolicyAnnotationsFluentBuilder::last_updated_annotation_set_hash) / [`set_last_updated_annotation_set_hash(Option<String>)`](crate::operation::update_automated_reasoning_policy_annotations::builders::UpdateAutomatedReasoningPolicyAnnotationsFluentBuilder::set_last_updated_annotation_set_hash):<br>required: **true**<br><p>The hash value of the annotation set that you're updating. This is used for optimistic concurrency control to prevent conflicting updates.</p><br>
    /// - On success, responds with [`UpdateAutomatedReasoningPolicyAnnotationsOutput`](crate::operation::update_automated_reasoning_policy_annotations::UpdateAutomatedReasoningPolicyAnnotationsOutput) with field(s):
    ///   - [`policy_arn(String)`](crate::operation::update_automated_reasoning_policy_annotations::UpdateAutomatedReasoningPolicyAnnotationsOutput::policy_arn): <p>The Amazon Resource Name (ARN) of the Automated Reasoning policy.</p>
    ///   - [`build_workflow_id(String)`](crate::operation::update_automated_reasoning_policy_annotations::UpdateAutomatedReasoningPolicyAnnotationsOutput::build_workflow_id): <p>The unique identifier of the build workflow.</p>
    ///   - [`annotation_set_hash(String)`](crate::operation::update_automated_reasoning_policy_annotations::UpdateAutomatedReasoningPolicyAnnotationsOutput::annotation_set_hash): <p>The new hash value representing the updated state of the annotations.</p>
    ///   - [`updated_at(DateTime)`](crate::operation::update_automated_reasoning_policy_annotations::UpdateAutomatedReasoningPolicyAnnotationsOutput::updated_at): <p>The timestamp when the annotations were updated.</p>
    /// - On failure, responds with [`SdkError<UpdateAutomatedReasoningPolicyAnnotationsError>`](crate::operation::update_automated_reasoning_policy_annotations::UpdateAutomatedReasoningPolicyAnnotationsError)
    pub fn update_automated_reasoning_policy_annotations(
        &self,
    ) -> crate::operation::update_automated_reasoning_policy_annotations::builders::UpdateAutomatedReasoningPolicyAnnotationsFluentBuilder {
        crate::operation::update_automated_reasoning_policy_annotations::builders::UpdateAutomatedReasoningPolicyAnnotationsFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
