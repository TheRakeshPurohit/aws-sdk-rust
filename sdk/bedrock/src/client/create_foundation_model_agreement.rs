// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateFoundationModelAgreement`](crate::operation::create_foundation_model_agreement::builders::CreateFoundationModelAgreementFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`offer_token(impl Into<String>)`](crate::operation::create_foundation_model_agreement::builders::CreateFoundationModelAgreementFluentBuilder::offer_token) / [`set_offer_token(Option<String>)`](crate::operation::create_foundation_model_agreement::builders::CreateFoundationModelAgreementFluentBuilder::set_offer_token):<br>required: **true**<br><p>An offer token encapsulates the information for an offer.</p><br>
    ///   - [`model_id(impl Into<String>)`](crate::operation::create_foundation_model_agreement::builders::CreateFoundationModelAgreementFluentBuilder::model_id) / [`set_model_id(Option<String>)`](crate::operation::create_foundation_model_agreement::builders::CreateFoundationModelAgreementFluentBuilder::set_model_id):<br>required: **true**<br><p>Model Id of the model for the access request.</p><br>
    /// - On success, responds with [`CreateFoundationModelAgreementOutput`](crate::operation::create_foundation_model_agreement::CreateFoundationModelAgreementOutput) with field(s):
    ///   - [`model_id(String)`](crate::operation::create_foundation_model_agreement::CreateFoundationModelAgreementOutput::model_id): <p>Model Id of the model for the access request.</p>
    /// - On failure, responds with [`SdkError<CreateFoundationModelAgreementError>`](crate::operation::create_foundation_model_agreement::CreateFoundationModelAgreementError)
    pub fn create_foundation_model_agreement(
        &self,
    ) -> crate::operation::create_foundation_model_agreement::builders::CreateFoundationModelAgreementFluentBuilder {
        crate::operation::create_foundation_model_agreement::builders::CreateFoundationModelAgreementFluentBuilder::new(self.handle.clone())
    }
}
