// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ExportAutomatedReasoningPolicyVersion`](crate::operation::export_automated_reasoning_policy_version::builders::ExportAutomatedReasoningPolicyVersionFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`policy_arn(impl Into<String>)`](crate::operation::export_automated_reasoning_policy_version::builders::ExportAutomatedReasoningPolicyVersionFluentBuilder::policy_arn) / [`set_policy_arn(Option<String>)`](crate::operation::export_automated_reasoning_policy_version::builders::ExportAutomatedReasoningPolicyVersionFluentBuilder::set_policy_arn):<br>required: **true**<br><p>The Amazon Resource Name (ARN) of the Automated Reasoning policy to export. Can be either the unversioned ARN for the draft policy or a versioned ARN for a specific policy version.</p><br>
    /// - On success, responds with [`ExportAutomatedReasoningPolicyVersionOutput`](crate::operation::export_automated_reasoning_policy_version::ExportAutomatedReasoningPolicyVersionOutput) with field(s):
    ///   - [`policy_definition(Option<AutomatedReasoningPolicyDefinition>)`](crate::operation::export_automated_reasoning_policy_version::ExportAutomatedReasoningPolicyVersionOutput::policy_definition): <p>The exported policy definition containing the formal logic rules, variables, and custom variable types.</p>
    /// - On failure, responds with [`SdkError<ExportAutomatedReasoningPolicyVersionError>`](crate::operation::export_automated_reasoning_policy_version::ExportAutomatedReasoningPolicyVersionError)
    pub fn export_automated_reasoning_policy_version(
        &self,
    ) -> crate::operation::export_automated_reasoning_policy_version::builders::ExportAutomatedReasoningPolicyVersionFluentBuilder {
        crate::operation::export_automated_reasoning_policy_version::builders::ExportAutomatedReasoningPolicyVersionFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
