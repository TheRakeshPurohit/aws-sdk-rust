// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_automated_reasoning_policy_workflow_type_content(
    object_4: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::types::AutomatedReasoningPolicyWorkflowTypeContent,
) -> ::std::result::Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    match input {
        crate::types::AutomatedReasoningPolicyWorkflowTypeContent::Documents(inner) => {
            let mut array_1 = object_4.key("documents").start_array();
            for item_2 in inner {
                {
                    #[allow(unused_mut)]
                    let mut object_3 = array_1.value().start_object();
                    crate::protocol_serde::shape_automated_reasoning_policy_build_workflow_document::ser_automated_reasoning_policy_build_workflow_document(&mut object_3, item_2)?;
                    object_3.finish();
                }
            }
            array_1.finish();
        }
        crate::types::AutomatedReasoningPolicyWorkflowTypeContent::PolicyRepairAssets(inner) => {
            #[allow(unused_mut)]
            let mut object_4 = object_4.key("policyRepairAssets").start_object();
            crate::protocol_serde::shape_automated_reasoning_policy_build_workflow_repair_content::ser_automated_reasoning_policy_build_workflow_repair_content(&mut object_4, inner)?;
            object_4.finish();
        }
        crate::types::AutomatedReasoningPolicyWorkflowTypeContent::Unknown => {
            return Err(::aws_smithy_types::error::operation::SerializationError::unknown_variant(
                "AutomatedReasoningPolicyWorkflowTypeContent",
            ))
        }
    }
    Ok(())
}
