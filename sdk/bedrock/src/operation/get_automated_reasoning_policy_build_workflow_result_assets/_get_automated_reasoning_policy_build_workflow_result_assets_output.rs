// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct GetAutomatedReasoningPolicyBuildWorkflowResultAssetsOutput {
    /// <p>The Amazon Resource Name (ARN) of the Automated Reasoning policy.</p>
    pub policy_arn: ::std::string::String,
    /// <p>The unique identifier of the build workflow.</p>
    pub build_workflow_id: ::std::string::String,
    /// <p>The requested build workflow asset. This is a union type that returns only one of the available asset types (logs, reports, or generated artifacts) based on the specific asset type requested in the API call.</p>
    pub build_workflow_assets: ::std::option::Option<crate::types::AutomatedReasoningPolicyBuildResultAssets>,
    _request_id: Option<String>,
}
impl GetAutomatedReasoningPolicyBuildWorkflowResultAssetsOutput {
    /// <p>The Amazon Resource Name (ARN) of the Automated Reasoning policy.</p>
    pub fn policy_arn(&self) -> &str {
        use std::ops::Deref;
        self.policy_arn.deref()
    }
    /// <p>The unique identifier of the build workflow.</p>
    pub fn build_workflow_id(&self) -> &str {
        use std::ops::Deref;
        self.build_workflow_id.deref()
    }
    /// <p>The requested build workflow asset. This is a union type that returns only one of the available asset types (logs, reports, or generated artifacts) based on the specific asset type requested in the API call.</p>
    pub fn build_workflow_assets(&self) -> ::std::option::Option<&crate::types::AutomatedReasoningPolicyBuildResultAssets> {
        self.build_workflow_assets.as_ref()
    }
}
impl ::aws_types::request_id::RequestId for GetAutomatedReasoningPolicyBuildWorkflowResultAssetsOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl GetAutomatedReasoningPolicyBuildWorkflowResultAssetsOutput {
    /// Creates a new builder-style object to manufacture [`GetAutomatedReasoningPolicyBuildWorkflowResultAssetsOutput`](crate::operation::get_automated_reasoning_policy_build_workflow_result_assets::GetAutomatedReasoningPolicyBuildWorkflowResultAssetsOutput).
    pub fn builder() -> crate::operation::get_automated_reasoning_policy_build_workflow_result_assets::builders::GetAutomatedReasoningPolicyBuildWorkflowResultAssetsOutputBuilder{
        crate::operation::get_automated_reasoning_policy_build_workflow_result_assets::builders::GetAutomatedReasoningPolicyBuildWorkflowResultAssetsOutputBuilder::default()
    }
}

/// A builder for [`GetAutomatedReasoningPolicyBuildWorkflowResultAssetsOutput`](crate::operation::get_automated_reasoning_policy_build_workflow_result_assets::GetAutomatedReasoningPolicyBuildWorkflowResultAssetsOutput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct GetAutomatedReasoningPolicyBuildWorkflowResultAssetsOutputBuilder {
    pub(crate) policy_arn: ::std::option::Option<::std::string::String>,
    pub(crate) build_workflow_id: ::std::option::Option<::std::string::String>,
    pub(crate) build_workflow_assets: ::std::option::Option<crate::types::AutomatedReasoningPolicyBuildResultAssets>,
    _request_id: Option<String>,
}
impl GetAutomatedReasoningPolicyBuildWorkflowResultAssetsOutputBuilder {
    /// <p>The Amazon Resource Name (ARN) of the Automated Reasoning policy.</p>
    /// This field is required.
    pub fn policy_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.policy_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the Automated Reasoning policy.</p>
    pub fn set_policy_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.policy_arn = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the Automated Reasoning policy.</p>
    pub fn get_policy_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.policy_arn
    }
    /// <p>The unique identifier of the build workflow.</p>
    /// This field is required.
    pub fn build_workflow_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.build_workflow_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The unique identifier of the build workflow.</p>
    pub fn set_build_workflow_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.build_workflow_id = input;
        self
    }
    /// <p>The unique identifier of the build workflow.</p>
    pub fn get_build_workflow_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.build_workflow_id
    }
    /// <p>The requested build workflow asset. This is a union type that returns only one of the available asset types (logs, reports, or generated artifacts) based on the specific asset type requested in the API call.</p>
    pub fn build_workflow_assets(mut self, input: crate::types::AutomatedReasoningPolicyBuildResultAssets) -> Self {
        self.build_workflow_assets = ::std::option::Option::Some(input);
        self
    }
    /// <p>The requested build workflow asset. This is a union type that returns only one of the available asset types (logs, reports, or generated artifacts) based on the specific asset type requested in the API call.</p>
    pub fn set_build_workflow_assets(mut self, input: ::std::option::Option<crate::types::AutomatedReasoningPolicyBuildResultAssets>) -> Self {
        self.build_workflow_assets = input;
        self
    }
    /// <p>The requested build workflow asset. This is a union type that returns only one of the available asset types (logs, reports, or generated artifacts) based on the specific asset type requested in the API call.</p>
    pub fn get_build_workflow_assets(&self) -> &::std::option::Option<crate::types::AutomatedReasoningPolicyBuildResultAssets> {
        &self.build_workflow_assets
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`GetAutomatedReasoningPolicyBuildWorkflowResultAssetsOutput`](crate::operation::get_automated_reasoning_policy_build_workflow_result_assets::GetAutomatedReasoningPolicyBuildWorkflowResultAssetsOutput).
    /// This method will fail if any of the following fields are not set:
    /// - [`policy_arn`](crate::operation::get_automated_reasoning_policy_build_workflow_result_assets::builders::GetAutomatedReasoningPolicyBuildWorkflowResultAssetsOutputBuilder::policy_arn)
    /// - [`build_workflow_id`](crate::operation::get_automated_reasoning_policy_build_workflow_result_assets::builders::GetAutomatedReasoningPolicyBuildWorkflowResultAssetsOutputBuilder::build_workflow_id)
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::get_automated_reasoning_policy_build_workflow_result_assets::GetAutomatedReasoningPolicyBuildWorkflowResultAssetsOutput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(
            crate::operation::get_automated_reasoning_policy_build_workflow_result_assets::GetAutomatedReasoningPolicyBuildWorkflowResultAssetsOutput {
                policy_arn: self.policy_arn
                    .ok_or_else(||
                        ::aws_smithy_types::error::operation::BuildError::missing_field("policy_arn", "policy_arn was not specified but it is required when building GetAutomatedReasoningPolicyBuildWorkflowResultAssetsOutput")
                    )?
                ,
                build_workflow_id: self.build_workflow_id
                    .ok_or_else(||
                        ::aws_smithy_types::error::operation::BuildError::missing_field("build_workflow_id", "build_workflow_id was not specified but it is required when building GetAutomatedReasoningPolicyBuildWorkflowResultAssetsOutput")
                    )?
                ,
                build_workflow_assets: self.build_workflow_assets
                ,
                _request_id: self._request_id,
            }
        )
    }
}
