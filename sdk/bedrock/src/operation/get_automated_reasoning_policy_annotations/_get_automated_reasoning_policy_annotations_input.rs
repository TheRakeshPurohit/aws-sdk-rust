// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct GetAutomatedReasoningPolicyAnnotationsInput {
    /// <p>The Amazon Resource Name (ARN) of the Automated Reasoning policy whose annotations you want to retrieve.</p>
    pub policy_arn: ::std::option::Option<::std::string::String>,
    /// <p>The unique identifier of the build workflow whose annotations you want to retrieve.</p>
    pub build_workflow_id: ::std::option::Option<::std::string::String>,
}
impl GetAutomatedReasoningPolicyAnnotationsInput {
    /// <p>The Amazon Resource Name (ARN) of the Automated Reasoning policy whose annotations you want to retrieve.</p>
    pub fn policy_arn(&self) -> ::std::option::Option<&str> {
        self.policy_arn.as_deref()
    }
    /// <p>The unique identifier of the build workflow whose annotations you want to retrieve.</p>
    pub fn build_workflow_id(&self) -> ::std::option::Option<&str> {
        self.build_workflow_id.as_deref()
    }
}
impl GetAutomatedReasoningPolicyAnnotationsInput {
    /// Creates a new builder-style object to manufacture [`GetAutomatedReasoningPolicyAnnotationsInput`](crate::operation::get_automated_reasoning_policy_annotations::GetAutomatedReasoningPolicyAnnotationsInput).
    pub fn builder() -> crate::operation::get_automated_reasoning_policy_annotations::builders::GetAutomatedReasoningPolicyAnnotationsInputBuilder {
        crate::operation::get_automated_reasoning_policy_annotations::builders::GetAutomatedReasoningPolicyAnnotationsInputBuilder::default()
    }
}

/// A builder for [`GetAutomatedReasoningPolicyAnnotationsInput`](crate::operation::get_automated_reasoning_policy_annotations::GetAutomatedReasoningPolicyAnnotationsInput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct GetAutomatedReasoningPolicyAnnotationsInputBuilder {
    pub(crate) policy_arn: ::std::option::Option<::std::string::String>,
    pub(crate) build_workflow_id: ::std::option::Option<::std::string::String>,
}
impl GetAutomatedReasoningPolicyAnnotationsInputBuilder {
    /// <p>The Amazon Resource Name (ARN) of the Automated Reasoning policy whose annotations you want to retrieve.</p>
    /// This field is required.
    pub fn policy_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.policy_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the Automated Reasoning policy whose annotations you want to retrieve.</p>
    pub fn set_policy_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.policy_arn = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the Automated Reasoning policy whose annotations you want to retrieve.</p>
    pub fn get_policy_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.policy_arn
    }
    /// <p>The unique identifier of the build workflow whose annotations you want to retrieve.</p>
    /// This field is required.
    pub fn build_workflow_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.build_workflow_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The unique identifier of the build workflow whose annotations you want to retrieve.</p>
    pub fn set_build_workflow_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.build_workflow_id = input;
        self
    }
    /// <p>The unique identifier of the build workflow whose annotations you want to retrieve.</p>
    pub fn get_build_workflow_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.build_workflow_id
    }
    /// Consumes the builder and constructs a [`GetAutomatedReasoningPolicyAnnotationsInput`](crate::operation::get_automated_reasoning_policy_annotations::GetAutomatedReasoningPolicyAnnotationsInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::get_automated_reasoning_policy_annotations::GetAutomatedReasoningPolicyAnnotationsInput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(
            crate::operation::get_automated_reasoning_policy_annotations::GetAutomatedReasoningPolicyAnnotationsInput {
                policy_arn: self.policy_arn,
                build_workflow_id: self.build_workflow_id,
            },
        )
    }
}
