// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateDBProxyEndpoint`](crate::operation::create_db_proxy_endpoint::builders::CreateDBProxyEndpointFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`db_proxy_name(impl Into<String>)`](crate::operation::create_db_proxy_endpoint::builders::CreateDBProxyEndpointFluentBuilder::db_proxy_name) / [`set_db_proxy_name(Option<String>)`](crate::operation::create_db_proxy_endpoint::builders::CreateDBProxyEndpointFluentBuilder::set_db_proxy_name):<br>required: **true**<br><p>The name of the DB proxy associated with the DB proxy endpoint that you create.</p><br>
    ///   - [`db_proxy_endpoint_name(impl Into<String>)`](crate::operation::create_db_proxy_endpoint::builders::CreateDBProxyEndpointFluentBuilder::db_proxy_endpoint_name) / [`set_db_proxy_endpoint_name(Option<String>)`](crate::operation::create_db_proxy_endpoint::builders::CreateDBProxyEndpointFluentBuilder::set_db_proxy_endpoint_name):<br>required: **true**<br><p>The name of the DB proxy endpoint to create.</p><br>
    ///   - [`vpc_subnet_ids(impl Into<String>)`](crate::operation::create_db_proxy_endpoint::builders::CreateDBProxyEndpointFluentBuilder::vpc_subnet_ids) / [`set_vpc_subnet_ids(Option<Vec::<String>>)`](crate::operation::create_db_proxy_endpoint::builders::CreateDBProxyEndpointFluentBuilder::set_vpc_subnet_ids):<br>required: **true**<br><p>The VPC subnet IDs for the DB proxy endpoint that you create. You can specify a different set of subnet IDs than for the original DB proxy.</p><br>
    ///   - [`vpc_security_group_ids(impl Into<String>)`](crate::operation::create_db_proxy_endpoint::builders::CreateDBProxyEndpointFluentBuilder::vpc_security_group_ids) / [`set_vpc_security_group_ids(Option<Vec::<String>>)`](crate::operation::create_db_proxy_endpoint::builders::CreateDBProxyEndpointFluentBuilder::set_vpc_security_group_ids):<br>required: **false**<br><p>The VPC security group IDs for the DB proxy endpoint that you create. You can specify a different set of security group IDs than for the original DB proxy. The default is the default security group for the VPC.</p><br>
    ///   - [`target_role(DbProxyEndpointTargetRole)`](crate::operation::create_db_proxy_endpoint::builders::CreateDBProxyEndpointFluentBuilder::target_role) / [`set_target_role(Option<DbProxyEndpointTargetRole>)`](crate::operation::create_db_proxy_endpoint::builders::CreateDBProxyEndpointFluentBuilder::set_target_role):<br>required: **false**<br><p>The role of the DB proxy endpoint. The role determines whether the endpoint can be used for read/write or only read operations. The default is <code>READ_WRITE</code>. The only role that proxies for RDS for Microsoft SQL Server support is <code>READ_WRITE</code>.</p><br>
    ///   - [`tags(Tag)`](crate::operation::create_db_proxy_endpoint::builders::CreateDBProxyEndpointFluentBuilder::tags) / [`set_tags(Option<Vec::<Tag>>)`](crate::operation::create_db_proxy_endpoint::builders::CreateDBProxyEndpointFluentBuilder::set_tags):<br>required: **false**<br><p>A list of tags.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.html">Tagging Amazon RDS resources</a> in the <i>Amazon RDS User Guide</i> or <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_Tagging.html">Tagging Amazon Aurora and Amazon RDS resources</a> in the <i>Amazon Aurora User Guide</i>.</p><br>
    ///   - [`endpoint_network_type(EndpointNetworkType)`](crate::operation::create_db_proxy_endpoint::builders::CreateDBProxyEndpointFluentBuilder::endpoint_network_type) / [`set_endpoint_network_type(Option<EndpointNetworkType>)`](crate::operation::create_db_proxy_endpoint::builders::CreateDBProxyEndpointFluentBuilder::set_endpoint_network_type):<br>required: **false**<br><p>The network type of the DB proxy endpoint. The network type determines the IP version that the proxy endpoint supports.</p> <p>Valid values:</p> <ul>  <li>   <p><code>IPV4</code> - The proxy endpoint supports IPv4 only.</p></li>  <li>   <p><code>IPV6</code> - The proxy endpoint supports IPv6 only.</p></li>  <li>   <p><code>DUAL</code> - The proxy endpoint supports both IPv4 and IPv6.</p></li> </ul> <p>Default: <code>IPV4</code></p> <p>Constraints:</p> <ul>  <li>   <p>If you specify <code>IPV6</code> or <code>DUAL</code>, the VPC and all subnets must have an IPv6 CIDR block.</p></li>  <li>   <p>If you specify <code>IPV6</code> or <code>DUAL</code>, the VPC tenancy cannot be <code>dedicated</code>.</p></li> </ul><br>
    /// - On success, responds with [`CreateDbProxyEndpointOutput`](crate::operation::create_db_proxy_endpoint::CreateDbProxyEndpointOutput) with field(s):
    ///   - [`db_proxy_endpoint(Option<DbProxyEndpoint>)`](crate::operation::create_db_proxy_endpoint::CreateDbProxyEndpointOutput::db_proxy_endpoint): <p>The <code>DBProxyEndpoint</code> object that is created by the API operation. The DB proxy endpoint that you create might provide capabilities such as read/write or read-only operations, or using a different VPC than the proxy's default VPC.</p>
    /// - On failure, responds with [`SdkError<CreateDBProxyEndpointError>`](crate::operation::create_db_proxy_endpoint::CreateDBProxyEndpointError)
    pub fn create_db_proxy_endpoint(&self) -> crate::operation::create_db_proxy_endpoint::builders::CreateDBProxyEndpointFluentBuilder {
        crate::operation::create_db_proxy_endpoint::builders::CreateDBProxyEndpointFluentBuilder::new(self.handle.clone())
    }
}
