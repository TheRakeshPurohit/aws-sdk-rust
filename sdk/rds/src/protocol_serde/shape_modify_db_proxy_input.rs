// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_modify_db_proxy_input_input_input(
    input: &crate::operation::modify_db_proxy::ModifyDbProxyInput,
) -> ::std::result::Result<::aws_smithy_types::body::SdkBody, ::aws_smithy_types::error::operation::SerializationError> {
    let mut out = String::new();
    #[allow(unused_mut)]
    let mut writer = ::aws_smithy_query::QueryWriter::new(&mut out, "ModifyDBProxy", "2014-10-31");
    #[allow(unused_mut)]
    let mut scope_1 = writer.prefix("DBProxyName");
    if let Some(var_2) = &input.db_proxy_name {
        scope_1.string(var_2);
    }
    #[allow(unused_mut)]
    let mut scope_3 = writer.prefix("NewDBProxyName");
    if let Some(var_4) = &input.new_db_proxy_name {
        scope_3.string(var_4);
    }
    #[allow(unused_mut)]
    let mut scope_5 = writer.prefix("DefaultAuthScheme");
    if let Some(var_6) = &input.default_auth_scheme {
        scope_5.string(var_6.as_str());
    }
    #[allow(unused_mut)]
    let mut scope_7 = writer.prefix("Auth");
    if let Some(var_8) = &input.auth {
        let mut list_10 = scope_7.start_list(false, None);
        for item_9 in var_8 {
            #[allow(unused_mut)]
            let mut entry_11 = list_10.entry();
            crate::protocol_serde::shape_user_auth_config::ser_user_auth_config(entry_11, item_9)?;
        }
        list_10.finish();
    }
    #[allow(unused_mut)]
    let mut scope_12 = writer.prefix("RequireTLS");
    if let Some(var_13) = &input.require_tls {
        scope_12.boolean(*var_13);
    }
    #[allow(unused_mut)]
    let mut scope_14 = writer.prefix("IdleClientTimeout");
    if let Some(var_15) = &input.idle_client_timeout {
        scope_14.number(
            #[allow(clippy::useless_conversion)]
            ::aws_smithy_types::Number::NegInt((*var_15).into()),
        );
    }
    #[allow(unused_mut)]
    let mut scope_16 = writer.prefix("DebugLogging");
    if let Some(var_17) = &input.debug_logging {
        scope_16.boolean(*var_17);
    }
    #[allow(unused_mut)]
    let mut scope_18 = writer.prefix("RoleArn");
    if let Some(var_19) = &input.role_arn {
        scope_18.string(var_19);
    }
    #[allow(unused_mut)]
    let mut scope_20 = writer.prefix("SecurityGroups");
    if let Some(var_21) = &input.security_groups {
        let mut list_23 = scope_20.start_list(false, None);
        for item_22 in var_21 {
            #[allow(unused_mut)]
            let mut entry_24 = list_23.entry();
            entry_24.string(item_22);
        }
        list_23.finish();
    }
    writer.finish();
    Ok(::aws_smithy_types::body::SdkBody::from(out))
}
