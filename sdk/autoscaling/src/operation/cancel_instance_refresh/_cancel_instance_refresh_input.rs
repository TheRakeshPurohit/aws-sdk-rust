// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct CancelInstanceRefreshInput {
    /// <p>The name of the Auto Scaling group.</p>
    pub auto_scaling_group_name: ::std::option::Option<::std::string::String>,
    /// <p>When cancelling an instance refresh, this indicates whether to wait for in-flight launches and terminations to complete. The default is true.</p>
    /// <p>When set to false, Amazon EC2 Auto Scaling cancels the instance refresh without waiting for any pending launches or terminations to complete.</p>
    pub wait_for_transitioning_instances: ::std::option::Option<bool>,
}
impl CancelInstanceRefreshInput {
    /// <p>The name of the Auto Scaling group.</p>
    pub fn auto_scaling_group_name(&self) -> ::std::option::Option<&str> {
        self.auto_scaling_group_name.as_deref()
    }
    /// <p>When cancelling an instance refresh, this indicates whether to wait for in-flight launches and terminations to complete. The default is true.</p>
    /// <p>When set to false, Amazon EC2 Auto Scaling cancels the instance refresh without waiting for any pending launches or terminations to complete.</p>
    pub fn wait_for_transitioning_instances(&self) -> ::std::option::Option<bool> {
        self.wait_for_transitioning_instances
    }
}
impl CancelInstanceRefreshInput {
    /// Creates a new builder-style object to manufacture [`CancelInstanceRefreshInput`](crate::operation::cancel_instance_refresh::CancelInstanceRefreshInput).
    pub fn builder() -> crate::operation::cancel_instance_refresh::builders::CancelInstanceRefreshInputBuilder {
        crate::operation::cancel_instance_refresh::builders::CancelInstanceRefreshInputBuilder::default()
    }
}

/// A builder for [`CancelInstanceRefreshInput`](crate::operation::cancel_instance_refresh::CancelInstanceRefreshInput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct CancelInstanceRefreshInputBuilder {
    pub(crate) auto_scaling_group_name: ::std::option::Option<::std::string::String>,
    pub(crate) wait_for_transitioning_instances: ::std::option::Option<bool>,
}
impl CancelInstanceRefreshInputBuilder {
    /// <p>The name of the Auto Scaling group.</p>
    /// This field is required.
    pub fn auto_scaling_group_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.auto_scaling_group_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of the Auto Scaling group.</p>
    pub fn set_auto_scaling_group_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.auto_scaling_group_name = input;
        self
    }
    /// <p>The name of the Auto Scaling group.</p>
    pub fn get_auto_scaling_group_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.auto_scaling_group_name
    }
    /// <p>When cancelling an instance refresh, this indicates whether to wait for in-flight launches and terminations to complete. The default is true.</p>
    /// <p>When set to false, Amazon EC2 Auto Scaling cancels the instance refresh without waiting for any pending launches or terminations to complete.</p>
    pub fn wait_for_transitioning_instances(mut self, input: bool) -> Self {
        self.wait_for_transitioning_instances = ::std::option::Option::Some(input);
        self
    }
    /// <p>When cancelling an instance refresh, this indicates whether to wait for in-flight launches and terminations to complete. The default is true.</p>
    /// <p>When set to false, Amazon EC2 Auto Scaling cancels the instance refresh without waiting for any pending launches or terminations to complete.</p>
    pub fn set_wait_for_transitioning_instances(mut self, input: ::std::option::Option<bool>) -> Self {
        self.wait_for_transitioning_instances = input;
        self
    }
    /// <p>When cancelling an instance refresh, this indicates whether to wait for in-flight launches and terminations to complete. The default is true.</p>
    /// <p>When set to false, Amazon EC2 Auto Scaling cancels the instance refresh without waiting for any pending launches or terminations to complete.</p>
    pub fn get_wait_for_transitioning_instances(&self) -> &::std::option::Option<bool> {
        &self.wait_for_transitioning_instances
    }
    /// Consumes the builder and constructs a [`CancelInstanceRefreshInput`](crate::operation::cancel_instance_refresh::CancelInstanceRefreshInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<crate::operation::cancel_instance_refresh::CancelInstanceRefreshInput, ::aws_smithy_types::error::operation::BuildError>
    {
        ::std::result::Result::Ok(crate::operation::cancel_instance_refresh::CancelInstanceRefreshInput {
            auto_scaling_group_name: self.auto_scaling_group_name,
            wait_for_transitioning_instances: self.wait_for_transitioning_instances,
        })
    }
}
