// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct DescribeHybridAdUpdateInput {
    /// <p>The identifier of the hybrid directory for which to retrieve update information.</p>
    pub directory_id: ::std::option::Option<::std::string::String>,
    /// <p>The type of update activities to retrieve. Valid values include <code>SelfManagedInstances</code> and <code>HybridAdministratorAccount</code>.</p>
    pub update_type: ::std::option::Option<crate::types::HybridUpdateType>,
    /// <p>The pagination token from a previous request to <code>DescribeHybridADUpdate</code>. Pass null if this is the first request.</p>
    pub next_token: ::std::option::Option<::std::string::String>,
}
impl DescribeHybridAdUpdateInput {
    /// <p>The identifier of the hybrid directory for which to retrieve update information.</p>
    pub fn directory_id(&self) -> ::std::option::Option<&str> {
        self.directory_id.as_deref()
    }
    /// <p>The type of update activities to retrieve. Valid values include <code>SelfManagedInstances</code> and <code>HybridAdministratorAccount</code>.</p>
    pub fn update_type(&self) -> ::std::option::Option<&crate::types::HybridUpdateType> {
        self.update_type.as_ref()
    }
    /// <p>The pagination token from a previous request to <code>DescribeHybridADUpdate</code>. Pass null if this is the first request.</p>
    pub fn next_token(&self) -> ::std::option::Option<&str> {
        self.next_token.as_deref()
    }
}
impl DescribeHybridAdUpdateInput {
    /// Creates a new builder-style object to manufacture [`DescribeHybridAdUpdateInput`](crate::operation::describe_hybrid_ad_update::DescribeHybridAdUpdateInput).
    pub fn builder() -> crate::operation::describe_hybrid_ad_update::builders::DescribeHybridAdUpdateInputBuilder {
        crate::operation::describe_hybrid_ad_update::builders::DescribeHybridAdUpdateInputBuilder::default()
    }
}

/// A builder for [`DescribeHybridAdUpdateInput`](crate::operation::describe_hybrid_ad_update::DescribeHybridAdUpdateInput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct DescribeHybridAdUpdateInputBuilder {
    pub(crate) directory_id: ::std::option::Option<::std::string::String>,
    pub(crate) update_type: ::std::option::Option<crate::types::HybridUpdateType>,
    pub(crate) next_token: ::std::option::Option<::std::string::String>,
}
impl DescribeHybridAdUpdateInputBuilder {
    /// <p>The identifier of the hybrid directory for which to retrieve update information.</p>
    /// This field is required.
    pub fn directory_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.directory_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The identifier of the hybrid directory for which to retrieve update information.</p>
    pub fn set_directory_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.directory_id = input;
        self
    }
    /// <p>The identifier of the hybrid directory for which to retrieve update information.</p>
    pub fn get_directory_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.directory_id
    }
    /// <p>The type of update activities to retrieve. Valid values include <code>SelfManagedInstances</code> and <code>HybridAdministratorAccount</code>.</p>
    pub fn update_type(mut self, input: crate::types::HybridUpdateType) -> Self {
        self.update_type = ::std::option::Option::Some(input);
        self
    }
    /// <p>The type of update activities to retrieve. Valid values include <code>SelfManagedInstances</code> and <code>HybridAdministratorAccount</code>.</p>
    pub fn set_update_type(mut self, input: ::std::option::Option<crate::types::HybridUpdateType>) -> Self {
        self.update_type = input;
        self
    }
    /// <p>The type of update activities to retrieve. Valid values include <code>SelfManagedInstances</code> and <code>HybridAdministratorAccount</code>.</p>
    pub fn get_update_type(&self) -> &::std::option::Option<crate::types::HybridUpdateType> {
        &self.update_type
    }
    /// <p>The pagination token from a previous request to <code>DescribeHybridADUpdate</code>. Pass null if this is the first request.</p>
    pub fn next_token(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.next_token = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The pagination token from a previous request to <code>DescribeHybridADUpdate</code>. Pass null if this is the first request.</p>
    pub fn set_next_token(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.next_token = input;
        self
    }
    /// <p>The pagination token from a previous request to <code>DescribeHybridADUpdate</code>. Pass null if this is the first request.</p>
    pub fn get_next_token(&self) -> &::std::option::Option<::std::string::String> {
        &self.next_token
    }
    /// Consumes the builder and constructs a [`DescribeHybridAdUpdateInput`](crate::operation::describe_hybrid_ad_update::DescribeHybridAdUpdateInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::describe_hybrid_ad_update::DescribeHybridAdUpdateInput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(crate::operation::describe_hybrid_ad_update::DescribeHybridAdUpdateInput {
            directory_id: self.directory_id,
            update_type: self.update_type,
            next_token: self.next_token,
        })
    }
}
