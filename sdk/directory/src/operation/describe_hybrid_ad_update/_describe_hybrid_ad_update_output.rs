// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct DescribeHybridAdUpdateOutput {
    /// <p>Information about update activities for the hybrid directory, organized by update type.</p>
    pub update_activities: ::std::option::Option<crate::types::HybridUpdateActivities>,
    /// <p>If not null, more results are available. Pass this value for the <code>NextToken</code> parameter in a subsequent request to retrieve the next set of items.</p>
    pub next_token: ::std::option::Option<::std::string::String>,
    _request_id: Option<String>,
}
impl DescribeHybridAdUpdateOutput {
    /// <p>Information about update activities for the hybrid directory, organized by update type.</p>
    pub fn update_activities(&self) -> ::std::option::Option<&crate::types::HybridUpdateActivities> {
        self.update_activities.as_ref()
    }
    /// <p>If not null, more results are available. Pass this value for the <code>NextToken</code> parameter in a subsequent request to retrieve the next set of items.</p>
    pub fn next_token(&self) -> ::std::option::Option<&str> {
        self.next_token.as_deref()
    }
}
impl ::aws_types::request_id::RequestId for DescribeHybridAdUpdateOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl DescribeHybridAdUpdateOutput {
    /// Creates a new builder-style object to manufacture [`DescribeHybridAdUpdateOutput`](crate::operation::describe_hybrid_ad_update::DescribeHybridAdUpdateOutput).
    pub fn builder() -> crate::operation::describe_hybrid_ad_update::builders::DescribeHybridAdUpdateOutputBuilder {
        crate::operation::describe_hybrid_ad_update::builders::DescribeHybridAdUpdateOutputBuilder::default()
    }
}

/// A builder for [`DescribeHybridAdUpdateOutput`](crate::operation::describe_hybrid_ad_update::DescribeHybridAdUpdateOutput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct DescribeHybridAdUpdateOutputBuilder {
    pub(crate) update_activities: ::std::option::Option<crate::types::HybridUpdateActivities>,
    pub(crate) next_token: ::std::option::Option<::std::string::String>,
    _request_id: Option<String>,
}
impl DescribeHybridAdUpdateOutputBuilder {
    /// <p>Information about update activities for the hybrid directory, organized by update type.</p>
    pub fn update_activities(mut self, input: crate::types::HybridUpdateActivities) -> Self {
        self.update_activities = ::std::option::Option::Some(input);
        self
    }
    /// <p>Information about update activities for the hybrid directory, organized by update type.</p>
    pub fn set_update_activities(mut self, input: ::std::option::Option<crate::types::HybridUpdateActivities>) -> Self {
        self.update_activities = input;
        self
    }
    /// <p>Information about update activities for the hybrid directory, organized by update type.</p>
    pub fn get_update_activities(&self) -> &::std::option::Option<crate::types::HybridUpdateActivities> {
        &self.update_activities
    }
    /// <p>If not null, more results are available. Pass this value for the <code>NextToken</code> parameter in a subsequent request to retrieve the next set of items.</p>
    pub fn next_token(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.next_token = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>If not null, more results are available. Pass this value for the <code>NextToken</code> parameter in a subsequent request to retrieve the next set of items.</p>
    pub fn set_next_token(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.next_token = input;
        self
    }
    /// <p>If not null, more results are available. Pass this value for the <code>NextToken</code> parameter in a subsequent request to retrieve the next set of items.</p>
    pub fn get_next_token(&self) -> &::std::option::Option<::std::string::String> {
        &self.next_token
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`DescribeHybridAdUpdateOutput`](crate::operation::describe_hybrid_ad_update::DescribeHybridAdUpdateOutput).
    pub fn build(self) -> crate::operation::describe_hybrid_ad_update::DescribeHybridAdUpdateOutput {
        crate::operation::describe_hybrid_ad_update::DescribeHybridAdUpdateOutput {
            update_activities: self.update_activities,
            next_token: self.next_token,
            _request_id: self._request_id,
        }
    }
}
