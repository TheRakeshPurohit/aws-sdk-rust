// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_assessment_configuration(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::types::AssessmentConfiguration,
) -> ::std::result::Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    {
        let mut array_1 = object.key("CustomerDnsIps").start_array();
        for item_2 in &input.customer_dns_ips {
            {
                array_1.value().string(item_2.as_str());
            }
        }
        array_1.finish();
    }
    {
        object.key("DnsName").string(input.dns_name.as_str());
    }
    if let Some(var_3) = &input.vpc_settings {
        #[allow(unused_mut)]
        let mut object_4 = object.key("VpcSettings").start_object();
        crate::protocol_serde::shape_directory_vpc_settings::ser_directory_vpc_settings(&mut object_4, var_3)?;
        object_4.finish();
    }
    {
        let mut array_5 = object.key("InstanceIds").start_array();
        for item_6 in &input.instance_ids {
            {
                array_5.value().string(item_6.as_str());
            }
        }
        array_5.finish();
    }
    if let Some(var_7) = &input.security_group_ids {
        let mut array_8 = object.key("SecurityGroupIds").start_array();
        for item_9 in var_7 {
            {
                array_8.value().string(item_9.as_str());
            }
        }
        array_8.finish();
    }
    Ok(())
}
