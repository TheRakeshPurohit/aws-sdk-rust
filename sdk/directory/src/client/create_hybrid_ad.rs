// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateHybridAD`](crate::operation::create_hybrid_ad::builders::CreateHybridADFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`secret_arn(impl Into<String>)`](crate::operation::create_hybrid_ad::builders::CreateHybridADFluentBuilder::secret_arn) / [`set_secret_arn(Option<String>)`](crate::operation::create_hybrid_ad::builders::CreateHybridADFluentBuilder::set_secret_arn):<br>required: **true**<br><p>The Amazon Resource Name (ARN) of the Amazon Web Services Secrets Manager secret that contains the credentials for the service account used to join hybrid domain controllers to your self-managed AD domain. This secret is used once and not stored.</p> <p>The secret must contain key-value pairs with keys matching <code>customerAdAdminDomainUsername</code> and <code>customerAdAdminDomainPassword</code>. For example: <code>{"customerAdAdminDomainUsername":"carlos_salazar","customerAdAdminDomainPassword":"ExamplePassword123!"}</code>.</p><br>
    ///   - [`assessment_id(impl Into<String>)`](crate::operation::create_hybrid_ad::builders::CreateHybridADFluentBuilder::assessment_id) / [`set_assessment_id(Option<String>)`](crate::operation::create_hybrid_ad::builders::CreateHybridADFluentBuilder::set_assessment_id):<br>required: **true**<br><p>The unique identifier of the successful directory assessment that validates your self-managed AD environment. You must have a successful directory assessment before you create a hybrid directory.</p><br>
    ///   - [`tags(Tag)`](crate::operation::create_hybrid_ad::builders::CreateHybridADFluentBuilder::tags) / [`set_tags(Option<Vec::<Tag>>)`](crate::operation::create_hybrid_ad::builders::CreateHybridADFluentBuilder::set_tags):<br>required: **false**<br><p>The tags to be assigned to the directory. Each tag consists of a key and value pair. You can specify multiple tags as a list.</p><br>
    /// - On success, responds with [`CreateHybridAdOutput`](crate::operation::create_hybrid_ad::CreateHybridAdOutput) with field(s):
    ///   - [`directory_id(Option<String>)`](crate::operation::create_hybrid_ad::CreateHybridAdOutput::directory_id): <p>The unique identifier of the newly created hybrid directory.</p>
    /// - On failure, responds with [`SdkError<CreateHybridADError>`](crate::operation::create_hybrid_ad::CreateHybridADError)
    pub fn create_hybrid_ad(&self) -> crate::operation::create_hybrid_ad::builders::CreateHybridADFluentBuilder {
        crate::operation::create_hybrid_ad::builders::CreateHybridADFluentBuilder::new(self.handle.clone())
    }
}
