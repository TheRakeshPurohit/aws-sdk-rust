// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateOpportunity`](crate::operation::create_opportunity::builders::CreateOpportunityFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`catalog(impl Into<String>)`](crate::operation::create_opportunity::builders::CreateOpportunityFluentBuilder::catalog) / [`set_catalog(Option<String>)`](crate::operation::create_opportunity::builders::CreateOpportunityFluentBuilder::set_catalog):<br>required: **true**<br><p>Specifies the catalog associated with the request. This field takes a string value from a predefined list: <code>AWS</code> or <code>Sandbox</code>. The catalog determines which environment the opportunity is created in. Use <code>AWS</code> to create opportunities in the Amazon Web Services catalog, and <code>Sandbox</code> for testing in secure, isolated environments.</p><br>
    ///   - [`primary_needs_from_aws(PrimaryNeedFromAws)`](crate::operation::create_opportunity::builders::CreateOpportunityFluentBuilder::primary_needs_from_aws) / [`set_primary_needs_from_aws(Option<Vec::<PrimaryNeedFromAws>>)`](crate::operation::create_opportunity::builders::CreateOpportunityFluentBuilder::set_primary_needs_from_aws):<br>required: **false**<br><p>Identifies the type of support the partner needs from Amazon Web Services.</p> <p>Valid values:</p> <ul>  <li>   <p>Cosell—Architectural Validation: Confirmation from Amazon Web Services that the partner's proposed solution architecture is aligned with Amazon Web Services best practices and poses minimal architectural risks.</p></li>  <li>   <p>Cosell—Business Presentation: Request Amazon Web Services seller's participation in a joint customer presentation.</p></li>  <li>   <p>Cosell—Competitive Information: Access to Amazon Web Services competitive resources and support for the partner's proposed solution.</p></li>  <li>   <p>Cosell—Pricing Assistance: Connect with an Amazon Web Services seller for support situations where a partner may be receiving an upfront discount on a service (for example: EDP deals).</p></li>  <li>   <p>Cosell—Technical Consultation: Connect with an Amazon Web Services Solutions Architect to address the partner's questions about the proposed solution.</p></li>  <li>   <p>Cosell—Total Cost of Ownership Evaluation: Assistance with quoting different cost savings of proposed solutions on Amazon Web Services versus on-premises or a traditional hosting environment.</p></li>  <li>   <p>Cosell—Deal Support: Request Amazon Web Services seller's support to progress the opportunity (for example: joint customer call, strategic positioning).</p></li>  <li>   <p>Cosell—Support for Public Tender/RFx: Opportunity related to the public sector where the partner needs Amazon Web Services RFx support.</p></li> </ul><br>
    ///   - [`national_security(NationalSecurity)`](crate::operation::create_opportunity::builders::CreateOpportunityFluentBuilder::national_security) / [`set_national_security(Option<NationalSecurity>)`](crate::operation::create_opportunity::builders::CreateOpportunityFluentBuilder::set_national_security):<br>required: **false**<br><p>Indicates whether the <code>Opportunity</code> pertains to a national security project. This field must be set to <code>true</code> only when the customer's industry is <i>Government</i>. Additional privacy and security measures apply during the review and management process for opportunities marked as <code>NationalSecurity</code>.</p><br>
    ///   - [`partner_opportunity_identifier(impl Into<String>)`](crate::operation::create_opportunity::builders::CreateOpportunityFluentBuilder::partner_opportunity_identifier) / [`set_partner_opportunity_identifier(Option<String>)`](crate::operation::create_opportunity::builders::CreateOpportunityFluentBuilder::set_partner_opportunity_identifier):<br>required: **false**<br><p>Specifies the opportunity's unique identifier in the partner's CRM system. This value is essential to track and reconcile because it's included in the outbound payload to the partner.</p> <p>This field allows partners to link an opportunity to their CRM, which helps to ensure seamless integration and accurate synchronization between the Partner Central API and the partner's internal systems.</p><br>
    ///   - [`customer(Customer)`](crate::operation::create_opportunity::builders::CreateOpportunityFluentBuilder::customer) / [`set_customer(Option<Customer>)`](crate::operation::create_opportunity::builders::CreateOpportunityFluentBuilder::set_customer):<br>required: **false**<br><p>Specifies customer details associated with the <code>Opportunity</code>.</p><br>
    ///   - [`project(Project)`](crate::operation::create_opportunity::builders::CreateOpportunityFluentBuilder::project) / [`set_project(Option<Project>)`](crate::operation::create_opportunity::builders::CreateOpportunityFluentBuilder::set_project):<br>required: **false**<br><p>An object that contains project details for the <code>Opportunity</code>.</p><br>
    ///   - [`opportunity_type(OpportunityType)`](crate::operation::create_opportunity::builders::CreateOpportunityFluentBuilder::opportunity_type) / [`set_opportunity_type(Option<OpportunityType>)`](crate::operation::create_opportunity::builders::CreateOpportunityFluentBuilder::set_opportunity_type):<br>required: **false**<br><p>Specifies the opportunity type as a renewal, new, or expansion.</p> <p>Opportunity types:</p> <ul>  <li>   <p>New opportunity: Represents a new business opportunity with a potential customer that's not previously engaged with your solutions or services.</p></li>  <li>   <p>Renewal opportunity: Represents an opportunity to renew an existing contract or subscription with a current customer, ensuring continuity of service.</p></li>  <li>   <p>Expansion opportunity: Represents an opportunity to expand the scope of an existing contract or subscription, either by adding new services or increasing the volume of existing services for a current customer.</p></li> </ul><br>
    ///   - [`marketing(Marketing)`](crate::operation::create_opportunity::builders::CreateOpportunityFluentBuilder::marketing) / [`set_marketing(Option<Marketing>)`](crate::operation::create_opportunity::builders::CreateOpportunityFluentBuilder::set_marketing):<br>required: **false**<br><p>This object contains marketing details and is optional for an opportunity.</p><br>
    ///   - [`software_revenue(SoftwareRevenue)`](crate::operation::create_opportunity::builders::CreateOpportunityFluentBuilder::software_revenue) / [`set_software_revenue(Option<SoftwareRevenue>)`](crate::operation::create_opportunity::builders::CreateOpportunityFluentBuilder::set_software_revenue):<br>required: **false**<br><p>Specifies details of a customer's procurement terms. This is required only for partners in eligible programs.</p><br>
    ///   - [`client_token(impl Into<String>)`](crate::operation::create_opportunity::builders::CreateOpportunityFluentBuilder::client_token) / [`set_client_token(Option<String>)`](crate::operation::create_opportunity::builders::CreateOpportunityFluentBuilder::set_client_token):<br>required: **true**<br><p>Required to be unique, and should be unchanging, it can be randomly generated or a meaningful string.</p> <p>Default: None</p> <p>Best practice: To help ensure uniqueness and avoid conflicts, use a Universally Unique Identifier (UUID) as the <code>ClientToken</code>. You can use standard libraries from most programming languages to generate this. If you use the same client token, the API returns the following error: "Conflicting client token submitted for a new request body."</p><br>
    ///   - [`life_cycle(LifeCycle)`](crate::operation::create_opportunity::builders::CreateOpportunityFluentBuilder::life_cycle) / [`set_life_cycle(Option<LifeCycle>)`](crate::operation::create_opportunity::builders::CreateOpportunityFluentBuilder::set_life_cycle):<br>required: **false**<br><p>An object that contains lifecycle details for the <code>Opportunity</code>.</p><br>
    ///   - [`origin(OpportunityOrigin)`](crate::operation::create_opportunity::builders::CreateOpportunityFluentBuilder::origin) / [`set_origin(Option<OpportunityOrigin>)`](crate::operation::create_opportunity::builders::CreateOpportunityFluentBuilder::set_origin):<br>required: **false**<br><p>Specifies the origin of the opportunity, indicating if it was sourced from Amazon Web Services or the partner. For all opportunities created with <code>Catalog: AWS</code>, this field must only be <code>Partner Referral</code>. However, when using <code>Catalog: Sandbox</code>, you can set this field to <code>AWS Referral</code> to simulate Amazon Web Services referral creation. This allows Amazon Web Services-originated flows testing in the sandbox catalog.</p><br>
    ///   - [`opportunity_team(Contact)`](crate::operation::create_opportunity::builders::CreateOpportunityFluentBuilder::opportunity_team) / [`set_opportunity_team(Option<Vec::<Contact>>)`](crate::operation::create_opportunity::builders::CreateOpportunityFluentBuilder::set_opportunity_team):<br>required: **false**<br><p>Represents the internal team handling the opportunity. Specify collaborating members of this opportunity who are within the partner's organization.</p><br>
    ///   - [`tags(Tag)`](crate::operation::create_opportunity::builders::CreateOpportunityFluentBuilder::tags) / [`set_tags(Option<Vec::<Tag>>)`](crate::operation::create_opportunity::builders::CreateOpportunityFluentBuilder::set_tags):<br>required: **false**<br><p>A map of the key-value pairs of the tag or tags to assign.</p><br>
    /// - On success, responds with [`CreateOpportunityOutput`](crate::operation::create_opportunity::CreateOpportunityOutput) with field(s):
    ///   - [`id(String)`](crate::operation::create_opportunity::CreateOpportunityOutput::id): <p>Read-only, system-generated <code>Opportunity</code> unique identifier. Amazon Web Services creates this identifier, and it's used for all subsequent opportunity actions, such as updates, associations, and submissions. It helps to ensure that each opportunity is accurately tracked and managed.</p>
    ///   - [`partner_opportunity_identifier(Option<String>)`](crate::operation::create_opportunity::CreateOpportunityOutput::partner_opportunity_identifier): <p>Specifies the opportunity's unique identifier in the partner's CRM system. This value is essential to track and reconcile because it's included in the outbound payload sent back to the partner.</p>
    ///   - [`last_modified_date(Option<DateTime>)`](crate::operation::create_opportunity::CreateOpportunityOutput::last_modified_date): <p><code>DateTime</code> when the opportunity was last modified. When the <code>Opportunity</code> is created, its value is <code>CreatedDate</code>.</p>
    /// - On failure, responds with [`SdkError<CreateOpportunityError>`](crate::operation::create_opportunity::CreateOpportunityError)
    pub fn create_opportunity(&self) -> crate::operation::create_opportunity::builders::CreateOpportunityFluentBuilder {
        crate::operation::create_opportunity::builders::CreateOpportunityFluentBuilder::new(self.handle.clone())
    }
}
