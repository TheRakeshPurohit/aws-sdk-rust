// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`UpdateLocationObjectStorage`](crate::operation::update_location_object_storage::builders::UpdateLocationObjectStorageFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`location_arn(impl Into<String>)`](crate::operation::update_location_object_storage::builders::UpdateLocationObjectStorageFluentBuilder::location_arn) / [`set_location_arn(Option<String>)`](crate::operation::update_location_object_storage::builders::UpdateLocationObjectStorageFluentBuilder::set_location_arn):<br>required: **true**<br><p>Specifies the ARN of the object storage system location that you're updating.</p><br>
    ///   - [`server_port(i32)`](crate::operation::update_location_object_storage::builders::UpdateLocationObjectStorageFluentBuilder::server_port) / [`set_server_port(Option<i32>)`](crate::operation::update_location_object_storage::builders::UpdateLocationObjectStorageFluentBuilder::set_server_port):<br>required: **false**<br><p>Specifies the port that your object storage server accepts inbound network traffic on (for example, port 443).</p><br>
    ///   - [`server_protocol(ObjectStorageServerProtocol)`](crate::operation::update_location_object_storage::builders::UpdateLocationObjectStorageFluentBuilder::server_protocol) / [`set_server_protocol(Option<ObjectStorageServerProtocol>)`](crate::operation::update_location_object_storage::builders::UpdateLocationObjectStorageFluentBuilder::set_server_protocol):<br>required: **false**<br><p>Specifies the protocol that your object storage server uses to communicate.</p><br>
    ///   - [`subdirectory(impl Into<String>)`](crate::operation::update_location_object_storage::builders::UpdateLocationObjectStorageFluentBuilder::subdirectory) / [`set_subdirectory(Option<String>)`](crate::operation::update_location_object_storage::builders::UpdateLocationObjectStorageFluentBuilder::set_subdirectory):<br>required: **false**<br><p>Specifies the object prefix for your object storage server. If this is a source location, DataSync only copies objects with this prefix. If this is a destination location, DataSync writes all objects with this prefix.</p><br>
    ///   - [`server_hostname(impl Into<String>)`](crate::operation::update_location_object_storage::builders::UpdateLocationObjectStorageFluentBuilder::server_hostname) / [`set_server_hostname(Option<String>)`](crate::operation::update_location_object_storage::builders::UpdateLocationObjectStorageFluentBuilder::set_server_hostname):<br>required: **false**<br><p>Specifies the domain name or IP address (IPv4 or IPv6) of the object storage server that your DataSync agent connects to.</p><br>
    ///   - [`access_key(impl Into<String>)`](crate::operation::update_location_object_storage::builders::UpdateLocationObjectStorageFluentBuilder::access_key) / [`set_access_key(Option<String>)`](crate::operation::update_location_object_storage::builders::UpdateLocationObjectStorageFluentBuilder::set_access_key):<br>required: **false**<br><p>Specifies the access key (for example, a user name) if credentials are required to authenticate with the object storage server.</p><br>
    ///   - [`secret_key(impl Into<String>)`](crate::operation::update_location_object_storage::builders::UpdateLocationObjectStorageFluentBuilder::secret_key) / [`set_secret_key(Option<String>)`](crate::operation::update_location_object_storage::builders::UpdateLocationObjectStorageFluentBuilder::set_secret_key):<br>required: **false**<br><p>Specifies the secret key (for example, a password) if credentials are required to authenticate with the object storage server.</p><note>  <p>If you provide a secret using <code>SecretKey</code>, but do not provide secret configuration details using <code>CmkSecretConfig</code> or <code>CustomSecretConfig</code>, then DataSync stores the token using your Amazon Web Services account's Secrets Manager secret.</p> </note><br>
    ///   - [`agent_arns(impl Into<String>)`](crate::operation::update_location_object_storage::builders::UpdateLocationObjectStorageFluentBuilder::agent_arns) / [`set_agent_arns(Option<Vec::<String>>)`](crate::operation::update_location_object_storage::builders::UpdateLocationObjectStorageFluentBuilder::set_agent_arns):<br>required: **false**<br><p>(Optional) Specifies the Amazon Resource Names (ARNs) of the DataSync agents that can connect with your object storage system. If you are setting up an agentless cross-cloud transfer, you do not need to specify a value for this parameter.</p><note>  <p>You cannot add or remove agents from a storage location after you initially create it.</p> </note><br>
    ///   - [`server_certificate(Blob)`](crate::operation::update_location_object_storage::builders::UpdateLocationObjectStorageFluentBuilder::server_certificate) / [`set_server_certificate(Option<Blob>)`](crate::operation::update_location_object_storage::builders::UpdateLocationObjectStorageFluentBuilder::set_server_certificate):<br>required: **false**<br><p>Specifies a certificate chain for DataSync to authenticate with your object storage system if the system uses a private or self-signed certificate authority (CA). You must specify a single <code>.pem</code> file with a full certificate chain (for example, <code>file:///home/user/.ssh/object_storage_certificates.pem</code>).</p> <p>The certificate chain might include:</p> <ul>  <li>   <p>The object storage system's certificate</p></li>  <li>   <p>All intermediate certificates (if there are any)</p></li>  <li>   <p>The root certificate of the signing CA</p></li> </ul> <p>You can concatenate your certificates into a <code>.pem</code> file (which can be up to 32768 bytes before base64 encoding). The following example <code>cat</code> command creates an <code>object_storage_certificates.pem</code> file that includes three certificates:</p> <p><code>cat object_server_certificate.pem intermediate_certificate.pem ca_root_certificate.pem &gt; object_storage_certificates.pem</code></p> <p>To use this parameter, configure <code>ServerProtocol</code> to <code>HTTPS</code>.</p> <p>Updating this parameter doesn't interfere with tasks that you have in progress.</p><br>
    ///   - [`cmk_secret_config(CmkSecretConfig)`](crate::operation::update_location_object_storage::builders::UpdateLocationObjectStorageFluentBuilder::cmk_secret_config) / [`set_cmk_secret_config(Option<CmkSecretConfig>)`](crate::operation::update_location_object_storage::builders::UpdateLocationObjectStorageFluentBuilder::set_cmk_secret_config):<br>required: **false**<br><p>Specifies configuration information for a DataSync-managed secret, such as an authentication token or set of credentials that DataSync uses to access a specific transfer location, and a customer-managed KMS key.</p><br>
    ///   - [`custom_secret_config(CustomSecretConfig)`](crate::operation::update_location_object_storage::builders::UpdateLocationObjectStorageFluentBuilder::custom_secret_config) / [`set_custom_secret_config(Option<CustomSecretConfig>)`](crate::operation::update_location_object_storage::builders::UpdateLocationObjectStorageFluentBuilder::set_custom_secret_config):<br>required: **false**<br><p>Specifies configuration information for a customer-managed secret, such as an authentication token or set of credentials that DataSync uses to access a specific transfer location, and a customer-managed KMS key.</p><br>
    /// - On success, responds with [`UpdateLocationObjectStorageOutput`](crate::operation::update_location_object_storage::UpdateLocationObjectStorageOutput)
    /// - On failure, responds with [`SdkError<UpdateLocationObjectStorageError>`](crate::operation::update_location_object_storage::UpdateLocationObjectStorageError)
    pub fn update_location_object_storage(
        &self,
    ) -> crate::operation::update_location_object_storage::builders::UpdateLocationObjectStorageFluentBuilder {
        crate::operation::update_location_object_storage::builders::UpdateLocationObjectStorageFluentBuilder::new(self.handle.clone())
    }
}
