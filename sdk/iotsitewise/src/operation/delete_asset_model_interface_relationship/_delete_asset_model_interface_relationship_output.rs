// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct DeleteAssetModelInterfaceRelationshipOutput {
    /// <p>The ID of the asset model.</p>
    pub asset_model_id: ::std::string::String,
    /// <p>The ID of the interface asset model.</p>
    pub interface_asset_model_id: ::std::string::String,
    /// <p>The ARN of the asset model, which has the following format. <code>arn:${Partition}:iotsitewise:${Region}:${Account}:asset-model/${AssetModelId}</code></p>
    pub asset_model_arn: ::std::string::String,
    /// <p>Contains current status information for an asset model. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/asset-and-model-states.html">Asset and model states</a> in the <i>IoT SiteWise User Guide</i>.</p>
    pub asset_model_status: ::std::option::Option<crate::types::AssetModelStatus>,
    _request_id: Option<String>,
}
impl DeleteAssetModelInterfaceRelationshipOutput {
    /// <p>The ID of the asset model.</p>
    pub fn asset_model_id(&self) -> &str {
        use std::ops::Deref;
        self.asset_model_id.deref()
    }
    /// <p>The ID of the interface asset model.</p>
    pub fn interface_asset_model_id(&self) -> &str {
        use std::ops::Deref;
        self.interface_asset_model_id.deref()
    }
    /// <p>The ARN of the asset model, which has the following format. <code>arn:${Partition}:iotsitewise:${Region}:${Account}:asset-model/${AssetModelId}</code></p>
    pub fn asset_model_arn(&self) -> &str {
        use std::ops::Deref;
        self.asset_model_arn.deref()
    }
    /// <p>Contains current status information for an asset model. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/asset-and-model-states.html">Asset and model states</a> in the <i>IoT SiteWise User Guide</i>.</p>
    pub fn asset_model_status(&self) -> ::std::option::Option<&crate::types::AssetModelStatus> {
        self.asset_model_status.as_ref()
    }
}
impl ::aws_types::request_id::RequestId for DeleteAssetModelInterfaceRelationshipOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl DeleteAssetModelInterfaceRelationshipOutput {
    /// Creates a new builder-style object to manufacture [`DeleteAssetModelInterfaceRelationshipOutput`](crate::operation::delete_asset_model_interface_relationship::DeleteAssetModelInterfaceRelationshipOutput).
    pub fn builder() -> crate::operation::delete_asset_model_interface_relationship::builders::DeleteAssetModelInterfaceRelationshipOutputBuilder {
        crate::operation::delete_asset_model_interface_relationship::builders::DeleteAssetModelInterfaceRelationshipOutputBuilder::default()
    }
}

/// A builder for [`DeleteAssetModelInterfaceRelationshipOutput`](crate::operation::delete_asset_model_interface_relationship::DeleteAssetModelInterfaceRelationshipOutput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct DeleteAssetModelInterfaceRelationshipOutputBuilder {
    pub(crate) asset_model_id: ::std::option::Option<::std::string::String>,
    pub(crate) interface_asset_model_id: ::std::option::Option<::std::string::String>,
    pub(crate) asset_model_arn: ::std::option::Option<::std::string::String>,
    pub(crate) asset_model_status: ::std::option::Option<crate::types::AssetModelStatus>,
    _request_id: Option<String>,
}
impl DeleteAssetModelInterfaceRelationshipOutputBuilder {
    /// <p>The ID of the asset model.</p>
    /// This field is required.
    pub fn asset_model_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.asset_model_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The ID of the asset model.</p>
    pub fn set_asset_model_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.asset_model_id = input;
        self
    }
    /// <p>The ID of the asset model.</p>
    pub fn get_asset_model_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.asset_model_id
    }
    /// <p>The ID of the interface asset model.</p>
    /// This field is required.
    pub fn interface_asset_model_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.interface_asset_model_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The ID of the interface asset model.</p>
    pub fn set_interface_asset_model_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.interface_asset_model_id = input;
        self
    }
    /// <p>The ID of the interface asset model.</p>
    pub fn get_interface_asset_model_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.interface_asset_model_id
    }
    /// <p>The ARN of the asset model, which has the following format. <code>arn:${Partition}:iotsitewise:${Region}:${Account}:asset-model/${AssetModelId}</code></p>
    /// This field is required.
    pub fn asset_model_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.asset_model_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The ARN of the asset model, which has the following format. <code>arn:${Partition}:iotsitewise:${Region}:${Account}:asset-model/${AssetModelId}</code></p>
    pub fn set_asset_model_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.asset_model_arn = input;
        self
    }
    /// <p>The ARN of the asset model, which has the following format. <code>arn:${Partition}:iotsitewise:${Region}:${Account}:asset-model/${AssetModelId}</code></p>
    pub fn get_asset_model_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.asset_model_arn
    }
    /// <p>Contains current status information for an asset model. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/asset-and-model-states.html">Asset and model states</a> in the <i>IoT SiteWise User Guide</i>.</p>
    /// This field is required.
    pub fn asset_model_status(mut self, input: crate::types::AssetModelStatus) -> Self {
        self.asset_model_status = ::std::option::Option::Some(input);
        self
    }
    /// <p>Contains current status information for an asset model. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/asset-and-model-states.html">Asset and model states</a> in the <i>IoT SiteWise User Guide</i>.</p>
    pub fn set_asset_model_status(mut self, input: ::std::option::Option<crate::types::AssetModelStatus>) -> Self {
        self.asset_model_status = input;
        self
    }
    /// <p>Contains current status information for an asset model. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/asset-and-model-states.html">Asset and model states</a> in the <i>IoT SiteWise User Guide</i>.</p>
    pub fn get_asset_model_status(&self) -> &::std::option::Option<crate::types::AssetModelStatus> {
        &self.asset_model_status
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`DeleteAssetModelInterfaceRelationshipOutput`](crate::operation::delete_asset_model_interface_relationship::DeleteAssetModelInterfaceRelationshipOutput).
    /// This method will fail if any of the following fields are not set:
    /// - [`asset_model_id`](crate::operation::delete_asset_model_interface_relationship::builders::DeleteAssetModelInterfaceRelationshipOutputBuilder::asset_model_id)
    /// - [`interface_asset_model_id`](crate::operation::delete_asset_model_interface_relationship::builders::DeleteAssetModelInterfaceRelationshipOutputBuilder::interface_asset_model_id)
    /// - [`asset_model_arn`](crate::operation::delete_asset_model_interface_relationship::builders::DeleteAssetModelInterfaceRelationshipOutputBuilder::asset_model_arn)
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::delete_asset_model_interface_relationship::DeleteAssetModelInterfaceRelationshipOutput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(
            crate::operation::delete_asset_model_interface_relationship::DeleteAssetModelInterfaceRelationshipOutput {
                asset_model_id: self.asset_model_id.ok_or_else(|| {
                    ::aws_smithy_types::error::operation::BuildError::missing_field(
                        "asset_model_id",
                        "asset_model_id was not specified but it is required when building DeleteAssetModelInterfaceRelationshipOutput",
                    )
                })?,
                interface_asset_model_id: self.interface_asset_model_id.ok_or_else(|| {
                    ::aws_smithy_types::error::operation::BuildError::missing_field(
                        "interface_asset_model_id",
                        "interface_asset_model_id was not specified but it is required when building DeleteAssetModelInterfaceRelationshipOutput",
                    )
                })?,
                asset_model_arn: self.asset_model_arn.ok_or_else(|| {
                    ::aws_smithy_types::error::operation::BuildError::missing_field(
                        "asset_model_arn",
                        "asset_model_arn was not specified but it is required when building DeleteAssetModelInterfaceRelationshipOutput",
                    )
                })?,
                asset_model_status: self.asset_model_status,
                _request_id: self._request_id,
            },
        )
    }
}
