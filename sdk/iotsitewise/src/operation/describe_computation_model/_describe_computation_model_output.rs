// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct DescribeComputationModelOutput {
    /// <p>The ID of the computation model.</p>
    pub computation_model_id: ::std::string::String,
    /// <p>The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">ARN</a> of the computation model, which has the following format.</p>
    /// <p><code>arn:${Partition}:iotsitewise:${Region}:${Account}:computation-model/${ComputationModelId}</code></p>
    pub computation_model_arn: ::std::string::String,
    /// <p>The name of the computation model.</p>
    pub computation_model_name: ::std::string::String,
    /// <p>The description of the computation model.</p>
    pub computation_model_description: ::std::option::Option<::std::string::String>,
    /// <p>The configuration for the computation model.</p>
    pub computation_model_configuration: ::std::option::Option<crate::types::ComputationModelConfiguration>,
    /// <p>The data binding for the computation model. Key is a variable name defined in configuration. Value is a <code>ComputationModelDataBindingValue</code> referenced by the variable.</p>
    pub computation_model_data_binding: ::std::collections::HashMap<::std::string::String, crate::types::ComputationModelDataBindingValue>,
    /// <p>The model creation date, in Unix epoch time.</p>
    pub computation_model_creation_date: ::aws_smithy_types::DateTime,
    /// <p>The date the model was last updated, in Unix epoch time.</p>
    pub computation_model_last_update_date: ::aws_smithy_types::DateTime,
    /// <p>The current status of the asset model, which contains a state and an error message if any.</p>
    pub computation_model_status: ::std::option::Option<crate::types::ComputationModelStatus>,
    /// <p>The version of the computation model.</p>
    pub computation_model_version: ::std::string::String,
    /// <p>The available actions for this computation model.</p>
    pub action_definitions: ::std::vec::Vec<crate::types::ActionDefinition>,
    _request_id: Option<String>,
}
impl DescribeComputationModelOutput {
    /// <p>The ID of the computation model.</p>
    pub fn computation_model_id(&self) -> &str {
        use std::ops::Deref;
        self.computation_model_id.deref()
    }
    /// <p>The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">ARN</a> of the computation model, which has the following format.</p>
    /// <p><code>arn:${Partition}:iotsitewise:${Region}:${Account}:computation-model/${ComputationModelId}</code></p>
    pub fn computation_model_arn(&self) -> &str {
        use std::ops::Deref;
        self.computation_model_arn.deref()
    }
    /// <p>The name of the computation model.</p>
    pub fn computation_model_name(&self) -> &str {
        use std::ops::Deref;
        self.computation_model_name.deref()
    }
    /// <p>The description of the computation model.</p>
    pub fn computation_model_description(&self) -> ::std::option::Option<&str> {
        self.computation_model_description.as_deref()
    }
    /// <p>The configuration for the computation model.</p>
    pub fn computation_model_configuration(&self) -> ::std::option::Option<&crate::types::ComputationModelConfiguration> {
        self.computation_model_configuration.as_ref()
    }
    /// <p>The data binding for the computation model. Key is a variable name defined in configuration. Value is a <code>ComputationModelDataBindingValue</code> referenced by the variable.</p>
    pub fn computation_model_data_binding(
        &self,
    ) -> &::std::collections::HashMap<::std::string::String, crate::types::ComputationModelDataBindingValue> {
        &self.computation_model_data_binding
    }
    /// <p>The model creation date, in Unix epoch time.</p>
    pub fn computation_model_creation_date(&self) -> &::aws_smithy_types::DateTime {
        &self.computation_model_creation_date
    }
    /// <p>The date the model was last updated, in Unix epoch time.</p>
    pub fn computation_model_last_update_date(&self) -> &::aws_smithy_types::DateTime {
        &self.computation_model_last_update_date
    }
    /// <p>The current status of the asset model, which contains a state and an error message if any.</p>
    pub fn computation_model_status(&self) -> ::std::option::Option<&crate::types::ComputationModelStatus> {
        self.computation_model_status.as_ref()
    }
    /// <p>The version of the computation model.</p>
    pub fn computation_model_version(&self) -> &str {
        use std::ops::Deref;
        self.computation_model_version.deref()
    }
    /// <p>The available actions for this computation model.</p>
    pub fn action_definitions(&self) -> &[crate::types::ActionDefinition] {
        use std::ops::Deref;
        self.action_definitions.deref()
    }
}
impl ::aws_types::request_id::RequestId for DescribeComputationModelOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl DescribeComputationModelOutput {
    /// Creates a new builder-style object to manufacture [`DescribeComputationModelOutput`](crate::operation::describe_computation_model::DescribeComputationModelOutput).
    pub fn builder() -> crate::operation::describe_computation_model::builders::DescribeComputationModelOutputBuilder {
        crate::operation::describe_computation_model::builders::DescribeComputationModelOutputBuilder::default()
    }
}

/// A builder for [`DescribeComputationModelOutput`](crate::operation::describe_computation_model::DescribeComputationModelOutput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct DescribeComputationModelOutputBuilder {
    pub(crate) computation_model_id: ::std::option::Option<::std::string::String>,
    pub(crate) computation_model_arn: ::std::option::Option<::std::string::String>,
    pub(crate) computation_model_name: ::std::option::Option<::std::string::String>,
    pub(crate) computation_model_description: ::std::option::Option<::std::string::String>,
    pub(crate) computation_model_configuration: ::std::option::Option<crate::types::ComputationModelConfiguration>,
    pub(crate) computation_model_data_binding:
        ::std::option::Option<::std::collections::HashMap<::std::string::String, crate::types::ComputationModelDataBindingValue>>,
    pub(crate) computation_model_creation_date: ::std::option::Option<::aws_smithy_types::DateTime>,
    pub(crate) computation_model_last_update_date: ::std::option::Option<::aws_smithy_types::DateTime>,
    pub(crate) computation_model_status: ::std::option::Option<crate::types::ComputationModelStatus>,
    pub(crate) computation_model_version: ::std::option::Option<::std::string::String>,
    pub(crate) action_definitions: ::std::option::Option<::std::vec::Vec<crate::types::ActionDefinition>>,
    _request_id: Option<String>,
}
impl DescribeComputationModelOutputBuilder {
    /// <p>The ID of the computation model.</p>
    /// This field is required.
    pub fn computation_model_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.computation_model_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The ID of the computation model.</p>
    pub fn set_computation_model_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.computation_model_id = input;
        self
    }
    /// <p>The ID of the computation model.</p>
    pub fn get_computation_model_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.computation_model_id
    }
    /// <p>The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">ARN</a> of the computation model, which has the following format.</p>
    /// <p><code>arn:${Partition}:iotsitewise:${Region}:${Account}:computation-model/${ComputationModelId}</code></p>
    /// This field is required.
    pub fn computation_model_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.computation_model_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">ARN</a> of the computation model, which has the following format.</p>
    /// <p><code>arn:${Partition}:iotsitewise:${Region}:${Account}:computation-model/${ComputationModelId}</code></p>
    pub fn set_computation_model_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.computation_model_arn = input;
        self
    }
    /// <p>The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">ARN</a> of the computation model, which has the following format.</p>
    /// <p><code>arn:${Partition}:iotsitewise:${Region}:${Account}:computation-model/${ComputationModelId}</code></p>
    pub fn get_computation_model_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.computation_model_arn
    }
    /// <p>The name of the computation model.</p>
    /// This field is required.
    pub fn computation_model_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.computation_model_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of the computation model.</p>
    pub fn set_computation_model_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.computation_model_name = input;
        self
    }
    /// <p>The name of the computation model.</p>
    pub fn get_computation_model_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.computation_model_name
    }
    /// <p>The description of the computation model.</p>
    pub fn computation_model_description(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.computation_model_description = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The description of the computation model.</p>
    pub fn set_computation_model_description(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.computation_model_description = input;
        self
    }
    /// <p>The description of the computation model.</p>
    pub fn get_computation_model_description(&self) -> &::std::option::Option<::std::string::String> {
        &self.computation_model_description
    }
    /// <p>The configuration for the computation model.</p>
    /// This field is required.
    pub fn computation_model_configuration(mut self, input: crate::types::ComputationModelConfiguration) -> Self {
        self.computation_model_configuration = ::std::option::Option::Some(input);
        self
    }
    /// <p>The configuration for the computation model.</p>
    pub fn set_computation_model_configuration(mut self, input: ::std::option::Option<crate::types::ComputationModelConfiguration>) -> Self {
        self.computation_model_configuration = input;
        self
    }
    /// <p>The configuration for the computation model.</p>
    pub fn get_computation_model_configuration(&self) -> &::std::option::Option<crate::types::ComputationModelConfiguration> {
        &self.computation_model_configuration
    }
    /// Adds a key-value pair to `computation_model_data_binding`.
    ///
    /// To override the contents of this collection use [`set_computation_model_data_binding`](Self::set_computation_model_data_binding).
    ///
    /// <p>The data binding for the computation model. Key is a variable name defined in configuration. Value is a <code>ComputationModelDataBindingValue</code> referenced by the variable.</p>
    pub fn computation_model_data_binding(
        mut self,
        k: impl ::std::convert::Into<::std::string::String>,
        v: crate::types::ComputationModelDataBindingValue,
    ) -> Self {
        let mut hash_map = self.computation_model_data_binding.unwrap_or_default();
        hash_map.insert(k.into(), v);
        self.computation_model_data_binding = ::std::option::Option::Some(hash_map);
        self
    }
    /// <p>The data binding for the computation model. Key is a variable name defined in configuration. Value is a <code>ComputationModelDataBindingValue</code> referenced by the variable.</p>
    pub fn set_computation_model_data_binding(
        mut self,
        input: ::std::option::Option<::std::collections::HashMap<::std::string::String, crate::types::ComputationModelDataBindingValue>>,
    ) -> Self {
        self.computation_model_data_binding = input;
        self
    }
    /// <p>The data binding for the computation model. Key is a variable name defined in configuration. Value is a <code>ComputationModelDataBindingValue</code> referenced by the variable.</p>
    pub fn get_computation_model_data_binding(
        &self,
    ) -> &::std::option::Option<::std::collections::HashMap<::std::string::String, crate::types::ComputationModelDataBindingValue>> {
        &self.computation_model_data_binding
    }
    /// <p>The model creation date, in Unix epoch time.</p>
    /// This field is required.
    pub fn computation_model_creation_date(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.computation_model_creation_date = ::std::option::Option::Some(input);
        self
    }
    /// <p>The model creation date, in Unix epoch time.</p>
    pub fn set_computation_model_creation_date(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.computation_model_creation_date = input;
        self
    }
    /// <p>The model creation date, in Unix epoch time.</p>
    pub fn get_computation_model_creation_date(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.computation_model_creation_date
    }
    /// <p>The date the model was last updated, in Unix epoch time.</p>
    /// This field is required.
    pub fn computation_model_last_update_date(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.computation_model_last_update_date = ::std::option::Option::Some(input);
        self
    }
    /// <p>The date the model was last updated, in Unix epoch time.</p>
    pub fn set_computation_model_last_update_date(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.computation_model_last_update_date = input;
        self
    }
    /// <p>The date the model was last updated, in Unix epoch time.</p>
    pub fn get_computation_model_last_update_date(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.computation_model_last_update_date
    }
    /// <p>The current status of the asset model, which contains a state and an error message if any.</p>
    /// This field is required.
    pub fn computation_model_status(mut self, input: crate::types::ComputationModelStatus) -> Self {
        self.computation_model_status = ::std::option::Option::Some(input);
        self
    }
    /// <p>The current status of the asset model, which contains a state and an error message if any.</p>
    pub fn set_computation_model_status(mut self, input: ::std::option::Option<crate::types::ComputationModelStatus>) -> Self {
        self.computation_model_status = input;
        self
    }
    /// <p>The current status of the asset model, which contains a state and an error message if any.</p>
    pub fn get_computation_model_status(&self) -> &::std::option::Option<crate::types::ComputationModelStatus> {
        &self.computation_model_status
    }
    /// <p>The version of the computation model.</p>
    /// This field is required.
    pub fn computation_model_version(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.computation_model_version = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The version of the computation model.</p>
    pub fn set_computation_model_version(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.computation_model_version = input;
        self
    }
    /// <p>The version of the computation model.</p>
    pub fn get_computation_model_version(&self) -> &::std::option::Option<::std::string::String> {
        &self.computation_model_version
    }
    /// Appends an item to `action_definitions`.
    ///
    /// To override the contents of this collection use [`set_action_definitions`](Self::set_action_definitions).
    ///
    /// <p>The available actions for this computation model.</p>
    pub fn action_definitions(mut self, input: crate::types::ActionDefinition) -> Self {
        let mut v = self.action_definitions.unwrap_or_default();
        v.push(input);
        self.action_definitions = ::std::option::Option::Some(v);
        self
    }
    /// <p>The available actions for this computation model.</p>
    pub fn set_action_definitions(mut self, input: ::std::option::Option<::std::vec::Vec<crate::types::ActionDefinition>>) -> Self {
        self.action_definitions = input;
        self
    }
    /// <p>The available actions for this computation model.</p>
    pub fn get_action_definitions(&self) -> &::std::option::Option<::std::vec::Vec<crate::types::ActionDefinition>> {
        &self.action_definitions
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`DescribeComputationModelOutput`](crate::operation::describe_computation_model::DescribeComputationModelOutput).
    /// This method will fail if any of the following fields are not set:
    /// - [`computation_model_id`](crate::operation::describe_computation_model::builders::DescribeComputationModelOutputBuilder::computation_model_id)
    /// - [`computation_model_arn`](crate::operation::describe_computation_model::builders::DescribeComputationModelOutputBuilder::computation_model_arn)
    /// - [`computation_model_name`](crate::operation::describe_computation_model::builders::DescribeComputationModelOutputBuilder::computation_model_name)
    /// - [`computation_model_data_binding`](crate::operation::describe_computation_model::builders::DescribeComputationModelOutputBuilder::computation_model_data_binding)
    /// - [`computation_model_creation_date`](crate::operation::describe_computation_model::builders::DescribeComputationModelOutputBuilder::computation_model_creation_date)
    /// - [`computation_model_last_update_date`](crate::operation::describe_computation_model::builders::DescribeComputationModelOutputBuilder::computation_model_last_update_date)
    /// - [`computation_model_version`](crate::operation::describe_computation_model::builders::DescribeComputationModelOutputBuilder::computation_model_version)
    /// - [`action_definitions`](crate::operation::describe_computation_model::builders::DescribeComputationModelOutputBuilder::action_definitions)
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::describe_computation_model::DescribeComputationModelOutput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(crate::operation::describe_computation_model::DescribeComputationModelOutput {
            computation_model_id: self.computation_model_id.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "computation_model_id",
                    "computation_model_id was not specified but it is required when building DescribeComputationModelOutput",
                )
            })?,
            computation_model_arn: self.computation_model_arn.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "computation_model_arn",
                    "computation_model_arn was not specified but it is required when building DescribeComputationModelOutput",
                )
            })?,
            computation_model_name: self.computation_model_name.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "computation_model_name",
                    "computation_model_name was not specified but it is required when building DescribeComputationModelOutput",
                )
            })?,
            computation_model_description: self.computation_model_description,
            computation_model_configuration: self.computation_model_configuration,
            computation_model_data_binding: self.computation_model_data_binding.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "computation_model_data_binding",
                    "computation_model_data_binding was not specified but it is required when building DescribeComputationModelOutput",
                )
            })?,
            computation_model_creation_date: self.computation_model_creation_date.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "computation_model_creation_date",
                    "computation_model_creation_date was not specified but it is required when building DescribeComputationModelOutput",
                )
            })?,
            computation_model_last_update_date: self.computation_model_last_update_date.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "computation_model_last_update_date",
                    "computation_model_last_update_date was not specified but it is required when building DescribeComputationModelOutput",
                )
            })?,
            computation_model_status: self.computation_model_status,
            computation_model_version: self.computation_model_version.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "computation_model_version",
                    "computation_model_version was not specified but it is required when building DescribeComputationModelOutput",
                )
            })?,
            action_definitions: self.action_definitions.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "action_definitions",
                    "action_definitions was not specified but it is required when building DescribeComputationModelOutput",
                )
            })?,
            _request_id: self._request_id,
        })
    }
}
