// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct DescribeComputationModelExecutionSummaryOutput {
    /// <p>The ID of the computation model.</p>
    pub computation_model_id: ::std::string::String,
    /// <p>The detailed resource this execution summary resolves to.</p>
    pub resolve_to: ::std::option::Option<crate::types::ResolveTo>,
    /// <p>Contains the execution summary of the computation model.</p>
    pub computation_model_execution_summary: ::std::collections::HashMap<::std::string::String, ::std::string::String>,
    _request_id: Option<String>,
}
impl DescribeComputationModelExecutionSummaryOutput {
    /// <p>The ID of the computation model.</p>
    pub fn computation_model_id(&self) -> &str {
        use std::ops::Deref;
        self.computation_model_id.deref()
    }
    /// <p>The detailed resource this execution summary resolves to.</p>
    pub fn resolve_to(&self) -> ::std::option::Option<&crate::types::ResolveTo> {
        self.resolve_to.as_ref()
    }
    /// <p>Contains the execution summary of the computation model.</p>
    pub fn computation_model_execution_summary(&self) -> &::std::collections::HashMap<::std::string::String, ::std::string::String> {
        &self.computation_model_execution_summary
    }
}
impl ::aws_types::request_id::RequestId for DescribeComputationModelExecutionSummaryOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl DescribeComputationModelExecutionSummaryOutput {
    /// Creates a new builder-style object to manufacture [`DescribeComputationModelExecutionSummaryOutput`](crate::operation::describe_computation_model_execution_summary::DescribeComputationModelExecutionSummaryOutput).
    pub fn builder() -> crate::operation::describe_computation_model_execution_summary::builders::DescribeComputationModelExecutionSummaryOutputBuilder
    {
        crate::operation::describe_computation_model_execution_summary::builders::DescribeComputationModelExecutionSummaryOutputBuilder::default()
    }
}

/// A builder for [`DescribeComputationModelExecutionSummaryOutput`](crate::operation::describe_computation_model_execution_summary::DescribeComputationModelExecutionSummaryOutput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct DescribeComputationModelExecutionSummaryOutputBuilder {
    pub(crate) computation_model_id: ::std::option::Option<::std::string::String>,
    pub(crate) resolve_to: ::std::option::Option<crate::types::ResolveTo>,
    pub(crate) computation_model_execution_summary: ::std::option::Option<::std::collections::HashMap<::std::string::String, ::std::string::String>>,
    _request_id: Option<String>,
}
impl DescribeComputationModelExecutionSummaryOutputBuilder {
    /// <p>The ID of the computation model.</p>
    /// This field is required.
    pub fn computation_model_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.computation_model_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The ID of the computation model.</p>
    pub fn set_computation_model_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.computation_model_id = input;
        self
    }
    /// <p>The ID of the computation model.</p>
    pub fn get_computation_model_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.computation_model_id
    }
    /// <p>The detailed resource this execution summary resolves to.</p>
    pub fn resolve_to(mut self, input: crate::types::ResolveTo) -> Self {
        self.resolve_to = ::std::option::Option::Some(input);
        self
    }
    /// <p>The detailed resource this execution summary resolves to.</p>
    pub fn set_resolve_to(mut self, input: ::std::option::Option<crate::types::ResolveTo>) -> Self {
        self.resolve_to = input;
        self
    }
    /// <p>The detailed resource this execution summary resolves to.</p>
    pub fn get_resolve_to(&self) -> &::std::option::Option<crate::types::ResolveTo> {
        &self.resolve_to
    }
    /// Adds a key-value pair to `computation_model_execution_summary`.
    ///
    /// To override the contents of this collection use [`set_computation_model_execution_summary`](Self::set_computation_model_execution_summary).
    ///
    /// <p>Contains the execution summary of the computation model.</p>
    pub fn computation_model_execution_summary(
        mut self,
        k: impl ::std::convert::Into<::std::string::String>,
        v: impl ::std::convert::Into<::std::string::String>,
    ) -> Self {
        let mut hash_map = self.computation_model_execution_summary.unwrap_or_default();
        hash_map.insert(k.into(), v.into());
        self.computation_model_execution_summary = ::std::option::Option::Some(hash_map);
        self
    }
    /// <p>Contains the execution summary of the computation model.</p>
    pub fn set_computation_model_execution_summary(
        mut self,
        input: ::std::option::Option<::std::collections::HashMap<::std::string::String, ::std::string::String>>,
    ) -> Self {
        self.computation_model_execution_summary = input;
        self
    }
    /// <p>Contains the execution summary of the computation model.</p>
    pub fn get_computation_model_execution_summary(
        &self,
    ) -> &::std::option::Option<::std::collections::HashMap<::std::string::String, ::std::string::String>> {
        &self.computation_model_execution_summary
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`DescribeComputationModelExecutionSummaryOutput`](crate::operation::describe_computation_model_execution_summary::DescribeComputationModelExecutionSummaryOutput).
    /// This method will fail if any of the following fields are not set:
    /// - [`computation_model_id`](crate::operation::describe_computation_model_execution_summary::builders::DescribeComputationModelExecutionSummaryOutputBuilder::computation_model_id)
    /// - [`computation_model_execution_summary`](crate::operation::describe_computation_model_execution_summary::builders::DescribeComputationModelExecutionSummaryOutputBuilder::computation_model_execution_summary)
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::describe_computation_model_execution_summary::DescribeComputationModelExecutionSummaryOutput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(
            crate::operation::describe_computation_model_execution_summary::DescribeComputationModelExecutionSummaryOutput {
                computation_model_id: self.computation_model_id
                    .ok_or_else(||
                        ::aws_smithy_types::error::operation::BuildError::missing_field("computation_model_id", "computation_model_id was not specified but it is required when building DescribeComputationModelExecutionSummaryOutput")
                    )?
                ,
                resolve_to: self.resolve_to
                ,
                computation_model_execution_summary: self.computation_model_execution_summary
                    .ok_or_else(||
                        ::aws_smithy_types::error::operation::BuildError::missing_field("computation_model_execution_summary", "computation_model_execution_summary was not specified but it is required when building DescribeComputationModelExecutionSummaryOutput")
                    )?
                ,
                _request_id: self._request_id,
            }
        )
    }
}
