// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ListInterfaceRelationshipsInput {
    /// <p>The ID of the interface asset model. This can be either the actual ID in UUID format, or else externalId: followed by the external ID.</p>
    pub interface_asset_model_id: ::std::option::Option<::std::string::String>,
    /// <p>The token to be used for the next set of paginated results.</p>
    pub next_token: ::std::option::Option<::std::string::String>,
    /// <p>The maximum number of results to return for each paginated request. Default: 50</p>
    pub max_results: ::std::option::Option<i32>,
}
impl ListInterfaceRelationshipsInput {
    /// <p>The ID of the interface asset model. This can be either the actual ID in UUID format, or else externalId: followed by the external ID.</p>
    pub fn interface_asset_model_id(&self) -> ::std::option::Option<&str> {
        self.interface_asset_model_id.as_deref()
    }
    /// <p>The token to be used for the next set of paginated results.</p>
    pub fn next_token(&self) -> ::std::option::Option<&str> {
        self.next_token.as_deref()
    }
    /// <p>The maximum number of results to return for each paginated request. Default: 50</p>
    pub fn max_results(&self) -> ::std::option::Option<i32> {
        self.max_results
    }
}
impl ListInterfaceRelationshipsInput {
    /// Creates a new builder-style object to manufacture [`ListInterfaceRelationshipsInput`](crate::operation::list_interface_relationships::ListInterfaceRelationshipsInput).
    pub fn builder() -> crate::operation::list_interface_relationships::builders::ListInterfaceRelationshipsInputBuilder {
        crate::operation::list_interface_relationships::builders::ListInterfaceRelationshipsInputBuilder::default()
    }
}

/// A builder for [`ListInterfaceRelationshipsInput`](crate::operation::list_interface_relationships::ListInterfaceRelationshipsInput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct ListInterfaceRelationshipsInputBuilder {
    pub(crate) interface_asset_model_id: ::std::option::Option<::std::string::String>,
    pub(crate) next_token: ::std::option::Option<::std::string::String>,
    pub(crate) max_results: ::std::option::Option<i32>,
}
impl ListInterfaceRelationshipsInputBuilder {
    /// <p>The ID of the interface asset model. This can be either the actual ID in UUID format, or else externalId: followed by the external ID.</p>
    /// This field is required.
    pub fn interface_asset_model_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.interface_asset_model_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The ID of the interface asset model. This can be either the actual ID in UUID format, or else externalId: followed by the external ID.</p>
    pub fn set_interface_asset_model_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.interface_asset_model_id = input;
        self
    }
    /// <p>The ID of the interface asset model. This can be either the actual ID in UUID format, or else externalId: followed by the external ID.</p>
    pub fn get_interface_asset_model_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.interface_asset_model_id
    }
    /// <p>The token to be used for the next set of paginated results.</p>
    pub fn next_token(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.next_token = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The token to be used for the next set of paginated results.</p>
    pub fn set_next_token(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.next_token = input;
        self
    }
    /// <p>The token to be used for the next set of paginated results.</p>
    pub fn get_next_token(&self) -> &::std::option::Option<::std::string::String> {
        &self.next_token
    }
    /// <p>The maximum number of results to return for each paginated request. Default: 50</p>
    pub fn max_results(mut self, input: i32) -> Self {
        self.max_results = ::std::option::Option::Some(input);
        self
    }
    /// <p>The maximum number of results to return for each paginated request. Default: 50</p>
    pub fn set_max_results(mut self, input: ::std::option::Option<i32>) -> Self {
        self.max_results = input;
        self
    }
    /// <p>The maximum number of results to return for each paginated request. Default: 50</p>
    pub fn get_max_results(&self) -> &::std::option::Option<i32> {
        &self.max_results
    }
    /// Consumes the builder and constructs a [`ListInterfaceRelationshipsInput`](crate::operation::list_interface_relationships::ListInterfaceRelationshipsInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::list_interface_relationships::ListInterfaceRelationshipsInput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(crate::operation::list_interface_relationships::ListInterfaceRelationshipsInput {
            interface_asset_model_id: self.interface_asset_model_id,
            next_token: self.next_token,
            max_results: self.max_results,
        })
    }
}
