// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Contains information about an <code>assetModelProperty</code> binding value.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct AssetModelPropertyBindingValue {
    /// <p>The ID of the asset model, in UUID format.</p>
    pub asset_model_id: ::std::string::String,
    /// <p>The ID of the asset model property used in data binding value.</p>
    pub property_id: ::std::string::String,
}
impl AssetModelPropertyBindingValue {
    /// <p>The ID of the asset model, in UUID format.</p>
    pub fn asset_model_id(&self) -> &str {
        use std::ops::Deref;
        self.asset_model_id.deref()
    }
    /// <p>The ID of the asset model property used in data binding value.</p>
    pub fn property_id(&self) -> &str {
        use std::ops::Deref;
        self.property_id.deref()
    }
}
impl AssetModelPropertyBindingValue {
    /// Creates a new builder-style object to manufacture [`AssetModelPropertyBindingValue`](crate::types::AssetModelPropertyBindingValue).
    pub fn builder() -> crate::types::builders::AssetModelPropertyBindingValueBuilder {
        crate::types::builders::AssetModelPropertyBindingValueBuilder::default()
    }
}

/// A builder for [`AssetModelPropertyBindingValue`](crate::types::AssetModelPropertyBindingValue).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct AssetModelPropertyBindingValueBuilder {
    pub(crate) asset_model_id: ::std::option::Option<::std::string::String>,
    pub(crate) property_id: ::std::option::Option<::std::string::String>,
}
impl AssetModelPropertyBindingValueBuilder {
    /// <p>The ID of the asset model, in UUID format.</p>
    /// This field is required.
    pub fn asset_model_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.asset_model_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The ID of the asset model, in UUID format.</p>
    pub fn set_asset_model_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.asset_model_id = input;
        self
    }
    /// <p>The ID of the asset model, in UUID format.</p>
    pub fn get_asset_model_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.asset_model_id
    }
    /// <p>The ID of the asset model property used in data binding value.</p>
    /// This field is required.
    pub fn property_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.property_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The ID of the asset model property used in data binding value.</p>
    pub fn set_property_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.property_id = input;
        self
    }
    /// <p>The ID of the asset model property used in data binding value.</p>
    pub fn get_property_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.property_id
    }
    /// Consumes the builder and constructs a [`AssetModelPropertyBindingValue`](crate::types::AssetModelPropertyBindingValue).
    /// This method will fail if any of the following fields are not set:
    /// - [`asset_model_id`](crate::types::builders::AssetModelPropertyBindingValueBuilder::asset_model_id)
    /// - [`property_id`](crate::types::builders::AssetModelPropertyBindingValueBuilder::property_id)
    pub fn build(self) -> ::std::result::Result<crate::types::AssetModelPropertyBindingValue, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::AssetModelPropertyBindingValue {
            asset_model_id: self.asset_model_id.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "asset_model_id",
                    "asset_model_id was not specified but it is required when building AssetModelPropertyBindingValue",
                )
            })?,
            property_id: self.property_id.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "property_id",
                    "property_id was not specified but it is required when building AssetModelPropertyBindingValue",
                )
            })?,
        })
    }
}
