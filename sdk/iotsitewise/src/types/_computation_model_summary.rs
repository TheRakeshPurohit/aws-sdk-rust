// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Contains a summary of a computation model.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ComputationModelSummary {
    /// <p>The ID of the computation model.</p>
    pub id: ::std::string::String,
    /// <p>The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">ARN</a> of the computation model, which has the following format.</p>
    /// <p><code>arn:${Partition}:iotsitewise:${Region}:${Account}:computation-model/${ComputationModelId}</code></p>
    pub arn: ::std::string::String,
    /// <p>The name of the computation model.</p>
    pub name: ::std::string::String,
    /// <p>The description of the computation model.</p>
    pub description: ::std::option::Option<::std::string::String>,
    /// <p>The type of the computation model.</p>
    pub r#type: crate::types::ComputationModelType,
    /// <p>The model creation date, in Unix epoch time.</p>
    pub creation_date: ::aws_smithy_types::DateTime,
    /// <p>The time the model was last updated, in Unix epoch time.</p>
    pub last_update_date: ::aws_smithy_types::DateTime,
    /// <p>The current status of the computation model.</p>
    pub status: ::std::option::Option<crate::types::ComputationModelStatus>,
    /// <p>The version of the computation model.</p>
    pub version: ::std::string::String,
}
impl ComputationModelSummary {
    /// <p>The ID of the computation model.</p>
    pub fn id(&self) -> &str {
        use std::ops::Deref;
        self.id.deref()
    }
    /// <p>The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">ARN</a> of the computation model, which has the following format.</p>
    /// <p><code>arn:${Partition}:iotsitewise:${Region}:${Account}:computation-model/${ComputationModelId}</code></p>
    pub fn arn(&self) -> &str {
        use std::ops::Deref;
        self.arn.deref()
    }
    /// <p>The name of the computation model.</p>
    pub fn name(&self) -> &str {
        use std::ops::Deref;
        self.name.deref()
    }
    /// <p>The description of the computation model.</p>
    pub fn description(&self) -> ::std::option::Option<&str> {
        self.description.as_deref()
    }
    /// <p>The type of the computation model.</p>
    pub fn r#type(&self) -> &crate::types::ComputationModelType {
        &self.r#type
    }
    /// <p>The model creation date, in Unix epoch time.</p>
    pub fn creation_date(&self) -> &::aws_smithy_types::DateTime {
        &self.creation_date
    }
    /// <p>The time the model was last updated, in Unix epoch time.</p>
    pub fn last_update_date(&self) -> &::aws_smithy_types::DateTime {
        &self.last_update_date
    }
    /// <p>The current status of the computation model.</p>
    pub fn status(&self) -> ::std::option::Option<&crate::types::ComputationModelStatus> {
        self.status.as_ref()
    }
    /// <p>The version of the computation model.</p>
    pub fn version(&self) -> &str {
        use std::ops::Deref;
        self.version.deref()
    }
}
impl ComputationModelSummary {
    /// Creates a new builder-style object to manufacture [`ComputationModelSummary`](crate::types::ComputationModelSummary).
    pub fn builder() -> crate::types::builders::ComputationModelSummaryBuilder {
        crate::types::builders::ComputationModelSummaryBuilder::default()
    }
}

/// A builder for [`ComputationModelSummary`](crate::types::ComputationModelSummary).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct ComputationModelSummaryBuilder {
    pub(crate) id: ::std::option::Option<::std::string::String>,
    pub(crate) arn: ::std::option::Option<::std::string::String>,
    pub(crate) name: ::std::option::Option<::std::string::String>,
    pub(crate) description: ::std::option::Option<::std::string::String>,
    pub(crate) r#type: ::std::option::Option<crate::types::ComputationModelType>,
    pub(crate) creation_date: ::std::option::Option<::aws_smithy_types::DateTime>,
    pub(crate) last_update_date: ::std::option::Option<::aws_smithy_types::DateTime>,
    pub(crate) status: ::std::option::Option<crate::types::ComputationModelStatus>,
    pub(crate) version: ::std::option::Option<::std::string::String>,
}
impl ComputationModelSummaryBuilder {
    /// <p>The ID of the computation model.</p>
    /// This field is required.
    pub fn id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The ID of the computation model.</p>
    pub fn set_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.id = input;
        self
    }
    /// <p>The ID of the computation model.</p>
    pub fn get_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.id
    }
    /// <p>The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">ARN</a> of the computation model, which has the following format.</p>
    /// <p><code>arn:${Partition}:iotsitewise:${Region}:${Account}:computation-model/${ComputationModelId}</code></p>
    /// This field is required.
    pub fn arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">ARN</a> of the computation model, which has the following format.</p>
    /// <p><code>arn:${Partition}:iotsitewise:${Region}:${Account}:computation-model/${ComputationModelId}</code></p>
    pub fn set_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.arn = input;
        self
    }
    /// <p>The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">ARN</a> of the computation model, which has the following format.</p>
    /// <p><code>arn:${Partition}:iotsitewise:${Region}:${Account}:computation-model/${ComputationModelId}</code></p>
    pub fn get_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.arn
    }
    /// <p>The name of the computation model.</p>
    /// This field is required.
    pub fn name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of the computation model.</p>
    pub fn set_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.name = input;
        self
    }
    /// <p>The name of the computation model.</p>
    pub fn get_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.name
    }
    /// <p>The description of the computation model.</p>
    pub fn description(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.description = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The description of the computation model.</p>
    pub fn set_description(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.description = input;
        self
    }
    /// <p>The description of the computation model.</p>
    pub fn get_description(&self) -> &::std::option::Option<::std::string::String> {
        &self.description
    }
    /// <p>The type of the computation model.</p>
    /// This field is required.
    pub fn r#type(mut self, input: crate::types::ComputationModelType) -> Self {
        self.r#type = ::std::option::Option::Some(input);
        self
    }
    /// <p>The type of the computation model.</p>
    pub fn set_type(mut self, input: ::std::option::Option<crate::types::ComputationModelType>) -> Self {
        self.r#type = input;
        self
    }
    /// <p>The type of the computation model.</p>
    pub fn get_type(&self) -> &::std::option::Option<crate::types::ComputationModelType> {
        &self.r#type
    }
    /// <p>The model creation date, in Unix epoch time.</p>
    /// This field is required.
    pub fn creation_date(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.creation_date = ::std::option::Option::Some(input);
        self
    }
    /// <p>The model creation date, in Unix epoch time.</p>
    pub fn set_creation_date(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.creation_date = input;
        self
    }
    /// <p>The model creation date, in Unix epoch time.</p>
    pub fn get_creation_date(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.creation_date
    }
    /// <p>The time the model was last updated, in Unix epoch time.</p>
    /// This field is required.
    pub fn last_update_date(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.last_update_date = ::std::option::Option::Some(input);
        self
    }
    /// <p>The time the model was last updated, in Unix epoch time.</p>
    pub fn set_last_update_date(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.last_update_date = input;
        self
    }
    /// <p>The time the model was last updated, in Unix epoch time.</p>
    pub fn get_last_update_date(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.last_update_date
    }
    /// <p>The current status of the computation model.</p>
    /// This field is required.
    pub fn status(mut self, input: crate::types::ComputationModelStatus) -> Self {
        self.status = ::std::option::Option::Some(input);
        self
    }
    /// <p>The current status of the computation model.</p>
    pub fn set_status(mut self, input: ::std::option::Option<crate::types::ComputationModelStatus>) -> Self {
        self.status = input;
        self
    }
    /// <p>The current status of the computation model.</p>
    pub fn get_status(&self) -> &::std::option::Option<crate::types::ComputationModelStatus> {
        &self.status
    }
    /// <p>The version of the computation model.</p>
    /// This field is required.
    pub fn version(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.version = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The version of the computation model.</p>
    pub fn set_version(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.version = input;
        self
    }
    /// <p>The version of the computation model.</p>
    pub fn get_version(&self) -> &::std::option::Option<::std::string::String> {
        &self.version
    }
    /// Consumes the builder and constructs a [`ComputationModelSummary`](crate::types::ComputationModelSummary).
    /// This method will fail if any of the following fields are not set:
    /// - [`id`](crate::types::builders::ComputationModelSummaryBuilder::id)
    /// - [`arn`](crate::types::builders::ComputationModelSummaryBuilder::arn)
    /// - [`name`](crate::types::builders::ComputationModelSummaryBuilder::name)
    /// - [`r#type`](crate::types::builders::ComputationModelSummaryBuilder::type)
    /// - [`creation_date`](crate::types::builders::ComputationModelSummaryBuilder::creation_date)
    /// - [`last_update_date`](crate::types::builders::ComputationModelSummaryBuilder::last_update_date)
    /// - [`version`](crate::types::builders::ComputationModelSummaryBuilder::version)
    pub fn build(self) -> ::std::result::Result<crate::types::ComputationModelSummary, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::ComputationModelSummary {
            id: self.id.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "id",
                    "id was not specified but it is required when building ComputationModelSummary",
                )
            })?,
            arn: self.arn.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "arn",
                    "arn was not specified but it is required when building ComputationModelSummary",
                )
            })?,
            name: self.name.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "name",
                    "name was not specified but it is required when building ComputationModelSummary",
                )
            })?,
            description: self.description,
            r#type: self.r#type.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "r#type",
                    "r#type was not specified but it is required when building ComputationModelSummary",
                )
            })?,
            creation_date: self.creation_date.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "creation_date",
                    "creation_date was not specified but it is required when building ComputationModelSummary",
                )
            })?,
            last_update_date: self.last_update_date.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "last_update_date",
                    "last_update_date was not specified but it is required when building ComputationModelSummary",
                )
            })?,
            status: self.status,
            version: self.version.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "version",
                    "version was not specified but it is required when building ComputationModelSummary",
                )
            })?,
        })
    }
}
