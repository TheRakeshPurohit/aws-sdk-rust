// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>A summary of the resource that a computation model resolves to.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ComputationModelResolveToResourceSummary {
    /// <p>The detailed resource this execution summary resolves to.</p>
    pub resolve_to: ::std::option::Option<crate::types::ResolveTo>,
}
impl ComputationModelResolveToResourceSummary {
    /// <p>The detailed resource this execution summary resolves to.</p>
    pub fn resolve_to(&self) -> ::std::option::Option<&crate::types::ResolveTo> {
        self.resolve_to.as_ref()
    }
}
impl ComputationModelResolveToResourceSummary {
    /// Creates a new builder-style object to manufacture [`ComputationModelResolveToResourceSummary`](crate::types::ComputationModelResolveToResourceSummary).
    pub fn builder() -> crate::types::builders::ComputationModelResolveToResourceSummaryBuilder {
        crate::types::builders::ComputationModelResolveToResourceSummaryBuilder::default()
    }
}

/// A builder for [`ComputationModelResolveToResourceSummary`](crate::types::ComputationModelResolveToResourceSummary).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct ComputationModelResolveToResourceSummaryBuilder {
    pub(crate) resolve_to: ::std::option::Option<crate::types::ResolveTo>,
}
impl ComputationModelResolveToResourceSummaryBuilder {
    /// <p>The detailed resource this execution summary resolves to.</p>
    pub fn resolve_to(mut self, input: crate::types::ResolveTo) -> Self {
        self.resolve_to = ::std::option::Option::Some(input);
        self
    }
    /// <p>The detailed resource this execution summary resolves to.</p>
    pub fn set_resolve_to(mut self, input: ::std::option::Option<crate::types::ResolveTo>) -> Self {
        self.resolve_to = input;
        self
    }
    /// <p>The detailed resource this execution summary resolves to.</p>
    pub fn get_resolve_to(&self) -> &::std::option::Option<crate::types::ResolveTo> {
        &self.resolve_to
    }
    /// Consumes the builder and constructs a [`ComputationModelResolveToResourceSummary`](crate::types::ComputationModelResolveToResourceSummary).
    pub fn build(self) -> crate::types::ComputationModelResolveToResourceSummary {
        crate::types::ComputationModelResolveToResourceSummary { resolve_to: self.resolve_to }
    }
}
