// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>A filter used to match specific data binding values based on criteria. This filter allows searching for data bindings by asset, asset model, asset property, or asset model property.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct DataBindingValueFilter {
    /// <p>Filter criteria for matching data bindings based on a specific asset. Used to list all data bindings referencing a particular asset or its properties.</p>
    pub asset: ::std::option::Option<crate::types::AssetBindingValueFilter>,
    /// <p>Filter criteria for matching data bindings based on a specific asset model. Used to list all data bindings referencing a particular asset model or its properties.</p>
    pub asset_model: ::std::option::Option<crate::types::AssetModelBindingValueFilter>,
    /// <p>Filter criteria for matching data bindings based on a specific asset property. Used to list all data bindings referencing a particular property of an asset.</p>
    pub asset_property: ::std::option::Option<crate::types::AssetPropertyBindingValueFilter>,
    /// <p>Filter criteria for matching data bindings based on a specific asset model property. Used to list all data bindings referencing a particular property of an asset model.</p>
    pub asset_model_property: ::std::option::Option<crate::types::AssetModelPropertyBindingValueFilter>,
}
impl DataBindingValueFilter {
    /// <p>Filter criteria for matching data bindings based on a specific asset. Used to list all data bindings referencing a particular asset or its properties.</p>
    pub fn asset(&self) -> ::std::option::Option<&crate::types::AssetBindingValueFilter> {
        self.asset.as_ref()
    }
    /// <p>Filter criteria for matching data bindings based on a specific asset model. Used to list all data bindings referencing a particular asset model or its properties.</p>
    pub fn asset_model(&self) -> ::std::option::Option<&crate::types::AssetModelBindingValueFilter> {
        self.asset_model.as_ref()
    }
    /// <p>Filter criteria for matching data bindings based on a specific asset property. Used to list all data bindings referencing a particular property of an asset.</p>
    pub fn asset_property(&self) -> ::std::option::Option<&crate::types::AssetPropertyBindingValueFilter> {
        self.asset_property.as_ref()
    }
    /// <p>Filter criteria for matching data bindings based on a specific asset model property. Used to list all data bindings referencing a particular property of an asset model.</p>
    pub fn asset_model_property(&self) -> ::std::option::Option<&crate::types::AssetModelPropertyBindingValueFilter> {
        self.asset_model_property.as_ref()
    }
}
impl DataBindingValueFilter {
    /// Creates a new builder-style object to manufacture [`DataBindingValueFilter`](crate::types::DataBindingValueFilter).
    pub fn builder() -> crate::types::builders::DataBindingValueFilterBuilder {
        crate::types::builders::DataBindingValueFilterBuilder::default()
    }
}

/// A builder for [`DataBindingValueFilter`](crate::types::DataBindingValueFilter).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct DataBindingValueFilterBuilder {
    pub(crate) asset: ::std::option::Option<crate::types::AssetBindingValueFilter>,
    pub(crate) asset_model: ::std::option::Option<crate::types::AssetModelBindingValueFilter>,
    pub(crate) asset_property: ::std::option::Option<crate::types::AssetPropertyBindingValueFilter>,
    pub(crate) asset_model_property: ::std::option::Option<crate::types::AssetModelPropertyBindingValueFilter>,
}
impl DataBindingValueFilterBuilder {
    /// <p>Filter criteria for matching data bindings based on a specific asset. Used to list all data bindings referencing a particular asset or its properties.</p>
    pub fn asset(mut self, input: crate::types::AssetBindingValueFilter) -> Self {
        self.asset = ::std::option::Option::Some(input);
        self
    }
    /// <p>Filter criteria for matching data bindings based on a specific asset. Used to list all data bindings referencing a particular asset or its properties.</p>
    pub fn set_asset(mut self, input: ::std::option::Option<crate::types::AssetBindingValueFilter>) -> Self {
        self.asset = input;
        self
    }
    /// <p>Filter criteria for matching data bindings based on a specific asset. Used to list all data bindings referencing a particular asset or its properties.</p>
    pub fn get_asset(&self) -> &::std::option::Option<crate::types::AssetBindingValueFilter> {
        &self.asset
    }
    /// <p>Filter criteria for matching data bindings based on a specific asset model. Used to list all data bindings referencing a particular asset model or its properties.</p>
    pub fn asset_model(mut self, input: crate::types::AssetModelBindingValueFilter) -> Self {
        self.asset_model = ::std::option::Option::Some(input);
        self
    }
    /// <p>Filter criteria for matching data bindings based on a specific asset model. Used to list all data bindings referencing a particular asset model or its properties.</p>
    pub fn set_asset_model(mut self, input: ::std::option::Option<crate::types::AssetModelBindingValueFilter>) -> Self {
        self.asset_model = input;
        self
    }
    /// <p>Filter criteria for matching data bindings based on a specific asset model. Used to list all data bindings referencing a particular asset model or its properties.</p>
    pub fn get_asset_model(&self) -> &::std::option::Option<crate::types::AssetModelBindingValueFilter> {
        &self.asset_model
    }
    /// <p>Filter criteria for matching data bindings based on a specific asset property. Used to list all data bindings referencing a particular property of an asset.</p>
    pub fn asset_property(mut self, input: crate::types::AssetPropertyBindingValueFilter) -> Self {
        self.asset_property = ::std::option::Option::Some(input);
        self
    }
    /// <p>Filter criteria for matching data bindings based on a specific asset property. Used to list all data bindings referencing a particular property of an asset.</p>
    pub fn set_asset_property(mut self, input: ::std::option::Option<crate::types::AssetPropertyBindingValueFilter>) -> Self {
        self.asset_property = input;
        self
    }
    /// <p>Filter criteria for matching data bindings based on a specific asset property. Used to list all data bindings referencing a particular property of an asset.</p>
    pub fn get_asset_property(&self) -> &::std::option::Option<crate::types::AssetPropertyBindingValueFilter> {
        &self.asset_property
    }
    /// <p>Filter criteria for matching data bindings based on a specific asset model property. Used to list all data bindings referencing a particular property of an asset model.</p>
    pub fn asset_model_property(mut self, input: crate::types::AssetModelPropertyBindingValueFilter) -> Self {
        self.asset_model_property = ::std::option::Option::Some(input);
        self
    }
    /// <p>Filter criteria for matching data bindings based on a specific asset model property. Used to list all data bindings referencing a particular property of an asset model.</p>
    pub fn set_asset_model_property(mut self, input: ::std::option::Option<crate::types::AssetModelPropertyBindingValueFilter>) -> Self {
        self.asset_model_property = input;
        self
    }
    /// <p>Filter criteria for matching data bindings based on a specific asset model property. Used to list all data bindings referencing a particular property of an asset model.</p>
    pub fn get_asset_model_property(&self) -> &::std::option::Option<crate::types::AssetModelPropertyBindingValueFilter> {
        &self.asset_model_property
    }
    /// Consumes the builder and constructs a [`DataBindingValueFilter`](crate::types::DataBindingValueFilter).
    pub fn build(self) -> crate::types::DataBindingValueFilter {
        crate::types::DataBindingValueFilter {
            asset: self.asset,
            asset_model: self.asset_model,
            asset_property: self.asset_property,
            asset_model_property: self.asset_model_property,
        }
    }
}
