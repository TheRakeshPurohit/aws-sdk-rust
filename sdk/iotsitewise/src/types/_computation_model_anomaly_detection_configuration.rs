// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Contains the configuration of the type of anomaly detection computation model.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ComputationModelAnomalyDetectionConfiguration {
    /// <p>Define the variable name associated with input properties, with the following format <code>${VariableName}</code>.</p>
    pub input_properties: ::std::string::String,
    /// <p>Define the variable name associated with the result property, and the following format <code>${VariableName}</code>.</p>
    pub result_property: ::std::string::String,
}
impl ComputationModelAnomalyDetectionConfiguration {
    /// <p>Define the variable name associated with input properties, with the following format <code>${VariableName}</code>.</p>
    pub fn input_properties(&self) -> &str {
        use std::ops::Deref;
        self.input_properties.deref()
    }
    /// <p>Define the variable name associated with the result property, and the following format <code>${VariableName}</code>.</p>
    pub fn result_property(&self) -> &str {
        use std::ops::Deref;
        self.result_property.deref()
    }
}
impl ComputationModelAnomalyDetectionConfiguration {
    /// Creates a new builder-style object to manufacture [`ComputationModelAnomalyDetectionConfiguration`](crate::types::ComputationModelAnomalyDetectionConfiguration).
    pub fn builder() -> crate::types::builders::ComputationModelAnomalyDetectionConfigurationBuilder {
        crate::types::builders::ComputationModelAnomalyDetectionConfigurationBuilder::default()
    }
}

/// A builder for [`ComputationModelAnomalyDetectionConfiguration`](crate::types::ComputationModelAnomalyDetectionConfiguration).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct ComputationModelAnomalyDetectionConfigurationBuilder {
    pub(crate) input_properties: ::std::option::Option<::std::string::String>,
    pub(crate) result_property: ::std::option::Option<::std::string::String>,
}
impl ComputationModelAnomalyDetectionConfigurationBuilder {
    /// <p>Define the variable name associated with input properties, with the following format <code>${VariableName}</code>.</p>
    /// This field is required.
    pub fn input_properties(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.input_properties = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>Define the variable name associated with input properties, with the following format <code>${VariableName}</code>.</p>
    pub fn set_input_properties(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.input_properties = input;
        self
    }
    /// <p>Define the variable name associated with input properties, with the following format <code>${VariableName}</code>.</p>
    pub fn get_input_properties(&self) -> &::std::option::Option<::std::string::String> {
        &self.input_properties
    }
    /// <p>Define the variable name associated with the result property, and the following format <code>${VariableName}</code>.</p>
    /// This field is required.
    pub fn result_property(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.result_property = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>Define the variable name associated with the result property, and the following format <code>${VariableName}</code>.</p>
    pub fn set_result_property(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.result_property = input;
        self
    }
    /// <p>Define the variable name associated with the result property, and the following format <code>${VariableName}</code>.</p>
    pub fn get_result_property(&self) -> &::std::option::Option<::std::string::String> {
        &self.result_property
    }
    /// Consumes the builder and constructs a [`ComputationModelAnomalyDetectionConfiguration`](crate::types::ComputationModelAnomalyDetectionConfiguration).
    /// This method will fail if any of the following fields are not set:
    /// - [`input_properties`](crate::types::builders::ComputationModelAnomalyDetectionConfigurationBuilder::input_properties)
    /// - [`result_property`](crate::types::builders::ComputationModelAnomalyDetectionConfigurationBuilder::result_property)
    pub fn build(
        self,
    ) -> ::std::result::Result<crate::types::ComputationModelAnomalyDetectionConfiguration, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::ComputationModelAnomalyDetectionConfiguration {
            input_properties: self.input_properties.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "input_properties",
                    "input_properties was not specified but it is required when building ComputationModelAnomalyDetectionConfiguration",
                )
            })?,
            result_property: self.result_property.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "result_property",
                    "result_property was not specified but it is required when building ComputationModelAnomalyDetectionConfiguration",
                )
            })?,
        })
    }
}
