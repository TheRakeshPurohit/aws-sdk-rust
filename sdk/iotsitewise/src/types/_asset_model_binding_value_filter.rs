// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>A filter used to match data bindings based on a specific asset model. This filter identifies all computation models referencing a particular asset model in their data bindings.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct AssetModelBindingValueFilter {
    /// <p>The ID of the asset model to filter data bindings by. Only data bindings referemncing this specific asset model are matched.</p>
    pub asset_model_id: ::std::string::String,
}
impl AssetModelBindingValueFilter {
    /// <p>The ID of the asset model to filter data bindings by. Only data bindings referemncing this specific asset model are matched.</p>
    pub fn asset_model_id(&self) -> &str {
        use std::ops::Deref;
        self.asset_model_id.deref()
    }
}
impl AssetModelBindingValueFilter {
    /// Creates a new builder-style object to manufacture [`AssetModelBindingValueFilter`](crate::types::AssetModelBindingValueFilter).
    pub fn builder() -> crate::types::builders::AssetModelBindingValueFilterBuilder {
        crate::types::builders::AssetModelBindingValueFilterBuilder::default()
    }
}

/// A builder for [`AssetModelBindingValueFilter`](crate::types::AssetModelBindingValueFilter).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct AssetModelBindingValueFilterBuilder {
    pub(crate) asset_model_id: ::std::option::Option<::std::string::String>,
}
impl AssetModelBindingValueFilterBuilder {
    /// <p>The ID of the asset model to filter data bindings by. Only data bindings referemncing this specific asset model are matched.</p>
    /// This field is required.
    pub fn asset_model_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.asset_model_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The ID of the asset model to filter data bindings by. Only data bindings referemncing this specific asset model are matched.</p>
    pub fn set_asset_model_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.asset_model_id = input;
        self
    }
    /// <p>The ID of the asset model to filter data bindings by. Only data bindings referemncing this specific asset model are matched.</p>
    pub fn get_asset_model_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.asset_model_id
    }
    /// Consumes the builder and constructs a [`AssetModelBindingValueFilter`](crate::types::AssetModelBindingValueFilter).
    /// This method will fail if any of the following fields are not set:
    /// - [`asset_model_id`](crate::types::builders::AssetModelBindingValueFilterBuilder::asset_model_id)
    pub fn build(self) -> ::std::result::Result<crate::types::AssetModelBindingValueFilter, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::AssetModelBindingValueFilter {
            asset_model_id: self.asset_model_id.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "asset_model_id",
                    "asset_model_id was not specified but it is required when building AssetModelBindingValueFilter",
                )
            })?,
        })
    }
}
