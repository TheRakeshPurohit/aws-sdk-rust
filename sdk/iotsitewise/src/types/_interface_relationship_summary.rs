// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Contains summary information about an interface relationship, which defines how an interface is applied to an asset model. This summary provides the essential identifiers needed to retrieve detailed information about the relationship.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct InterfaceRelationshipSummary {
    /// <p>The ID of the asset model that has the interface applied to it.</p>
    pub id: ::std::string::String,
}
impl InterfaceRelationshipSummary {
    /// <p>The ID of the asset model that has the interface applied to it.</p>
    pub fn id(&self) -> &str {
        use std::ops::Deref;
        self.id.deref()
    }
}
impl InterfaceRelationshipSummary {
    /// Creates a new builder-style object to manufacture [`InterfaceRelationshipSummary`](crate::types::InterfaceRelationshipSummary).
    pub fn builder() -> crate::types::builders::InterfaceRelationshipSummaryBuilder {
        crate::types::builders::InterfaceRelationshipSummaryBuilder::default()
    }
}

/// A builder for [`InterfaceRelationshipSummary`](crate::types::InterfaceRelationshipSummary).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct InterfaceRelationshipSummaryBuilder {
    pub(crate) id: ::std::option::Option<::std::string::String>,
}
impl InterfaceRelationshipSummaryBuilder {
    /// <p>The ID of the asset model that has the interface applied to it.</p>
    /// This field is required.
    pub fn id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The ID of the asset model that has the interface applied to it.</p>
    pub fn set_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.id = input;
        self
    }
    /// <p>The ID of the asset model that has the interface applied to it.</p>
    pub fn get_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.id
    }
    /// Consumes the builder and constructs a [`InterfaceRelationshipSummary`](crate::types::InterfaceRelationshipSummary).
    /// This method will fail if any of the following fields are not set:
    /// - [`id`](crate::types::builders::InterfaceRelationshipSummaryBuilder::id)
    pub fn build(self) -> ::std::result::Result<crate::types::InterfaceRelationshipSummary, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::InterfaceRelationshipSummary {
            id: self.id.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "id",
                    "id was not specified but it is required when building InterfaceRelationshipSummary",
                )
            })?,
        })
    }
}
