// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateGateway`](crate::operation::create_gateway::builders::CreateGatewayFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`gateway_name(impl Into<String>)`](crate::operation::create_gateway::builders::CreateGatewayFluentBuilder::gateway_name) / [`set_gateway_name(Option<String>)`](crate::operation::create_gateway::builders::CreateGatewayFluentBuilder::set_gateway_name):<br>required: **true**<br><p>A unique name for the gateway.</p><br>
    ///   - [`gateway_platform(GatewayPlatform)`](crate::operation::create_gateway::builders::CreateGatewayFluentBuilder::gateway_platform) / [`set_gateway_platform(Option<GatewayPlatform>)`](crate::operation::create_gateway::builders::CreateGatewayFluentBuilder::set_gateway_platform):<br>required: **true**<br><p>The gateway's platform. You can only specify one platform in a gateway.</p><br>
    ///   - [`gateway_version(impl Into<String>)`](crate::operation::create_gateway::builders::CreateGatewayFluentBuilder::gateway_version) / [`set_gateway_version(Option<String>)`](crate::operation::create_gateway::builders::CreateGatewayFluentBuilder::set_gateway_version):<br>required: **false**<br><p>The version of the gateway to create. Specify <code>3</code> to create an MQTT-enabled, V3 gateway and <code>2</code> to create a Classic streams, V2 gateway. If not specified, the default is <code>2</code> (Classic streams, V2 gateway).</p><note>  <p>When creating a V3 gateway (<code>gatewayVersion=3</code>) with the <code>GreengrassV2</code> platform, you must also specify the <code>coreDeviceOperatingSystem</code> parameter.</p> </note> <p>We recommend creating an MQTT-enabled gateway for self-hosted gateways and Siemens Industrial Edge gateways. For more information on gateway versions, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/gateways.html">Use Amazon Web Services IoT SiteWise Edge Edge gateways</a>.</p><br>
    ///   - [`tags(impl Into<String>, impl Into<String>)`](crate::operation::create_gateway::builders::CreateGatewayFluentBuilder::tags) / [`set_tags(Option<HashMap::<String, String>>)`](crate::operation::create_gateway::builders::CreateGatewayFluentBuilder::set_tags):<br>required: **false**<br><p>A list of key-value pairs that contain metadata for the gateway. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/tag-resources.html">Tagging your IoT SiteWise resources</a> in the <i>IoT SiteWise User Guide</i>.</p><br>
    /// - On success, responds with [`CreateGatewayOutput`](crate::operation::create_gateway::CreateGatewayOutput) with field(s):
    ///   - [`gateway_id(String)`](crate::operation::create_gateway::CreateGatewayOutput::gateway_id): <p>The ID of the gateway device. You can use this ID when you call other IoT SiteWise API operations.</p>
    ///   - [`gateway_arn(String)`](crate::operation::create_gateway::CreateGatewayOutput::gateway_arn): <p>The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">ARN</a> of the gateway, which has the following format.</p> <p><code>arn:${Partition}:iotsitewise:${Region}:${Account}:gateway/${GatewayId}</code></p>
    /// - On failure, responds with [`SdkError<CreateGatewayError>`](crate::operation::create_gateway::CreateGatewayError)
    pub fn create_gateway(&self) -> crate::operation::create_gateway::builders::CreateGatewayFluentBuilder {
        crate::operation::create_gateway::builders::CreateGatewayFluentBuilder::new(self.handle.clone())
    }
}
