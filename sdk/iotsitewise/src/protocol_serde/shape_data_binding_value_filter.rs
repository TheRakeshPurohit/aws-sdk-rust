// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_data_binding_value_filter(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::types::DataBindingValueFilter,
) -> ::std::result::Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    if let Some(var_1) = &input.asset {
        #[allow(unused_mut)]
        let mut object_2 = object.key("asset").start_object();
        crate::protocol_serde::shape_asset_binding_value_filter::ser_asset_binding_value_filter(&mut object_2, var_1)?;
        object_2.finish();
    }
    if let Some(var_3) = &input.asset_model {
        #[allow(unused_mut)]
        let mut object_4 = object.key("assetModel").start_object();
        crate::protocol_serde::shape_asset_model_binding_value_filter::ser_asset_model_binding_value_filter(&mut object_4, var_3)?;
        object_4.finish();
    }
    if let Some(var_5) = &input.asset_property {
        #[allow(unused_mut)]
        let mut object_6 = object.key("assetProperty").start_object();
        crate::protocol_serde::shape_asset_property_binding_value_filter::ser_asset_property_binding_value_filter(&mut object_6, var_5)?;
        object_6.finish();
    }
    if let Some(var_7) = &input.asset_model_property {
        #[allow(unused_mut)]
        let mut object_8 = object.key("assetModelProperty").start_object();
        crate::protocol_serde::shape_asset_model_property_binding_value_filter::ser_asset_model_property_binding_value_filter(&mut object_8, var_7)?;
        object_8.finish();
    }
    Ok(())
}
