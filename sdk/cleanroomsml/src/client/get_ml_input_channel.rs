// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`GetMLInputChannel`](crate::operation::get_ml_input_channel::builders::GetMLInputChannelFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`ml_input_channel_arn(impl Into<String>)`](crate::operation::get_ml_input_channel::builders::GetMLInputChannelFluentBuilder::ml_input_channel_arn) / [`set_ml_input_channel_arn(Option<String>)`](crate::operation::get_ml_input_channel::builders::GetMLInputChannelFluentBuilder::set_ml_input_channel_arn):<br>required: **true**<br><p>The Amazon Resource Name (ARN) of the ML input channel that you want to get.</p><br>
    ///   - [`membership_identifier(impl Into<String>)`](crate::operation::get_ml_input_channel::builders::GetMLInputChannelFluentBuilder::membership_identifier) / [`set_membership_identifier(Option<String>)`](crate::operation::get_ml_input_channel::builders::GetMLInputChannelFluentBuilder::set_membership_identifier):<br>required: **true**<br><p>The membership ID of the membership that contains the ML input channel that you want to get.</p><br>
    /// - On success, responds with [`GetMlInputChannelOutput`](crate::operation::get_ml_input_channel::GetMlInputChannelOutput) with field(s):
    ///   - [`membership_identifier(String)`](crate::operation::get_ml_input_channel::GetMlInputChannelOutput::membership_identifier): <p>The membership ID of the membership that contains the ML input channel.</p>
    ///   - [`collaboration_identifier(String)`](crate::operation::get_ml_input_channel::GetMlInputChannelOutput::collaboration_identifier): <p>The collaboration ID of the collaboration that contains the ML input channel.</p>
    ///   - [`ml_input_channel_arn(String)`](crate::operation::get_ml_input_channel::GetMlInputChannelOutput::ml_input_channel_arn): <p>The Amazon Resource Name (ARN) of the ML input channel.</p>
    ///   - [`name(String)`](crate::operation::get_ml_input_channel::GetMlInputChannelOutput::name): <p>The name of the ML input channel.</p>
    ///   - [`configured_model_algorithm_associations(Vec::<String>)`](crate::operation::get_ml_input_channel::GetMlInputChannelOutput::configured_model_algorithm_associations): <p>The configured model algorithm associations that were used to create the ML input channel.</p>
    ///   - [`status(MlInputChannelStatus)`](crate::operation::get_ml_input_channel::GetMlInputChannelOutput::status): <p>The status of the ML input channel.</p>
    ///   - [`status_details(Option<StatusDetails>)`](crate::operation::get_ml_input_channel::GetMlInputChannelOutput::status_details): <p>Details about the status of a resource.</p>
    ///   - [`retention_in_days(i32)`](crate::operation::get_ml_input_channel::GetMlInputChannelOutput::retention_in_days): <p>The number of days to keep the data in the ML input channel.</p>
    ///   - [`number_of_records(Option<i64>)`](crate::operation::get_ml_input_channel::GetMlInputChannelOutput::number_of_records): <p>The number of records in the ML input channel.</p>
    ///   - [`description(Option<String>)`](crate::operation::get_ml_input_channel::GetMlInputChannelOutput::description): <p>The description of the ML input channel.</p>
    ///   - [`create_time(DateTime)`](crate::operation::get_ml_input_channel::GetMlInputChannelOutput::create_time): <p>The time at which the ML input channel was created.</p>
    ///   - [`update_time(DateTime)`](crate::operation::get_ml_input_channel::GetMlInputChannelOutput::update_time): <p>The most recent time at which the ML input channel was updated.</p>
    ///   - [`input_channel(Option<InputChannel>)`](crate::operation::get_ml_input_channel::GetMlInputChannelOutput::input_channel): <p>The input channel that was used to create the ML input channel.</p>
    ///   - [`protected_query_identifier(Option<String>)`](crate::operation::get_ml_input_channel::GetMlInputChannelOutput::protected_query_identifier): <p>The ID of the protected query that was used to create the ML input channel.</p>
    ///   - [`number_of_files(Option<f64>)`](crate::operation::get_ml_input_channel::GetMlInputChannelOutput::number_of_files): <p>The number of files in the ML input channel.</p>
    ///   - [`size_in_gb(Option<f64>)`](crate::operation::get_ml_input_channel::GetMlInputChannelOutput::size_in_gb): <p>The size, in GB, of the ML input channel.</p>
    ///   - [`kms_key_arn(Option<String>)`](crate::operation::get_ml_input_channel::GetMlInputChannelOutput::kms_key_arn): <p>The Amazon Resource Name (ARN) of the KMS key that was used to create the ML input channel.</p>
    ///   - [`tags(Option<HashMap::<String, String>>)`](crate::operation::get_ml_input_channel::GetMlInputChannelOutput::tags): <p>The optional metadata that you applied to the resource to help you categorize and organize them. Each tag consists of a key and an optional value, both of which you define.</p> <p>The following basic restrictions apply to tags:</p> <ul>  <li>   <p>Maximum number of tags per resource - 50.</p></li>  <li>   <p>For each resource, each tag key must be unique, and each tag key can have only one value.</p></li>  <li>   <p>Maximum key length - 128 Unicode characters in UTF-8.</p></li>  <li>   <p>Maximum value length - 256 Unicode characters in UTF-8.</p></li>  <li>   <p>If your tagging schema is used across multiple services and resources, remember that other services may have restrictions on allowed characters. Generally allowed characters are: letters, numbers, and spaces representable in UTF-8, and the following characters: + - = . _ : / @.</p></li>  <li>   <p>Tag keys and values are case sensitive.</p></li>  <li>   <p>Do not use aws:, AWS:, or any upper or lowercase combination of such as a prefix for keys as it is reserved for AWS use. You cannot edit or delete tag keys with this prefix. Values can have this prefix. If a tag value has aws as its prefix but the key does not, then Clean Rooms ML considers it to be a user tag and will count against the limit of 50 tags. Tags with only the key prefix of aws do not count against your tags per resource limit.</p></li> </ul>
    /// - On failure, responds with [`SdkError<GetMLInputChannelError>`](crate::operation::get_ml_input_channel::GetMLInputChannelError)
    pub fn get_ml_input_channel(&self) -> crate::operation::get_ml_input_channel::builders::GetMLInputChannelFluentBuilder {
        crate::operation::get_ml_input_channel::builders::GetMLInputChannelFluentBuilder::new(self.handle.clone())
    }
}
