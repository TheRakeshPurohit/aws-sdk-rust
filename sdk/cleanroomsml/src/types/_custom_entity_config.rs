// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The configuration for defining custom patterns to be redacted from logs and error messages. This is for the CUSTOM config under entitiesToRedact. Both CustomEntityConfig and entitiesToRedact need to be present or not present.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct CustomEntityConfig {
    /// <p>Defines data identifiers for the custom entity configuration. Provide this only if CUSTOM redaction is configured.</p>
    pub custom_data_identifiers: ::std::vec::Vec<::std::string::String>,
}
impl CustomEntityConfig {
    /// <p>Defines data identifiers for the custom entity configuration. Provide this only if CUSTOM redaction is configured.</p>
    pub fn custom_data_identifiers(&self) -> &[::std::string::String] {
        use std::ops::Deref;
        self.custom_data_identifiers.deref()
    }
}
impl CustomEntityConfig {
    /// Creates a new builder-style object to manufacture [`CustomEntityConfig`](crate::types::CustomEntityConfig).
    pub fn builder() -> crate::types::builders::CustomEntityConfigBuilder {
        crate::types::builders::CustomEntityConfigBuilder::default()
    }
}

/// A builder for [`CustomEntityConfig`](crate::types::CustomEntityConfig).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct CustomEntityConfigBuilder {
    pub(crate) custom_data_identifiers: ::std::option::Option<::std::vec::Vec<::std::string::String>>,
}
impl CustomEntityConfigBuilder {
    /// Appends an item to `custom_data_identifiers`.
    ///
    /// To override the contents of this collection use [`set_custom_data_identifiers`](Self::set_custom_data_identifiers).
    ///
    /// <p>Defines data identifiers for the custom entity configuration. Provide this only if CUSTOM redaction is configured.</p>
    pub fn custom_data_identifiers(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        let mut v = self.custom_data_identifiers.unwrap_or_default();
        v.push(input.into());
        self.custom_data_identifiers = ::std::option::Option::Some(v);
        self
    }
    /// <p>Defines data identifiers for the custom entity configuration. Provide this only if CUSTOM redaction is configured.</p>
    pub fn set_custom_data_identifiers(mut self, input: ::std::option::Option<::std::vec::Vec<::std::string::String>>) -> Self {
        self.custom_data_identifiers = input;
        self
    }
    /// <p>Defines data identifiers for the custom entity configuration. Provide this only if CUSTOM redaction is configured.</p>
    pub fn get_custom_data_identifiers(&self) -> &::std::option::Option<::std::vec::Vec<::std::string::String>> {
        &self.custom_data_identifiers
    }
    /// Consumes the builder and constructs a [`CustomEntityConfig`](crate::types::CustomEntityConfig).
    /// This method will fail if any of the following fields are not set:
    /// - [`custom_data_identifiers`](crate::types::builders::CustomEntityConfigBuilder::custom_data_identifiers)
    pub fn build(self) -> ::std::result::Result<crate::types::CustomEntityConfig, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::CustomEntityConfig {
            custom_data_identifiers: self.custom_data_identifiers.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "custom_data_identifiers",
                    "custom_data_identifiers was not specified but it is required when building CustomEntityConfig",
                )
            })?,
        })
    }
}
