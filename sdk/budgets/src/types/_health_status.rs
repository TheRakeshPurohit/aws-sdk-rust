// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Provides information about the current operational state of a billing view resource, including its ability to access and update based on its associated billing view.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct HealthStatus {
    /// <p>The current status of the billing view resource.</p>
    pub status: ::std::option::Option<crate::types::HealthStatusValue>,
    /// <p>The reason for the current status.</p>
    /// <ul>
    /// <li>
    /// <p><code>BILLING_VIEW_NO_ACCESS</code>: The billing view resource does not grant <code>billing:GetBillingViewData</code> permission to this account.</p></li>
    /// <li>
    /// <p><code>BILLING_VIEW_UNHEALTHY</code>: The billing view associated with the budget is unhealthy.</p></li>
    /// <li>
    /// <p><code>FILTER_INVALID</code>: The filter contains reference to an account you do not have access to.</p></li>
    /// </ul>
    pub status_reason: ::std::option::Option<crate::types::HealthStatusReason>,
    /// <p>A generic time stamp. In Java, it's transformed to a <code>Date</code> object.</p>
    pub last_updated_time: ::std::option::Option<::aws_smithy_types::DateTime>,
}
impl HealthStatus {
    /// <p>The current status of the billing view resource.</p>
    pub fn status(&self) -> ::std::option::Option<&crate::types::HealthStatusValue> {
        self.status.as_ref()
    }
    /// <p>The reason for the current status.</p>
    /// <ul>
    /// <li>
    /// <p><code>BILLING_VIEW_NO_ACCESS</code>: The billing view resource does not grant <code>billing:GetBillingViewData</code> permission to this account.</p></li>
    /// <li>
    /// <p><code>BILLING_VIEW_UNHEALTHY</code>: The billing view associated with the budget is unhealthy.</p></li>
    /// <li>
    /// <p><code>FILTER_INVALID</code>: The filter contains reference to an account you do not have access to.</p></li>
    /// </ul>
    pub fn status_reason(&self) -> ::std::option::Option<&crate::types::HealthStatusReason> {
        self.status_reason.as_ref()
    }
    /// <p>A generic time stamp. In Java, it's transformed to a <code>Date</code> object.</p>
    pub fn last_updated_time(&self) -> ::std::option::Option<&::aws_smithy_types::DateTime> {
        self.last_updated_time.as_ref()
    }
}
impl HealthStatus {
    /// Creates a new builder-style object to manufacture [`HealthStatus`](crate::types::HealthStatus).
    pub fn builder() -> crate::types::builders::HealthStatusBuilder {
        crate::types::builders::HealthStatusBuilder::default()
    }
}

/// A builder for [`HealthStatus`](crate::types::HealthStatus).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct HealthStatusBuilder {
    pub(crate) status: ::std::option::Option<crate::types::HealthStatusValue>,
    pub(crate) status_reason: ::std::option::Option<crate::types::HealthStatusReason>,
    pub(crate) last_updated_time: ::std::option::Option<::aws_smithy_types::DateTime>,
}
impl HealthStatusBuilder {
    /// <p>The current status of the billing view resource.</p>
    pub fn status(mut self, input: crate::types::HealthStatusValue) -> Self {
        self.status = ::std::option::Option::Some(input);
        self
    }
    /// <p>The current status of the billing view resource.</p>
    pub fn set_status(mut self, input: ::std::option::Option<crate::types::HealthStatusValue>) -> Self {
        self.status = input;
        self
    }
    /// <p>The current status of the billing view resource.</p>
    pub fn get_status(&self) -> &::std::option::Option<crate::types::HealthStatusValue> {
        &self.status
    }
    /// <p>The reason for the current status.</p>
    /// <ul>
    /// <li>
    /// <p><code>BILLING_VIEW_NO_ACCESS</code>: The billing view resource does not grant <code>billing:GetBillingViewData</code> permission to this account.</p></li>
    /// <li>
    /// <p><code>BILLING_VIEW_UNHEALTHY</code>: The billing view associated with the budget is unhealthy.</p></li>
    /// <li>
    /// <p><code>FILTER_INVALID</code>: The filter contains reference to an account you do not have access to.</p></li>
    /// </ul>
    pub fn status_reason(mut self, input: crate::types::HealthStatusReason) -> Self {
        self.status_reason = ::std::option::Option::Some(input);
        self
    }
    /// <p>The reason for the current status.</p>
    /// <ul>
    /// <li>
    /// <p><code>BILLING_VIEW_NO_ACCESS</code>: The billing view resource does not grant <code>billing:GetBillingViewData</code> permission to this account.</p></li>
    /// <li>
    /// <p><code>BILLING_VIEW_UNHEALTHY</code>: The billing view associated with the budget is unhealthy.</p></li>
    /// <li>
    /// <p><code>FILTER_INVALID</code>: The filter contains reference to an account you do not have access to.</p></li>
    /// </ul>
    pub fn set_status_reason(mut self, input: ::std::option::Option<crate::types::HealthStatusReason>) -> Self {
        self.status_reason = input;
        self
    }
    /// <p>The reason for the current status.</p>
    /// <ul>
    /// <li>
    /// <p><code>BILLING_VIEW_NO_ACCESS</code>: The billing view resource does not grant <code>billing:GetBillingViewData</code> permission to this account.</p></li>
    /// <li>
    /// <p><code>BILLING_VIEW_UNHEALTHY</code>: The billing view associated with the budget is unhealthy.</p></li>
    /// <li>
    /// <p><code>FILTER_INVALID</code>: The filter contains reference to an account you do not have access to.</p></li>
    /// </ul>
    pub fn get_status_reason(&self) -> &::std::option::Option<crate::types::HealthStatusReason> {
        &self.status_reason
    }
    /// <p>A generic time stamp. In Java, it's transformed to a <code>Date</code> object.</p>
    pub fn last_updated_time(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.last_updated_time = ::std::option::Option::Some(input);
        self
    }
    /// <p>A generic time stamp. In Java, it's transformed to a <code>Date</code> object.</p>
    pub fn set_last_updated_time(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.last_updated_time = input;
        self
    }
    /// <p>A generic time stamp. In Java, it's transformed to a <code>Date</code> object.</p>
    pub fn get_last_updated_time(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.last_updated_time
    }
    /// Consumes the builder and constructs a [`HealthStatus`](crate::types::HealthStatus).
    pub fn build(self) -> crate::types::HealthStatus {
        crate::types::HealthStatus {
            status: self.status,
            status_reason: self.status_reason,
            last_updated_time: self.last_updated_time,
        }
    }
}
