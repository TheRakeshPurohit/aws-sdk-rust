// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateCluster`](crate::operation::create_cluster::builders::CreateClusterFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`name(impl Into<String>)`](crate::operation::create_cluster::builders::CreateClusterFluentBuilder::name) / [`set_name(Option<String>)`](crate::operation::create_cluster::builders::CreateClusterFluentBuilder::set_name):<br>required: **true**<br><p>The unique name to give to your cluster. The name can contain only alphanumeric characters (case-sensitive), hyphens, and underscores. It must start with an alphanumeric character and can't be longer than 100 characters. The name must be unique within the Amazon Web Services Region and Amazon Web Services account that you're creating the cluster in.</p><br>
    ///   - [`version(impl Into<String>)`](crate::operation::create_cluster::builders::CreateClusterFluentBuilder::version) / [`set_version(Option<String>)`](crate::operation::create_cluster::builders::CreateClusterFluentBuilder::set_version):<br>required: **false**<br><p>The desired Kubernetes version for your cluster. If you don't specify a value here, the default version available in Amazon EKS is used.</p><note>  <p>The default version might not be the latest version available.</p> </note><br>
    ///   - [`role_arn(impl Into<String>)`](crate::operation::create_cluster::builders::CreateClusterFluentBuilder::role_arn) / [`set_role_arn(Option<String>)`](crate::operation::create_cluster::builders::CreateClusterFluentBuilder::set_role_arn):<br>required: **true**<br><p>The Amazon Resource Name (ARN) of the IAM role that provides permissions for the Kubernetes control plane to make calls to Amazon Web Services API operations on your behalf. For more information, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/service_IAM_role.html">Amazon EKS Service IAM Role</a> in the <i> <i>Amazon EKS User Guide</i> </i>.</p><br>
    ///   - [`resources_vpc_config(VpcConfigRequest)`](crate::operation::create_cluster::builders::CreateClusterFluentBuilder::resources_vpc_config) / [`set_resources_vpc_config(Option<VpcConfigRequest>)`](crate::operation::create_cluster::builders::CreateClusterFluentBuilder::set_resources_vpc_config):<br>required: **true**<br><p>The VPC configuration that's used by the cluster control plane. Amazon EKS VPC resources have specific requirements to work properly with Kubernetes. For more information, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/network_reqs.html">Cluster VPC Considerations</a> and <a href="https://docs.aws.amazon.com/eks/latest/userguide/sec-group-reqs.html">Cluster Security Group Considerations</a> in the <i>Amazon EKS User Guide</i>. You must specify at least two subnets. You can specify up to five security groups. However, we recommend that you use a dedicated security group for your cluster control plane.</p><br>
    ///   - [`kubernetes_network_config(KubernetesNetworkConfigRequest)`](crate::operation::create_cluster::builders::CreateClusterFluentBuilder::kubernetes_network_config) / [`set_kubernetes_network_config(Option<KubernetesNetworkConfigRequest>)`](crate::operation::create_cluster::builders::CreateClusterFluentBuilder::set_kubernetes_network_config):<br>required: **false**<br><p>The Kubernetes network configuration for the cluster.</p><br>
    ///   - [`logging(Logging)`](crate::operation::create_cluster::builders::CreateClusterFluentBuilder::logging) / [`set_logging(Option<Logging>)`](crate::operation::create_cluster::builders::CreateClusterFluentBuilder::set_logging):<br>required: **false**<br><p>Enable or disable exporting the Kubernetes control plane logs for your cluster to CloudWatch Logs . By default, cluster control plane logs aren't exported to CloudWatch Logs . For more information, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/control-plane-logs.html">Amazon EKS Cluster control plane logs</a> in the <i> <i>Amazon EKS User Guide</i> </i>.</p><note>  <p>CloudWatch Logs ingestion, archive storage, and data scanning rates apply to exported control plane logs. For more information, see <a href="http://aws.amazon.com/cloudwatch/pricing/">CloudWatch Pricing</a>.</p> </note><br>
    ///   - [`client_request_token(impl Into<String>)`](crate::operation::create_cluster::builders::CreateClusterFluentBuilder::client_request_token) / [`set_client_request_token(Option<String>)`](crate::operation::create_cluster::builders::CreateClusterFluentBuilder::set_client_request_token):<br>required: **false**<br><p>A unique, case-sensitive identifier that you provide to ensure the idempotency of the request.</p><br>
    ///   - [`tags(impl Into<String>, impl Into<String>)`](crate::operation::create_cluster::builders::CreateClusterFluentBuilder::tags) / [`set_tags(Option<HashMap::<String, String>>)`](crate::operation::create_cluster::builders::CreateClusterFluentBuilder::set_tags):<br>required: **false**<br><p>Metadata that assists with categorization and organization. Each tag consists of a key and an optional value. You define both. Tags don't propagate to any other cluster or Amazon Web Services resources.</p><br>
    ///   - [`encryption_config(EncryptionConfig)`](crate::operation::create_cluster::builders::CreateClusterFluentBuilder::encryption_config) / [`set_encryption_config(Option<Vec::<EncryptionConfig>>)`](crate::operation::create_cluster::builders::CreateClusterFluentBuilder::set_encryption_config):<br>required: **false**<br><p>The encryption configuration for the cluster.</p><br>
    ///   - [`outpost_config(OutpostConfigRequest)`](crate::operation::create_cluster::builders::CreateClusterFluentBuilder::outpost_config) / [`set_outpost_config(Option<OutpostConfigRequest>)`](crate::operation::create_cluster::builders::CreateClusterFluentBuilder::set_outpost_config):<br>required: **false**<br><p>An object representing the configuration of your local Amazon EKS cluster on an Amazon Web Services Outpost. Before creating a local cluster on an Outpost, review <a href="https://docs.aws.amazon.com/eks/latest/userguide/eks-outposts-local-cluster-overview.html">Local clusters for Amazon EKS on Amazon Web Services Outposts</a> in the <i>Amazon EKS User Guide</i>. This object isn't available for creating Amazon EKS clusters on the Amazon Web Services cloud.</p><br>
    ///   - [`access_config(CreateAccessConfigRequest)`](crate::operation::create_cluster::builders::CreateClusterFluentBuilder::access_config) / [`set_access_config(Option<CreateAccessConfigRequest>)`](crate::operation::create_cluster::builders::CreateClusterFluentBuilder::set_access_config):<br>required: **false**<br><p>The access configuration for the cluster.</p><br>
    ///   - [`bootstrap_self_managed_addons(bool)`](crate::operation::create_cluster::builders::CreateClusterFluentBuilder::bootstrap_self_managed_addons) / [`set_bootstrap_self_managed_addons(Option<bool>)`](crate::operation::create_cluster::builders::CreateClusterFluentBuilder::set_bootstrap_self_managed_addons):<br>required: **false**<br><p>If you set this value to <code>False</code> when creating a cluster, the default networking add-ons will not be installed.</p> <p>The default networking add-ons include <code>vpc-cni</code>, <code>coredns</code>, and <code>kube-proxy</code>.</p> <p>Use this option when you plan to install third-party alternative add-ons or self-manage the default networking add-ons.</p><br>
    ///   - [`upgrade_policy(UpgradePolicyRequest)`](crate::operation::create_cluster::builders::CreateClusterFluentBuilder::upgrade_policy) / [`set_upgrade_policy(Option<UpgradePolicyRequest>)`](crate::operation::create_cluster::builders::CreateClusterFluentBuilder::set_upgrade_policy):<br>required: **false**<br><p>New clusters, by default, have extended support enabled. You can disable extended support when creating a cluster by setting this value to <code>STANDARD</code>.</p><br>
    ///   - [`zonal_shift_config(ZonalShiftConfigRequest)`](crate::operation::create_cluster::builders::CreateClusterFluentBuilder::zonal_shift_config) / [`set_zonal_shift_config(Option<ZonalShiftConfigRequest>)`](crate::operation::create_cluster::builders::CreateClusterFluentBuilder::set_zonal_shift_config):<br>required: **false**<br><p>Enable or disable ARC zonal shift for the cluster. If zonal shift is enabled, Amazon Web Services configures zonal autoshift for the cluster.</p> <p>Zonal shift is a feature of Amazon Application Recovery Controller (ARC). ARC zonal shift is designed to be a temporary measure that allows you to move traffic for a resource away from an impaired AZ until the zonal shift expires or you cancel it. You can extend the zonal shift if necessary.</p> <p>You can start a zonal shift for an Amazon EKS cluster, or you can allow Amazon Web Services to do it for you by enabling <i>zonal autoshift</i>. This shift updates the flow of east-to-west network traffic in your cluster to only consider network endpoints for Pods running on worker nodes in healthy AZs. Additionally, any ALB or NLB handling ingress traffic for applications in your Amazon EKS cluster will automatically route traffic to targets in the healthy AZs. For more information about zonal shift in EKS, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/zone-shift.html">Learn about Amazon Application Recovery Controller (ARC) Zonal Shift in Amazon EKS</a> in the <i> <i>Amazon EKS User Guide</i> </i>.</p><br>
    ///   - [`remote_network_config(RemoteNetworkConfigRequest)`](crate::operation::create_cluster::builders::CreateClusterFluentBuilder::remote_network_config) / [`set_remote_network_config(Option<RemoteNetworkConfigRequest>)`](crate::operation::create_cluster::builders::CreateClusterFluentBuilder::set_remote_network_config):<br>required: **false**<br><p>The configuration in the cluster for EKS Hybrid Nodes. You can add, change, or remove this configuration after the cluster is created.</p><br>
    ///   - [`compute_config(ComputeConfigRequest)`](crate::operation::create_cluster::builders::CreateClusterFluentBuilder::compute_config) / [`set_compute_config(Option<ComputeConfigRequest>)`](crate::operation::create_cluster::builders::CreateClusterFluentBuilder::set_compute_config):<br>required: **false**<br><p>Enable or disable the compute capability of EKS Auto Mode when creating your EKS Auto Mode cluster. If the compute capability is enabled, EKS Auto Mode will create and delete EC2 Managed Instances in your Amazon Web Services account</p><br>
    ///   - [`storage_config(StorageConfigRequest)`](crate::operation::create_cluster::builders::CreateClusterFluentBuilder::storage_config) / [`set_storage_config(Option<StorageConfigRequest>)`](crate::operation::create_cluster::builders::CreateClusterFluentBuilder::set_storage_config):<br>required: **false**<br><p>Enable or disable the block storage capability of EKS Auto Mode when creating your EKS Auto Mode cluster. If the block storage capability is enabled, EKS Auto Mode will create and delete EBS volumes in your Amazon Web Services account.</p><br>
    ///   - [`deletion_protection(bool)`](crate::operation::create_cluster::builders::CreateClusterFluentBuilder::deletion_protection) / [`set_deletion_protection(Option<bool>)`](crate::operation::create_cluster::builders::CreateClusterFluentBuilder::set_deletion_protection):<br>required: **false**<br><p>Indicates whether to enable deletion protection for the cluster. When enabled, the cluster cannot be deleted unless deletion protection is first disabled. This helps prevent accidental cluster deletion. Default value is <code>false</code>.</p><br>
    /// - On success, responds with [`CreateClusterOutput`](crate::operation::create_cluster::CreateClusterOutput) with field(s):
    ///   - [`cluster(Option<Cluster>)`](crate::operation::create_cluster::CreateClusterOutput::cluster): <p>The full description of your new cluster.</p>
    /// - On failure, responds with [`SdkError<CreateClusterError>`](crate::operation::create_cluster::CreateClusterError)
    pub fn create_cluster(&self) -> crate::operation::create_cluster::builders::CreateClusterFluentBuilder {
        crate::operation::create_cluster::builders::CreateClusterFluentBuilder::new(self.handle.clone())
    }
}
