// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The namespace configuration request object for specifying a custom namespace when creating an addon.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct AddonNamespaceConfigRequest {
    /// <p>The name of the Kubernetes namespace to install the addon in. Must be a valid RFC 1123 DNS label.</p>
    pub namespace: ::std::option::Option<::std::string::String>,
}
impl AddonNamespaceConfigRequest {
    /// <p>The name of the Kubernetes namespace to install the addon in. Must be a valid RFC 1123 DNS label.</p>
    pub fn namespace(&self) -> ::std::option::Option<&str> {
        self.namespace.as_deref()
    }
}
impl AddonNamespaceConfigRequest {
    /// Creates a new builder-style object to manufacture [`AddonNamespaceConfigRequest`](crate::types::AddonNamespaceConfigRequest).
    pub fn builder() -> crate::types::builders::AddonNamespaceConfigRequestBuilder {
        crate::types::builders::AddonNamespaceConfigRequestBuilder::default()
    }
}

/// A builder for [`AddonNamespaceConfigRequest`](crate::types::AddonNamespaceConfigRequest).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct AddonNamespaceConfigRequestBuilder {
    pub(crate) namespace: ::std::option::Option<::std::string::String>,
}
impl AddonNamespaceConfigRequestBuilder {
    /// <p>The name of the Kubernetes namespace to install the addon in. Must be a valid RFC 1123 DNS label.</p>
    pub fn namespace(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.namespace = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of the Kubernetes namespace to install the addon in. Must be a valid RFC 1123 DNS label.</p>
    pub fn set_namespace(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.namespace = input;
        self
    }
    /// <p>The name of the Kubernetes namespace to install the addon in. Must be a valid RFC 1123 DNS label.</p>
    pub fn get_namespace(&self) -> &::std::option::Option<::std::string::String> {
        &self.namespace
    }
    /// Consumes the builder and constructs a [`AddonNamespaceConfigRequest`](crate::types::AddonNamespaceConfigRequest).
    pub fn build(self) -> crate::types::AddonNamespaceConfigRequest {
        crate::types::AddonNamespaceConfigRequest { namespace: self.namespace }
    }
}
