// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`GetStream`](crate::operation::get_stream::builders::GetStreamFluentBuilder) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::operation::get_stream::builders::GetStreamFluentBuilder::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`stream_arn(impl Into<String>)`](crate::operation::get_stream::builders::GetStreamFluentBuilder::stream_arn) / [`set_stream_arn(Option<String>)`](crate::operation::get_stream::builders::GetStreamFluentBuilder::set_stream_arn):<br>required: **true**<br><p>The Amazon Resource Name (ARN) of the stream for which detailed information is requested. This uniquely identifies the specific stream you want to get information about.</p><br>
    ///   - [`max_results(i32)`](crate::operation::get_stream::builders::GetStreamFluentBuilder::max_results) / [`set_max_results(Option<i32>)`](crate::operation::get_stream::builders::GetStreamFluentBuilder::set_max_results):<br>required: **false**<br><p>The maximum number of shard objects to return in a single <code>GetStream</code> request. Default value is 100. The minimum value is 1 and the maximum value is 100.</p><br>
    ///   - [`shard_filter(ShardFilter)`](crate::operation::get_stream::builders::GetStreamFluentBuilder::shard_filter) / [`set_shard_filter(Option<ShardFilter>)`](crate::operation::get_stream::builders::GetStreamFluentBuilder::set_shard_filter):<br>required: **false**<br><p>Optional filter criteria to apply when retrieving shards. You can filter shards based on their state or other attributes to narrow down the results returned by the <code>GetStream</code> operation.</p><br>
    ///   - [`next_token(impl Into<String>)`](crate::operation::get_stream::builders::GetStreamFluentBuilder::next_token) / [`set_next_token(Option<String>)`](crate::operation::get_stream::builders::GetStreamFluentBuilder::set_next_token):<br>required: **false**<br><p>An optional pagination token provided by a previous <code>GetStream</code> operation. If this parameter is specified, the response includes only records beyond the token, up to the value specified by <code>maxResults</code>.</p><br>
    /// - On success, responds with [`GetStreamOutput`](crate::operation::get_stream::GetStreamOutput) with field(s):
    ///   - [`stream_arn(String)`](crate::operation::get_stream::GetStreamOutput::stream_arn): <p>The Amazon Resource Name (ARN) that uniquely identifies the stream within Amazon Keyspaces. This ARN can be used in other API operations to reference this specific stream.</p>
    ///   - [`stream_label(String)`](crate::operation::get_stream::GetStreamOutput::stream_label): <p>A timestamp that serves as a unique identifier for this stream, used for debugging and monitoring purposes. The stream label represents the point in time when the stream was created.</p>
    ///   - [`stream_status(StreamStatus)`](crate::operation::get_stream::GetStreamOutput::stream_status): <p>The current status of the stream. Values can be <code>ENABLING</code>, <code>ENABLED</code>, <code>DISABLING</code>, or <code>DISABLED</code>. Operations on the stream depend on its current status.</p>
    ///   - [`stream_view_type(StreamViewType)`](crate::operation::get_stream::GetStreamOutput::stream_view_type): <p>The format of the data records in this stream. Currently, this can be one of the following options:</p> <ul>  <li>   <p><code>NEW_AND_OLD_IMAGES</code> - both versions of the row, before and after the change. This is the default.</p></li>  <li>   <p><code>NEW_IMAGE</code> - the version of the row after the change.</p></li>  <li>   <p><code>OLD_IMAGE</code> - the version of the row before the change.</p></li>  <li>   <p><code>KEYS_ONLY</code> - the partition and clustering keys of the row that was changed.</p></li> </ul>
    ///   - [`creation_request_date_time(DateTime)`](crate::operation::get_stream::GetStreamOutput::creation_request_date_time): <p>The date and time when the request to create this stream was issued. The value is represented in ISO 8601 format.</p>
    ///   - [`keyspace_name(String)`](crate::operation::get_stream::GetStreamOutput::keyspace_name): <p>The name of the keyspace containing the table associated with this stream. The keyspace name is part of the table's hierarchical identifier in Amazon Keyspaces.</p>
    ///   - [`table_name(String)`](crate::operation::get_stream::GetStreamOutput::table_name): <p>The name of the table associated with this stream. The stream captures changes to rows in this Amazon Keyspaces table.</p>
    ///   - [`shards(Option<Vec::<Shard>>)`](crate::operation::get_stream::GetStreamOutput::shards): <p>An array of shard objects associated with this stream. Each shard contains a subset of the stream's data records and has its own unique identifier. The collection of shards represents the complete stream data.</p>
    ///   - [`next_token(Option<String>)`](crate::operation::get_stream::GetStreamOutput::next_token): <p>A pagination token that can be used in a subsequent <code>GetStream</code> request. This token is returned if the response contains more shards than can be returned in a single response.</p>
    /// - On failure, responds with [`SdkError<GetStreamError>`](crate::operation::get_stream::GetStreamError)
    pub fn get_stream(&self) -> crate::operation::get_stream::builders::GetStreamFluentBuilder {
        crate::operation::get_stream::builders::GetStreamFluentBuilder::new(self.handle.clone())
    }
}
