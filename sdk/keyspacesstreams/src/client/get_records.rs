// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`GetRecords`](crate::operation::get_records::builders::GetRecordsFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`shard_iterator(impl Into<String>)`](crate::operation::get_records::builders::GetRecordsFluentBuilder::shard_iterator) / [`set_shard_iterator(Option<String>)`](crate::operation::get_records::builders::GetRecordsFluentBuilder::set_shard_iterator):<br>required: **true**<br><p>The unique identifier of the shard iterator. A shard iterator specifies the position in the shard from which you want to start reading data records sequentially. You obtain this value by calling the <code>GetShardIterator</code> operation. Each shard iterator is valid for 5 minutes after creation.</p><br>
    ///   - [`max_results(i32)`](crate::operation::get_records::builders::GetRecordsFluentBuilder::max_results) / [`set_max_results(Option<i32>)`](crate::operation::get_records::builders::GetRecordsFluentBuilder::set_max_results):<br>required: **false**<br><p>The maximum number of records to return in a single <code>GetRecords</code> request. Default value is 1000. You can specify a limit between 1 and 10000, but the actual number returned might be less than the specified maximum if the size of the data for the returned records exceeds the internal size limit.</p><br>
    /// - On success, responds with [`GetRecordsOutput`](crate::operation::get_records::GetRecordsOutput) with field(s):
    ///   - [`change_records(Option<Vec::<Record>>)`](crate::operation::get_records::GetRecordsOutput::change_records): <p>An array of change data records retrieved from the specified shard. Each record represents a single data modification (insert, update, or delete) to a row in the Amazon Keyspaces table. Records include the primary key columns and information about what data was modified.</p>
    ///   - [`next_shard_iterator(Option<String>)`](crate::operation::get_records::GetRecordsOutput::next_shard_iterator): <p>The next position in the shard from which to start sequentially reading data records. If null, the shard has been closed and the requested iterator doesn't return any more data.</p>
    /// - On failure, responds with [`SdkError<GetRecordsError>`](crate::operation::get_records::GetRecordsError)
    pub fn get_records(&self) -> crate::operation::get_records::builders::GetRecordsFluentBuilder {
        crate::operation::get_records::builders::GetRecordsFluentBuilder::new(self.handle.clone())
    }
}
