// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateSession`](crate::operation::create_session::builders::CreateSessionFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`client_token(impl Into<String>)`](crate::operation::create_session::builders::CreateSessionFluentBuilder::client_token) / [`set_client_token(Option<String>)`](crate::operation::create_session::builders::CreateSessionFluentBuilder::set_client_token):<br>required: **false**<br><p>A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. If not provided, the Amazon Web Services SDK populates this field. For more information about idempotency, see <a href="http://aws.amazon.com/builders-library/making-retries-safe-with-idempotent-APIs/">Making retries safe with idempotent APIs</a>.</p><br>
    ///   - [`assistant_id(impl Into<String>)`](crate::operation::create_session::builders::CreateSessionFluentBuilder::assistant_id) / [`set_assistant_id(Option<String>)`](crate::operation::create_session::builders::CreateSessionFluentBuilder::set_assistant_id):<br>required: **true**<br><p>The identifier of the Amazon Q in Connect assistant. Can be either the ID or the ARN. URLs cannot contain the ARN.</p><br>
    ///   - [`name(impl Into<String>)`](crate::operation::create_session::builders::CreateSessionFluentBuilder::name) / [`set_name(Option<String>)`](crate::operation::create_session::builders::CreateSessionFluentBuilder::set_name):<br>required: **true**<br><p>The name of the session.</p><br>
    ///   - [`description(impl Into<String>)`](crate::operation::create_session::builders::CreateSessionFluentBuilder::description) / [`set_description(Option<String>)`](crate::operation::create_session::builders::CreateSessionFluentBuilder::set_description):<br>required: **false**<br><p>The description.</p><br>
    ///   - [`tags(impl Into<String>, impl Into<String>)`](crate::operation::create_session::builders::CreateSessionFluentBuilder::tags) / [`set_tags(Option<HashMap::<String, String>>)`](crate::operation::create_session::builders::CreateSessionFluentBuilder::set_tags):<br>required: **false**<br><p>The tags used to organize, track, or control access for this resource.</p><br>
    ///   - [`tag_filter(TagFilter)`](crate::operation::create_session::builders::CreateSessionFluentBuilder::tag_filter) / [`set_tag_filter(Option<TagFilter>)`](crate::operation::create_session::builders::CreateSessionFluentBuilder::set_tag_filter):<br>required: **false**<br><p>An object that can be used to specify Tag conditions.</p><br>
    ///   - [`ai_agent_configuration(AiAgentType, AiAgentConfigurationData)`](crate::operation::create_session::builders::CreateSessionFluentBuilder::ai_agent_configuration) / [`set_ai_agent_configuration(Option<HashMap::<AiAgentType, AiAgentConfigurationData>>)`](crate::operation::create_session::builders::CreateSessionFluentBuilder::set_ai_agent_configuration):<br>required: **false**<br><p>The configuration of the AI Agents (mapped by AI Agent Type to AI Agent version) that should be used by Amazon Q in Connect for this Session.</p><br>
    ///   - [`contact_arn(impl Into<String>)`](crate::operation::create_session::builders::CreateSessionFluentBuilder::contact_arn) / [`set_contact_arn(Option<String>)`](crate::operation::create_session::builders::CreateSessionFluentBuilder::set_contact_arn):<br>required: **false**<br><p>The Amazon Resource Name (ARN) of the email contact in Amazon Connect. Used to retrieve email content and establish session context for AI-powered email assistance.</p><br>
    /// - On success, responds with [`CreateSessionOutput`](crate::operation::create_session::CreateSessionOutput) with field(s):
    ///   - [`session(Option<SessionData>)`](crate::operation::create_session::CreateSessionOutput::session): <p>The session.</p>
    /// - On failure, responds with [`SdkError<CreateSessionError>`](crate::operation::create_session::CreateSessionError)
    pub fn create_session(&self) -> crate::operation::create_session::builders::CreateSessionFluentBuilder {
        crate::operation::create_session::builders::CreateSessionFluentBuilder::new(self.handle.clone())
    }
}
