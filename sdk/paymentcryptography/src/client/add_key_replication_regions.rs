// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`AddKeyReplicationRegions`](crate::operation::add_key_replication_regions::builders::AddKeyReplicationRegionsFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`key_identifier(impl Into<String>)`](crate::operation::add_key_replication_regions::builders::AddKeyReplicationRegionsFluentBuilder::key_identifier) / [`set_key_identifier(Option<String>)`](crate::operation::add_key_replication_regions::builders::AddKeyReplicationRegionsFluentBuilder::set_key_identifier):<br>required: **true**<br><p>The key identifier (ARN or alias) of the key for which to add replication regions.</p> <p>This key must exist and be in a valid state for replication operations.</p><br>
    ///   - [`replication_regions(impl Into<String>)`](crate::operation::add_key_replication_regions::builders::AddKeyReplicationRegionsFluentBuilder::replication_regions) / [`set_replication_regions(Option<Vec::<String>>)`](crate::operation::add_key_replication_regions::builders::AddKeyReplicationRegionsFluentBuilder::set_replication_regions):<br>required: **true**<br><p>The list of Amazon Web Services Regions to add to the key's replication configuration.</p> <p>Each region must be a valid Amazon Web Services Region where Amazon Web Services Payment Cryptography is available. The key will be replicated to these regions, allowing cryptographic operations to be performed closer to your applications.</p><br>
    /// - On success, responds with [`AddKeyReplicationRegionsOutput`](crate::operation::add_key_replication_regions::AddKeyReplicationRegionsOutput) with field(s):
    ///   - [`key(Option<Key>)`](crate::operation::add_key_replication_regions::AddKeyReplicationRegionsOutput::key): <p>The updated key metadata after adding the replication regions.</p> <p>This includes the current state of the key and its replication configuration.</p>
    /// - On failure, responds with [`SdkError<AddKeyReplicationRegionsError>`](crate::operation::add_key_replication_regions::AddKeyReplicationRegionsError)
    pub fn add_key_replication_regions(&self) -> crate::operation::add_key_replication_regions::builders::AddKeyReplicationRegionsFluentBuilder {
        crate::operation::add_key_replication_regions::builders::AddKeyReplicationRegionsFluentBuilder::new(self.handle.clone())
    }
}
