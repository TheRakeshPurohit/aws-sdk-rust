// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_describe_stream_input_input(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::operation::describe_stream::DescribeStreamInput,
) -> ::std::result::Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    if let Some(var_1) = &input.stream_arn {
        object.key("StreamArn").string(var_1.as_str());
    }
    if let Some(var_2) = &input.limit {
        object.key("Limit").number(
            #[allow(clippy::useless_conversion)]
            ::aws_smithy_types::Number::NegInt((*var_2).into()),
        );
    }
    if let Some(var_3) = &input.exclusive_start_shard_id {
        object.key("ExclusiveStartShardId").string(var_3.as_str());
    }
    if let Some(var_4) = &input.shard_filter {
        #[allow(unused_mut)]
        let mut object_5 = object.key("ShardFilter").start_object();
        crate::protocol_serde::shape_shard_filter::ser_shard_filter(&mut object_5, var_4)?;
        object_5.finish();
    }
    Ok(())
}
