// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The configuration options for a service managed fleet's VPC.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct VpcConfiguration {
    /// <p>The ARNs of the VPC Lattice resource configurations attached to the fleet.</p>
    pub resource_configuration_arns: ::std::option::Option<::std::vec::Vec<::std::string::String>>,
}
impl VpcConfiguration {
    /// <p>The ARNs of the VPC Lattice resource configurations attached to the fleet.</p>
    ///
    /// If no value was sent for this field, a default will be set. If you want to determine if no value was sent, use `.resource_configuration_arns.is_none()`.
    pub fn resource_configuration_arns(&self) -> &[::std::string::String] {
        self.resource_configuration_arns.as_deref().unwrap_or_default()
    }
}
impl VpcConfiguration {
    /// Creates a new builder-style object to manufacture [`VpcConfiguration`](crate::types::VpcConfiguration).
    pub fn builder() -> crate::types::builders::VpcConfigurationBuilder {
        crate::types::builders::VpcConfigurationBuilder::default()
    }
}

/// A builder for [`VpcConfiguration`](crate::types::VpcConfiguration).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct VpcConfigurationBuilder {
    pub(crate) resource_configuration_arns: ::std::option::Option<::std::vec::Vec<::std::string::String>>,
}
impl VpcConfigurationBuilder {
    /// Appends an item to `resource_configuration_arns`.
    ///
    /// To override the contents of this collection use [`set_resource_configuration_arns`](Self::set_resource_configuration_arns).
    ///
    /// <p>The ARNs of the VPC Lattice resource configurations attached to the fleet.</p>
    pub fn resource_configuration_arns(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        let mut v = self.resource_configuration_arns.unwrap_or_default();
        v.push(input.into());
        self.resource_configuration_arns = ::std::option::Option::Some(v);
        self
    }
    /// <p>The ARNs of the VPC Lattice resource configurations attached to the fleet.</p>
    pub fn set_resource_configuration_arns(mut self, input: ::std::option::Option<::std::vec::Vec<::std::string::String>>) -> Self {
        self.resource_configuration_arns = input;
        self
    }
    /// <p>The ARNs of the VPC Lattice resource configurations attached to the fleet.</p>
    pub fn get_resource_configuration_arns(&self) -> &::std::option::Option<::std::vec::Vec<::std::string::String>> {
        &self.resource_configuration_arns
    }
    /// Consumes the builder and constructs a [`VpcConfiguration`](crate::types::VpcConfiguration).
    pub fn build(self) -> crate::types::VpcConfiguration {
        crate::types::VpcConfiguration {
            resource_configuration_arns: self.resource_configuration_arns,
        }
    }
}
