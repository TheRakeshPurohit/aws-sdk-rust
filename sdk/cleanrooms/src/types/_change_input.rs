// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Specifies a change to apply to a collaboration.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ChangeInput {
    /// <p>The type of specification for the change. Currently supports <code>MEMBER</code> for member-related changes.</p>
    pub specification_type: crate::types::ChangeSpecificationType,
    /// <p>The specification details for the change. The structure depends on the specification type.</p>
    pub specification: ::std::option::Option<crate::types::ChangeSpecification>,
}
impl ChangeInput {
    /// <p>The type of specification for the change. Currently supports <code>MEMBER</code> for member-related changes.</p>
    pub fn specification_type(&self) -> &crate::types::ChangeSpecificationType {
        &self.specification_type
    }
    /// <p>The specification details for the change. The structure depends on the specification type.</p>
    pub fn specification(&self) -> ::std::option::Option<&crate::types::ChangeSpecification> {
        self.specification.as_ref()
    }
}
impl ChangeInput {
    /// Creates a new builder-style object to manufacture [`ChangeInput`](crate::types::ChangeInput).
    pub fn builder() -> crate::types::builders::ChangeInputBuilder {
        crate::types::builders::ChangeInputBuilder::default()
    }
}

/// A builder for [`ChangeInput`](crate::types::ChangeInput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct ChangeInputBuilder {
    pub(crate) specification_type: ::std::option::Option<crate::types::ChangeSpecificationType>,
    pub(crate) specification: ::std::option::Option<crate::types::ChangeSpecification>,
}
impl ChangeInputBuilder {
    /// <p>The type of specification for the change. Currently supports <code>MEMBER</code> for member-related changes.</p>
    /// This field is required.
    pub fn specification_type(mut self, input: crate::types::ChangeSpecificationType) -> Self {
        self.specification_type = ::std::option::Option::Some(input);
        self
    }
    /// <p>The type of specification for the change. Currently supports <code>MEMBER</code> for member-related changes.</p>
    pub fn set_specification_type(mut self, input: ::std::option::Option<crate::types::ChangeSpecificationType>) -> Self {
        self.specification_type = input;
        self
    }
    /// <p>The type of specification for the change. Currently supports <code>MEMBER</code> for member-related changes.</p>
    pub fn get_specification_type(&self) -> &::std::option::Option<crate::types::ChangeSpecificationType> {
        &self.specification_type
    }
    /// <p>The specification details for the change. The structure depends on the specification type.</p>
    /// This field is required.
    pub fn specification(mut self, input: crate::types::ChangeSpecification) -> Self {
        self.specification = ::std::option::Option::Some(input);
        self
    }
    /// <p>The specification details for the change. The structure depends on the specification type.</p>
    pub fn set_specification(mut self, input: ::std::option::Option<crate::types::ChangeSpecification>) -> Self {
        self.specification = input;
        self
    }
    /// <p>The specification details for the change. The structure depends on the specification type.</p>
    pub fn get_specification(&self) -> &::std::option::Option<crate::types::ChangeSpecification> {
        &self.specification
    }
    /// Consumes the builder and constructs a [`ChangeInput`](crate::types::ChangeInput).
    /// This method will fail if any of the following fields are not set:
    /// - [`specification_type`](crate::types::builders::ChangeInputBuilder::specification_type)
    pub fn build(self) -> ::std::result::Result<crate::types::ChangeInput, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::ChangeInput {
            specification_type: self.specification_type.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "specification_type",
                    "specification_type was not specified but it is required when building ChangeInput",
                )
            })?,
            specification: self.specification,
        })
    }
}
