// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Input parameters for privacy budget templates that support access budgets functionality, enabling enhanced budget management capabilities.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct AccessBudgetsPrivacyTemplateParametersInput {
    /// <p>An array of budget parameters that define the access budget configuration for the privacy template.</p>
    pub budget_parameters: ::std::vec::Vec<crate::types::BudgetParameter>,
    /// <p>The Amazon Resource Name (ARN) of the resource associated with this privacy budget template.</p>
    pub resource_arn: ::std::string::String,
}
impl AccessBudgetsPrivacyTemplateParametersInput {
    /// <p>An array of budget parameters that define the access budget configuration for the privacy template.</p>
    pub fn budget_parameters(&self) -> &[crate::types::BudgetParameter] {
        use std::ops::Deref;
        self.budget_parameters.deref()
    }
    /// <p>The Amazon Resource Name (ARN) of the resource associated with this privacy budget template.</p>
    pub fn resource_arn(&self) -> &str {
        use std::ops::Deref;
        self.resource_arn.deref()
    }
}
impl AccessBudgetsPrivacyTemplateParametersInput {
    /// Creates a new builder-style object to manufacture [`AccessBudgetsPrivacyTemplateParametersInput`](crate::types::AccessBudgetsPrivacyTemplateParametersInput).
    pub fn builder() -> crate::types::builders::AccessBudgetsPrivacyTemplateParametersInputBuilder {
        crate::types::builders::AccessBudgetsPrivacyTemplateParametersInputBuilder::default()
    }
}

/// A builder for [`AccessBudgetsPrivacyTemplateParametersInput`](crate::types::AccessBudgetsPrivacyTemplateParametersInput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct AccessBudgetsPrivacyTemplateParametersInputBuilder {
    pub(crate) budget_parameters: ::std::option::Option<::std::vec::Vec<crate::types::BudgetParameter>>,
    pub(crate) resource_arn: ::std::option::Option<::std::string::String>,
}
impl AccessBudgetsPrivacyTemplateParametersInputBuilder {
    /// Appends an item to `budget_parameters`.
    ///
    /// To override the contents of this collection use [`set_budget_parameters`](Self::set_budget_parameters).
    ///
    /// <p>An array of budget parameters that define the access budget configuration for the privacy template.</p>
    pub fn budget_parameters(mut self, input: crate::types::BudgetParameter) -> Self {
        let mut v = self.budget_parameters.unwrap_or_default();
        v.push(input);
        self.budget_parameters = ::std::option::Option::Some(v);
        self
    }
    /// <p>An array of budget parameters that define the access budget configuration for the privacy template.</p>
    pub fn set_budget_parameters(mut self, input: ::std::option::Option<::std::vec::Vec<crate::types::BudgetParameter>>) -> Self {
        self.budget_parameters = input;
        self
    }
    /// <p>An array of budget parameters that define the access budget configuration for the privacy template.</p>
    pub fn get_budget_parameters(&self) -> &::std::option::Option<::std::vec::Vec<crate::types::BudgetParameter>> {
        &self.budget_parameters
    }
    /// <p>The Amazon Resource Name (ARN) of the resource associated with this privacy budget template.</p>
    /// This field is required.
    pub fn resource_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.resource_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the resource associated with this privacy budget template.</p>
    pub fn set_resource_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.resource_arn = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the resource associated with this privacy budget template.</p>
    pub fn get_resource_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.resource_arn
    }
    /// Consumes the builder and constructs a [`AccessBudgetsPrivacyTemplateParametersInput`](crate::types::AccessBudgetsPrivacyTemplateParametersInput).
    /// This method will fail if any of the following fields are not set:
    /// - [`budget_parameters`](crate::types::builders::AccessBudgetsPrivacyTemplateParametersInputBuilder::budget_parameters)
    /// - [`resource_arn`](crate::types::builders::AccessBudgetsPrivacyTemplateParametersInputBuilder::resource_arn)
    pub fn build(
        self,
    ) -> ::std::result::Result<crate::types::AccessBudgetsPrivacyTemplateParametersInput, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::AccessBudgetsPrivacyTemplateParametersInput {
            budget_parameters: self.budget_parameters.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "budget_parameters",
                    "budget_parameters was not specified but it is required when building AccessBudgetsPrivacyTemplateParametersInput",
                )
            })?,
            resource_arn: self.resource_arn.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "resource_arn",
                    "resource_arn was not specified but it is required when building AccessBudgetsPrivacyTemplateParametersInput",
                )
            })?,
        })
    }
}
