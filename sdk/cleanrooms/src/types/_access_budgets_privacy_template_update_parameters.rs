// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Update parameters for privacy budget templates with access budgets functionality, allowing modification of existing budget configurations.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct AccessBudgetsPrivacyTemplateUpdateParameters {
    /// <p>Updated array of budget parameters for the access budget configuration.</p>
    pub budget_parameters: ::std::vec::Vec<crate::types::BudgetParameter>,
}
impl AccessBudgetsPrivacyTemplateUpdateParameters {
    /// <p>Updated array of budget parameters for the access budget configuration.</p>
    pub fn budget_parameters(&self) -> &[crate::types::BudgetParameter] {
        use std::ops::Deref;
        self.budget_parameters.deref()
    }
}
impl AccessBudgetsPrivacyTemplateUpdateParameters {
    /// Creates a new builder-style object to manufacture [`AccessBudgetsPrivacyTemplateUpdateParameters`](crate::types::AccessBudgetsPrivacyTemplateUpdateParameters).
    pub fn builder() -> crate::types::builders::AccessBudgetsPrivacyTemplateUpdateParametersBuilder {
        crate::types::builders::AccessBudgetsPrivacyTemplateUpdateParametersBuilder::default()
    }
}

/// A builder for [`AccessBudgetsPrivacyTemplateUpdateParameters`](crate::types::AccessBudgetsPrivacyTemplateUpdateParameters).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct AccessBudgetsPrivacyTemplateUpdateParametersBuilder {
    pub(crate) budget_parameters: ::std::option::Option<::std::vec::Vec<crate::types::BudgetParameter>>,
}
impl AccessBudgetsPrivacyTemplateUpdateParametersBuilder {
    /// Appends an item to `budget_parameters`.
    ///
    /// To override the contents of this collection use [`set_budget_parameters`](Self::set_budget_parameters).
    ///
    /// <p>Updated array of budget parameters for the access budget configuration.</p>
    pub fn budget_parameters(mut self, input: crate::types::BudgetParameter) -> Self {
        let mut v = self.budget_parameters.unwrap_or_default();
        v.push(input);
        self.budget_parameters = ::std::option::Option::Some(v);
        self
    }
    /// <p>Updated array of budget parameters for the access budget configuration.</p>
    pub fn set_budget_parameters(mut self, input: ::std::option::Option<::std::vec::Vec<crate::types::BudgetParameter>>) -> Self {
        self.budget_parameters = input;
        self
    }
    /// <p>Updated array of budget parameters for the access budget configuration.</p>
    pub fn get_budget_parameters(&self) -> &::std::option::Option<::std::vec::Vec<crate::types::BudgetParameter>> {
        &self.budget_parameters
    }
    /// Consumes the builder and constructs a [`AccessBudgetsPrivacyTemplateUpdateParameters`](crate::types::AccessBudgetsPrivacyTemplateUpdateParameters).
    /// This method will fail if any of the following fields are not set:
    /// - [`budget_parameters`](crate::types::builders::AccessBudgetsPrivacyTemplateUpdateParametersBuilder::budget_parameters)
    pub fn build(
        self,
    ) -> ::std::result::Result<crate::types::AccessBudgetsPrivacyTemplateUpdateParameters, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::AccessBudgetsPrivacyTemplateUpdateParameters {
            budget_parameters: self.budget_parameters.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "budget_parameters",
                    "budget_parameters was not specified but it is required when building AccessBudgetsPrivacyTemplateUpdateParameters",
                )
            })?,
        })
    }
}
