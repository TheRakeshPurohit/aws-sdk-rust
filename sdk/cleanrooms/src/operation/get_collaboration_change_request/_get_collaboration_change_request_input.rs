// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct GetCollaborationChangeRequestInput {
    /// <p>The identifier of the collaboration that the change request is made against.</p>
    pub collaboration_identifier: ::std::option::Option<::std::string::String>,
    /// <p>A unique identifier for the change request to retrieve.</p>
    pub change_request_identifier: ::std::option::Option<::std::string::String>,
}
impl GetCollaborationChangeRequestInput {
    /// <p>The identifier of the collaboration that the change request is made against.</p>
    pub fn collaboration_identifier(&self) -> ::std::option::Option<&str> {
        self.collaboration_identifier.as_deref()
    }
    /// <p>A unique identifier for the change request to retrieve.</p>
    pub fn change_request_identifier(&self) -> ::std::option::Option<&str> {
        self.change_request_identifier.as_deref()
    }
}
impl GetCollaborationChangeRequestInput {
    /// Creates a new builder-style object to manufacture [`GetCollaborationChangeRequestInput`](crate::operation::get_collaboration_change_request::GetCollaborationChangeRequestInput).
    pub fn builder() -> crate::operation::get_collaboration_change_request::builders::GetCollaborationChangeRequestInputBuilder {
        crate::operation::get_collaboration_change_request::builders::GetCollaborationChangeRequestInputBuilder::default()
    }
}

/// A builder for [`GetCollaborationChangeRequestInput`](crate::operation::get_collaboration_change_request::GetCollaborationChangeRequestInput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct GetCollaborationChangeRequestInputBuilder {
    pub(crate) collaboration_identifier: ::std::option::Option<::std::string::String>,
    pub(crate) change_request_identifier: ::std::option::Option<::std::string::String>,
}
impl GetCollaborationChangeRequestInputBuilder {
    /// <p>The identifier of the collaboration that the change request is made against.</p>
    /// This field is required.
    pub fn collaboration_identifier(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.collaboration_identifier = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The identifier of the collaboration that the change request is made against.</p>
    pub fn set_collaboration_identifier(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.collaboration_identifier = input;
        self
    }
    /// <p>The identifier of the collaboration that the change request is made against.</p>
    pub fn get_collaboration_identifier(&self) -> &::std::option::Option<::std::string::String> {
        &self.collaboration_identifier
    }
    /// <p>A unique identifier for the change request to retrieve.</p>
    /// This field is required.
    pub fn change_request_identifier(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.change_request_identifier = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>A unique identifier for the change request to retrieve.</p>
    pub fn set_change_request_identifier(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.change_request_identifier = input;
        self
    }
    /// <p>A unique identifier for the change request to retrieve.</p>
    pub fn get_change_request_identifier(&self) -> &::std::option::Option<::std::string::String> {
        &self.change_request_identifier
    }
    /// Consumes the builder and constructs a [`GetCollaborationChangeRequestInput`](crate::operation::get_collaboration_change_request::GetCollaborationChangeRequestInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::get_collaboration_change_request::GetCollaborationChangeRequestInput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(crate::operation::get_collaboration_change_request::GetCollaborationChangeRequestInput {
            collaboration_identifier: self.collaboration_identifier,
            change_request_identifier: self.change_request_identifier,
        })
    }
}
