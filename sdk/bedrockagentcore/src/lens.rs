// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub(crate) fn reflens_list_actors_output_output_next_token(
    input: &crate::operation::list_actors::ListActorsOutput,
) -> ::std::option::Option<&::std::string::String> {
    let input = match &input.next_token {
        ::std::option::Option::None => return ::std::option::Option::None,
        ::std::option::Option::Some(t) => t,
    };
    ::std::option::Option::Some(input)
}

pub(crate) fn reflens_list_events_output_output_next_token(
    input: &crate::operation::list_events::ListEventsOutput,
) -> ::std::option::Option<&::std::string::String> {
    let input = match &input.next_token {
        ::std::option::Option::None => return ::std::option::Option::None,
        ::std::option::Option::Some(t) => t,
    };
    ::std::option::Option::Some(input)
}

pub(crate) fn reflens_list_memory_records_output_output_next_token(
    input: &crate::operation::list_memory_records::ListMemoryRecordsOutput,
) -> ::std::option::Option<&::std::string::String> {
    let input = match &input.next_token {
        ::std::option::Option::None => return ::std::option::Option::None,
        ::std::option::Option::Some(t) => t,
    };
    ::std::option::Option::Some(input)
}

pub(crate) fn reflens_list_sessions_output_output_next_token(
    input: &crate::operation::list_sessions::ListSessionsOutput,
) -> ::std::option::Option<&::std::string::String> {
    let input = match &input.next_token {
        ::std::option::Option::None => return ::std::option::Option::None,
        ::std::option::Option::Some(t) => t,
    };
    ::std::option::Option::Some(input)
}

pub(crate) fn reflens_retrieve_memory_records_output_output_next_token(
    input: &crate::operation::retrieve_memory_records::RetrieveMemoryRecordsOutput,
) -> ::std::option::Option<&::std::string::String> {
    let input = match &input.next_token {
        ::std::option::Option::None => return ::std::option::Option::None,
        ::std::option::Option::Some(t) => t,
    };
    ::std::option::Option::Some(input)
}

pub(crate) fn lens_list_actors_output_output_actor_summaries(
    input: crate::operation::list_actors::ListActorsOutput,
) -> ::std::option::Option<::std::vec::Vec<crate::types::ActorSummary>> {
    let input = input.actor_summaries;
    ::std::option::Option::Some(input)
}

pub(crate) fn lens_list_events_output_output_events(
    input: crate::operation::list_events::ListEventsOutput,
) -> ::std::option::Option<::std::vec::Vec<crate::types::Event>> {
    let input = input.events;
    ::std::option::Option::Some(input)
}

pub(crate) fn lens_list_memory_records_output_output_memory_record_summaries(
    input: crate::operation::list_memory_records::ListMemoryRecordsOutput,
) -> ::std::option::Option<::std::vec::Vec<crate::types::MemoryRecordSummary>> {
    let input = input.memory_record_summaries;
    ::std::option::Option::Some(input)
}

pub(crate) fn lens_list_sessions_output_output_session_summaries(
    input: crate::operation::list_sessions::ListSessionsOutput,
) -> ::std::option::Option<::std::vec::Vec<crate::types::SessionSummary>> {
    let input = input.session_summaries;
    ::std::option::Option::Some(input)
}

pub(crate) fn lens_retrieve_memory_records_output_output_memory_record_summaries(
    input: crate::operation::retrieve_memory_records::RetrieveMemoryRecordsOutput,
) -> ::std::option::Option<::std::vec::Vec<crate::types::MemoryRecordSummary>> {
    let input = input.memory_record_summaries;
    ::std::option::Option::Some(input)
}
