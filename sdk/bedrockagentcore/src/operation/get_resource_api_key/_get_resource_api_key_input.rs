// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq)]
pub struct GetResourceApiKeyInput {
    /// <p>The identity token of the workload from which you want to retrieve the API key.</p>
    pub workload_identity_token: ::std::option::Option<::std::string::String>,
    /// <p>The credential provider name for the resource from which you are retrieving the API key.</p>
    pub resource_credential_provider_name: ::std::option::Option<::std::string::String>,
}
impl GetResourceApiKeyInput {
    /// <p>The identity token of the workload from which you want to retrieve the API key.</p>
    pub fn workload_identity_token(&self) -> ::std::option::Option<&str> {
        self.workload_identity_token.as_deref()
    }
    /// <p>The credential provider name for the resource from which you are retrieving the API key.</p>
    pub fn resource_credential_provider_name(&self) -> ::std::option::Option<&str> {
        self.resource_credential_provider_name.as_deref()
    }
}
impl ::std::fmt::Debug for GetResourceApiKeyInput {
    fn fmt(&self, f: &mut ::std::fmt::Formatter<'_>) -> ::std::fmt::Result {
        let mut formatter = f.debug_struct("GetResourceApiKeyInput");
        formatter.field("workload_identity_token", &"*** Sensitive Data Redacted ***");
        formatter.field("resource_credential_provider_name", &self.resource_credential_provider_name);
        formatter.finish()
    }
}
impl GetResourceApiKeyInput {
    /// Creates a new builder-style object to manufacture [`GetResourceApiKeyInput`](crate::operation::get_resource_api_key::GetResourceApiKeyInput).
    pub fn builder() -> crate::operation::get_resource_api_key::builders::GetResourceApiKeyInputBuilder {
        crate::operation::get_resource_api_key::builders::GetResourceApiKeyInputBuilder::default()
    }
}

/// A builder for [`GetResourceApiKeyInput`](crate::operation::get_resource_api_key::GetResourceApiKeyInput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default)]
#[non_exhaustive]
pub struct GetResourceApiKeyInputBuilder {
    pub(crate) workload_identity_token: ::std::option::Option<::std::string::String>,
    pub(crate) resource_credential_provider_name: ::std::option::Option<::std::string::String>,
}
impl GetResourceApiKeyInputBuilder {
    /// <p>The identity token of the workload from which you want to retrieve the API key.</p>
    /// This field is required.
    pub fn workload_identity_token(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.workload_identity_token = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The identity token of the workload from which you want to retrieve the API key.</p>
    pub fn set_workload_identity_token(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.workload_identity_token = input;
        self
    }
    /// <p>The identity token of the workload from which you want to retrieve the API key.</p>
    pub fn get_workload_identity_token(&self) -> &::std::option::Option<::std::string::String> {
        &self.workload_identity_token
    }
    /// <p>The credential provider name for the resource from which you are retrieving the API key.</p>
    /// This field is required.
    pub fn resource_credential_provider_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.resource_credential_provider_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The credential provider name for the resource from which you are retrieving the API key.</p>
    pub fn set_resource_credential_provider_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.resource_credential_provider_name = input;
        self
    }
    /// <p>The credential provider name for the resource from which you are retrieving the API key.</p>
    pub fn get_resource_credential_provider_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.resource_credential_provider_name
    }
    /// Consumes the builder and constructs a [`GetResourceApiKeyInput`](crate::operation::get_resource_api_key::GetResourceApiKeyInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<crate::operation::get_resource_api_key::GetResourceApiKeyInput, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::operation::get_resource_api_key::GetResourceApiKeyInput {
            workload_identity_token: self.workload_identity_token,
            resource_credential_provider_name: self.resource_credential_provider_name,
        })
    }
}
impl ::std::fmt::Debug for GetResourceApiKeyInputBuilder {
    fn fmt(&self, f: &mut ::std::fmt::Formatter<'_>) -> ::std::fmt::Result {
        let mut formatter = f.debug_struct("GetResourceApiKeyInputBuilder");
        formatter.field("workload_identity_token", &"*** Sensitive Data Redacted ***");
        formatter.field("resource_credential_provider_name", &self.resource_credential_provider_name);
        formatter.finish()
    }
}
