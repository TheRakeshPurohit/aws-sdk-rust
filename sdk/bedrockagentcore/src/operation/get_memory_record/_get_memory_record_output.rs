// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct GetMemoryRecordOutput {
    /// <p>The requested memory record.</p>
    pub memory_record: ::std::option::Option<crate::types::MemoryRecord>,
    _request_id: Option<String>,
}
impl GetMemoryRecordOutput {
    /// <p>The requested memory record.</p>
    pub fn memory_record(&self) -> ::std::option::Option<&crate::types::MemoryRecord> {
        self.memory_record.as_ref()
    }
}
impl ::aws_types::request_id::RequestId for GetMemoryRecordOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl GetMemoryRecordOutput {
    /// Creates a new builder-style object to manufacture [`GetMemoryRecordOutput`](crate::operation::get_memory_record::GetMemoryRecordOutput).
    pub fn builder() -> crate::operation::get_memory_record::builders::GetMemoryRecordOutputBuilder {
        crate::operation::get_memory_record::builders::GetMemoryRecordOutputBuilder::default()
    }
}

/// A builder for [`GetMemoryRecordOutput`](crate::operation::get_memory_record::GetMemoryRecordOutput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct GetMemoryRecordOutputBuilder {
    pub(crate) memory_record: ::std::option::Option<crate::types::MemoryRecord>,
    _request_id: Option<String>,
}
impl GetMemoryRecordOutputBuilder {
    /// <p>The requested memory record.</p>
    /// This field is required.
    pub fn memory_record(mut self, input: crate::types::MemoryRecord) -> Self {
        self.memory_record = ::std::option::Option::Some(input);
        self
    }
    /// <p>The requested memory record.</p>
    pub fn set_memory_record(mut self, input: ::std::option::Option<crate::types::MemoryRecord>) -> Self {
        self.memory_record = input;
        self
    }
    /// <p>The requested memory record.</p>
    pub fn get_memory_record(&self) -> &::std::option::Option<crate::types::MemoryRecord> {
        &self.memory_record
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`GetMemoryRecordOutput`](crate::operation::get_memory_record::GetMemoryRecordOutput).
    pub fn build(self) -> crate::operation::get_memory_record::GetMemoryRecordOutput {
        crate::operation::get_memory_record::GetMemoryRecordOutput {
            memory_record: self.memory_record,
            _request_id: self._request_id,
        }
    }
}
