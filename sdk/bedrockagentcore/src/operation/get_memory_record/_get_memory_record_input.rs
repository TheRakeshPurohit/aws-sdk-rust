// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct GetMemoryRecordInput {
    /// <p>The identifier of the memory store containing the memory record.</p>
    pub memory_id: ::std::option::Option<::std::string::String>,
    /// <p>The identifier of the memory record to retrieve.</p>
    pub memory_record_id: ::std::option::Option<::std::string::String>,
}
impl GetMemoryRecordInput {
    /// <p>The identifier of the memory store containing the memory record.</p>
    pub fn memory_id(&self) -> ::std::option::Option<&str> {
        self.memory_id.as_deref()
    }
    /// <p>The identifier of the memory record to retrieve.</p>
    pub fn memory_record_id(&self) -> ::std::option::Option<&str> {
        self.memory_record_id.as_deref()
    }
}
impl GetMemoryRecordInput {
    /// Creates a new builder-style object to manufacture [`GetMemoryRecordInput`](crate::operation::get_memory_record::GetMemoryRecordInput).
    pub fn builder() -> crate::operation::get_memory_record::builders::GetMemoryRecordInputBuilder {
        crate::operation::get_memory_record::builders::GetMemoryRecordInputBuilder::default()
    }
}

/// A builder for [`GetMemoryRecordInput`](crate::operation::get_memory_record::GetMemoryRecordInput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct GetMemoryRecordInputBuilder {
    pub(crate) memory_id: ::std::option::Option<::std::string::String>,
    pub(crate) memory_record_id: ::std::option::Option<::std::string::String>,
}
impl GetMemoryRecordInputBuilder {
    /// <p>The identifier of the memory store containing the memory record.</p>
    /// This field is required.
    pub fn memory_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.memory_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The identifier of the memory store containing the memory record.</p>
    pub fn set_memory_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.memory_id = input;
        self
    }
    /// <p>The identifier of the memory store containing the memory record.</p>
    pub fn get_memory_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.memory_id
    }
    /// <p>The identifier of the memory record to retrieve.</p>
    /// This field is required.
    pub fn memory_record_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.memory_record_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The identifier of the memory record to retrieve.</p>
    pub fn set_memory_record_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.memory_record_id = input;
        self
    }
    /// <p>The identifier of the memory record to retrieve.</p>
    pub fn get_memory_record_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.memory_record_id
    }
    /// Consumes the builder and constructs a [`GetMemoryRecordInput`](crate::operation::get_memory_record::GetMemoryRecordInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<crate::operation::get_memory_record::GetMemoryRecordInput, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::operation::get_memory_record::GetMemoryRecordInput {
            memory_id: self.memory_id,
            memory_record_id: self.memory_record_id,
        })
    }
}
