// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Contains information about an update to an automation stream.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct AutomationStreamUpdate {
    /// <p>The status of the automation stream.</p>
    pub stream_status: ::std::option::Option<crate::types::AutomationStreamStatus>,
}
impl AutomationStreamUpdate {
    /// <p>The status of the automation stream.</p>
    pub fn stream_status(&self) -> ::std::option::Option<&crate::types::AutomationStreamStatus> {
        self.stream_status.as_ref()
    }
}
impl AutomationStreamUpdate {
    /// Creates a new builder-style object to manufacture [`AutomationStreamUpdate`](crate::types::AutomationStreamUpdate).
    pub fn builder() -> crate::types::builders::AutomationStreamUpdateBuilder {
        crate::types::builders::AutomationStreamUpdateBuilder::default()
    }
}

/// A builder for [`AutomationStreamUpdate`](crate::types::AutomationStreamUpdate).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct AutomationStreamUpdateBuilder {
    pub(crate) stream_status: ::std::option::Option<crate::types::AutomationStreamStatus>,
}
impl AutomationStreamUpdateBuilder {
    /// <p>The status of the automation stream.</p>
    pub fn stream_status(mut self, input: crate::types::AutomationStreamStatus) -> Self {
        self.stream_status = ::std::option::Option::Some(input);
        self
    }
    /// <p>The status of the automation stream.</p>
    pub fn set_stream_status(mut self, input: ::std::option::Option<crate::types::AutomationStreamStatus>) -> Self {
        self.stream_status = input;
        self
    }
    /// <p>The status of the automation stream.</p>
    pub fn get_stream_status(&self) -> &::std::option::Option<crate::types::AutomationStreamStatus> {
        &self.stream_status
    }
    /// Consumes the builder and constructs a [`AutomationStreamUpdate`](crate::types::AutomationStreamUpdate).
    pub fn build(self) -> crate::types::AutomationStreamUpdate {
        crate::types::AutomationStreamUpdate {
            stream_status: self.stream_status,
        }
    }
}
