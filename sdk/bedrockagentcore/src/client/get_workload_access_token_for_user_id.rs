// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`GetWorkloadAccessTokenForUserId`](crate::operation::get_workload_access_token_for_user_id::builders::GetWorkloadAccessTokenForUserIdFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`workload_name(impl Into<String>)`](crate::operation::get_workload_access_token_for_user_id::builders::GetWorkloadAccessTokenForUserIdFluentBuilder::workload_name) / [`set_workload_name(Option<String>)`](crate::operation::get_workload_access_token_for_user_id::builders::GetWorkloadAccessTokenForUserIdFluentBuilder::set_workload_name):<br>required: **true**<br><p>The name of the workload from which you want to retrieve the access token.</p><br>
    ///   - [`user_id(impl Into<String>)`](crate::operation::get_workload_access_token_for_user_id::builders::GetWorkloadAccessTokenForUserIdFluentBuilder::user_id) / [`set_user_id(Option<String>)`](crate::operation::get_workload_access_token_for_user_id::builders::GetWorkloadAccessTokenForUserIdFluentBuilder::set_user_id):<br>required: **true**<br><p>The ID of the user for whom you are retrieving the access token.</p><br>
    /// - On success, responds with [`GetWorkloadAccessTokenForUserIdOutput`](crate::operation::get_workload_access_token_for_user_id::GetWorkloadAccessTokenForUserIdOutput) with field(s):
    ///   - [`workload_access_token(String)`](crate::operation::get_workload_access_token_for_user_id::GetWorkloadAccessTokenForUserIdOutput::workload_access_token): <p>The access token for the specified workload.</p>
    /// - On failure, responds with [`SdkError<GetWorkloadAccessTokenForUserIdError>`](crate::operation::get_workload_access_token_for_user_id::GetWorkloadAccessTokenForUserIdError)
    pub fn get_workload_access_token_for_user_id(
        &self,
    ) -> crate::operation::get_workload_access_token_for_user_id::builders::GetWorkloadAccessTokenForUserIdFluentBuilder {
        crate::operation::get_workload_access_token_for_user_id::builders::GetWorkloadAccessTokenForUserIdFluentBuilder::new(self.handle.clone())
    }
}
