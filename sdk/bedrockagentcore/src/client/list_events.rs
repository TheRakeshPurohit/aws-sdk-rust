// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ListEvents`](crate::operation::list_events::builders::ListEventsFluentBuilder) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::operation::list_events::builders::ListEventsFluentBuilder::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`memory_id(impl Into<String>)`](crate::operation::list_events::builders::ListEventsFluentBuilder::memory_id) / [`set_memory_id(Option<String>)`](crate::operation::list_events::builders::ListEventsFluentBuilder::set_memory_id):<br>required: **true**<br><p>The identifier of the AgentCore Memory resource for which to list events.</p><br>
    ///   - [`session_id(impl Into<String>)`](crate::operation::list_events::builders::ListEventsFluentBuilder::session_id) / [`set_session_id(Option<String>)`](crate::operation::list_events::builders::ListEventsFluentBuilder::set_session_id):<br>required: **true**<br><p>The identifier of the session for which to list events. If specified, only events from this session are returned.</p><br>
    ///   - [`actor_id(impl Into<String>)`](crate::operation::list_events::builders::ListEventsFluentBuilder::actor_id) / [`set_actor_id(Option<String>)`](crate::operation::list_events::builders::ListEventsFluentBuilder::set_actor_id):<br>required: **true**<br><p>The identifier of the actor for which to list events. If specified, only events from this actor are returned.</p><br>
    ///   - [`include_payloads(bool)`](crate::operation::list_events::builders::ListEventsFluentBuilder::include_payloads) / [`set_include_payloads(Option<bool>)`](crate::operation::list_events::builders::ListEventsFluentBuilder::set_include_payloads):<br>required: **false**<br><p>Specifies whether to include event payloads in the response. Set to true to include payloads, or false to exclude them.</p><br>
    ///   - [`filter(FilterInput)`](crate::operation::list_events::builders::ListEventsFluentBuilder::filter) / [`set_filter(Option<FilterInput>)`](crate::operation::list_events::builders::ListEventsFluentBuilder::set_filter):<br>required: **false**<br><p>Filter criteria to apply when listing events.</p><br>
    ///   - [`max_results(i32)`](crate::operation::list_events::builders::ListEventsFluentBuilder::max_results) / [`set_max_results(Option<i32>)`](crate::operation::list_events::builders::ListEventsFluentBuilder::set_max_results):<br>required: **false**<br><p>The maximum number of results to return in a single call. Minimum value of 1, maximum value of 100. Default is 20.</p><br>
    ///   - [`next_token(impl Into<String>)`](crate::operation::list_events::builders::ListEventsFluentBuilder::next_token) / [`set_next_token(Option<String>)`](crate::operation::list_events::builders::ListEventsFluentBuilder::set_next_token):<br>required: **false**<br><p>The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.</p><br>
    /// - On success, responds with [`ListEventsOutput`](crate::operation::list_events::ListEventsOutput) with field(s):
    ///   - [`events(Vec::<Event>)`](crate::operation::list_events::ListEventsOutput::events): <p>The list of events that match the specified criteria.</p>
    ///   - [`next_token(Option<String>)`](crate::operation::list_events::ListEventsOutput::next_token): <p>The token to use in a subsequent request to get the next set of results. This value is null when there are no more results to return.</p>
    /// - On failure, responds with [`SdkError<ListEventsError>`](crate::operation::list_events::ListEventsError)
    pub fn list_events(&self) -> crate::operation::list_events::builders::ListEventsFluentBuilder {
        crate::operation::list_events::builders::ListEventsFluentBuilder::new(self.handle.clone())
    }
}
