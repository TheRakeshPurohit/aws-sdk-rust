// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`BatchDeleteMemoryRecords`](crate::operation::batch_delete_memory_records::builders::BatchDeleteMemoryRecordsFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`memory_id(impl Into<String>)`](crate::operation::batch_delete_memory_records::builders::BatchDeleteMemoryRecordsFluentBuilder::memory_id) / [`set_memory_id(Option<String>)`](crate::operation::batch_delete_memory_records::builders::BatchDeleteMemoryRecordsFluentBuilder::set_memory_id):<br>required: **true**<br><p>The unique ID of the memory resource where records will be deleted.</p><br>
    ///   - [`records(MemoryRecordDeleteInput)`](crate::operation::batch_delete_memory_records::builders::BatchDeleteMemoryRecordsFluentBuilder::records) / [`set_records(Option<Vec::<MemoryRecordDeleteInput>>)`](crate::operation::batch_delete_memory_records::builders::BatchDeleteMemoryRecordsFluentBuilder::set_records):<br>required: **true**<br><p>A list of memory record deletion inputs to be processed in the batch operation.</p><br>
    /// - On success, responds with [`BatchDeleteMemoryRecordsOutput`](crate::operation::batch_delete_memory_records::BatchDeleteMemoryRecordsOutput) with field(s):
    ///   - [`successful_records(Vec::<MemoryRecordOutput>)`](crate::operation::batch_delete_memory_records::BatchDeleteMemoryRecordsOutput::successful_records): <p>A list of memory records that were successfully deleted during the batch operation.</p>
    ///   - [`failed_records(Vec::<MemoryRecordOutput>)`](crate::operation::batch_delete_memory_records::BatchDeleteMemoryRecordsOutput::failed_records): <p>A list of memory records that failed to be deleted, including error details for each failure.</p>
    /// - On failure, responds with [`SdkError<BatchDeleteMemoryRecordsError>`](crate::operation::batch_delete_memory_records::BatchDeleteMemoryRecordsError)
    pub fn batch_delete_memory_records(&self) -> crate::operation::batch_delete_memory_records::builders::BatchDeleteMemoryRecordsFluentBuilder {
        crate::operation::batch_delete_memory_records::builders::BatchDeleteMemoryRecordsFluentBuilder::new(self.handle.clone())
    }
}
