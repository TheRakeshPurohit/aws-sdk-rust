// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_conversion_target(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::types::ConversionTarget,
) -> ::std::result::Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    {
        object.key("fileFormat").string(input.file_format.as_str());
    }
    if let Some(var_1) = &input.format_details {
        #[allow(unused_mut)]
        let mut object_2 = object.key("formatDetails").start_object();
        crate::protocol_serde::shape_conversion_target_format_details::ser_conversion_target_format_details(&mut object_2, var_1)?;
        object_2.finish();
    }
    if let Some(var_3) = &input.output_sample_file {
        #[allow(unused_mut)]
        let mut object_4 = object.key("outputSampleFile").start_object();
        crate::protocol_serde::shape_output_sample_file_source::ser_output_sample_file_source(&mut object_4, var_3)?;
        object_4.finish();
    }
    if let Some(var_5) = &input.advanced_options {
        #[allow(unused_mut)]
        let mut object_6 = object.key("advancedOptions").start_object();
        crate::protocol_serde::shape_advanced_options::ser_advanced_options(&mut object_6, var_5)?;
        object_6.finish();
    }
    Ok(())
}
