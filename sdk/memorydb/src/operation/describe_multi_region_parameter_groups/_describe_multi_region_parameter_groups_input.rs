// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct DescribeMultiRegionParameterGroupsInput {
    /// <p>The request for information on a specific multi-region parameter group.</p>
    pub multi_region_parameter_group_name: ::std::option::Option<::std::string::String>,
    /// <p>The maximum number of records to include in the response. If more records exist than the specified MaxResults value, a token is included in the response so that the remaining results can be retrieved.</p>
    pub max_results: ::std::option::Option<i32>,
    /// <p>An optional token returned from a prior request. Use this token for pagination of results from this action. If this parameter is specified, the response includes only results beyond the token, up to the value specified by MaxResults.</p>
    pub next_token: ::std::option::Option<::std::string::String>,
}
impl DescribeMultiRegionParameterGroupsInput {
    /// <p>The request for information on a specific multi-region parameter group.</p>
    pub fn multi_region_parameter_group_name(&self) -> ::std::option::Option<&str> {
        self.multi_region_parameter_group_name.as_deref()
    }
    /// <p>The maximum number of records to include in the response. If more records exist than the specified MaxResults value, a token is included in the response so that the remaining results can be retrieved.</p>
    pub fn max_results(&self) -> ::std::option::Option<i32> {
        self.max_results
    }
    /// <p>An optional token returned from a prior request. Use this token for pagination of results from this action. If this parameter is specified, the response includes only results beyond the token, up to the value specified by MaxResults.</p>
    pub fn next_token(&self) -> ::std::option::Option<&str> {
        self.next_token.as_deref()
    }
}
impl DescribeMultiRegionParameterGroupsInput {
    /// Creates a new builder-style object to manufacture [`DescribeMultiRegionParameterGroupsInput`](crate::operation::describe_multi_region_parameter_groups::DescribeMultiRegionParameterGroupsInput).
    pub fn builder() -> crate::operation::describe_multi_region_parameter_groups::builders::DescribeMultiRegionParameterGroupsInputBuilder {
        crate::operation::describe_multi_region_parameter_groups::builders::DescribeMultiRegionParameterGroupsInputBuilder::default()
    }
}

/// A builder for [`DescribeMultiRegionParameterGroupsInput`](crate::operation::describe_multi_region_parameter_groups::DescribeMultiRegionParameterGroupsInput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct DescribeMultiRegionParameterGroupsInputBuilder {
    pub(crate) multi_region_parameter_group_name: ::std::option::Option<::std::string::String>,
    pub(crate) max_results: ::std::option::Option<i32>,
    pub(crate) next_token: ::std::option::Option<::std::string::String>,
}
impl DescribeMultiRegionParameterGroupsInputBuilder {
    /// <p>The request for information on a specific multi-region parameter group.</p>
    pub fn multi_region_parameter_group_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.multi_region_parameter_group_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The request for information on a specific multi-region parameter group.</p>
    pub fn set_multi_region_parameter_group_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.multi_region_parameter_group_name = input;
        self
    }
    /// <p>The request for information on a specific multi-region parameter group.</p>
    pub fn get_multi_region_parameter_group_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.multi_region_parameter_group_name
    }
    /// <p>The maximum number of records to include in the response. If more records exist than the specified MaxResults value, a token is included in the response so that the remaining results can be retrieved.</p>
    pub fn max_results(mut self, input: i32) -> Self {
        self.max_results = ::std::option::Option::Some(input);
        self
    }
    /// <p>The maximum number of records to include in the response. If more records exist than the specified MaxResults value, a token is included in the response so that the remaining results can be retrieved.</p>
    pub fn set_max_results(mut self, input: ::std::option::Option<i32>) -> Self {
        self.max_results = input;
        self
    }
    /// <p>The maximum number of records to include in the response. If more records exist than the specified MaxResults value, a token is included in the response so that the remaining results can be retrieved.</p>
    pub fn get_max_results(&self) -> &::std::option::Option<i32> {
        &self.max_results
    }
    /// <p>An optional token returned from a prior request. Use this token for pagination of results from this action. If this parameter is specified, the response includes only results beyond the token, up to the value specified by MaxResults.</p>
    pub fn next_token(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.next_token = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>An optional token returned from a prior request. Use this token for pagination of results from this action. If this parameter is specified, the response includes only results beyond the token, up to the value specified by MaxResults.</p>
    pub fn set_next_token(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.next_token = input;
        self
    }
    /// <p>An optional token returned from a prior request. Use this token for pagination of results from this action. If this parameter is specified, the response includes only results beyond the token, up to the value specified by MaxResults.</p>
    pub fn get_next_token(&self) -> &::std::option::Option<::std::string::String> {
        &self.next_token
    }
    /// Consumes the builder and constructs a [`DescribeMultiRegionParameterGroupsInput`](crate::operation::describe_multi_region_parameter_groups::DescribeMultiRegionParameterGroupsInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::describe_multi_region_parameter_groups::DescribeMultiRegionParameterGroupsInput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(
            crate::operation::describe_multi_region_parameter_groups::DescribeMultiRegionParameterGroupsInput {
                multi_region_parameter_group_name: self.multi_region_parameter_group_name,
                max_results: self.max_results,
                next_token: self.next_token,
            },
        )
    }
}
