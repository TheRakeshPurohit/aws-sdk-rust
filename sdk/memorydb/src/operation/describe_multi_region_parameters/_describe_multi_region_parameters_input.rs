// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct DescribeMultiRegionParametersInput {
    /// <p>The name of the multi-region parameter group to return details for.</p>
    pub multi_region_parameter_group_name: ::std::option::Option<::std::string::String>,
    /// <p>The parameter types to return. Valid values: user | system | engine-default</p>
    pub source: ::std::option::Option<::std::string::String>,
    /// <p>The maximum number of records to include in the response. If more records exist than the specified MaxResults value, a token is included in the response so that the remaining results can be retrieved.</p>
    pub max_results: ::std::option::Option<i32>,
    /// <p>An optional token returned from a prior request. Use this token for pagination of results from this action. If this parameter is specified, the response includes only results beyond the token, up to the value specified by MaxResults.</p>
    pub next_token: ::std::option::Option<::std::string::String>,
}
impl DescribeMultiRegionParametersInput {
    /// <p>The name of the multi-region parameter group to return details for.</p>
    pub fn multi_region_parameter_group_name(&self) -> ::std::option::Option<&str> {
        self.multi_region_parameter_group_name.as_deref()
    }
    /// <p>The parameter types to return. Valid values: user | system | engine-default</p>
    pub fn source(&self) -> ::std::option::Option<&str> {
        self.source.as_deref()
    }
    /// <p>The maximum number of records to include in the response. If more records exist than the specified MaxResults value, a token is included in the response so that the remaining results can be retrieved.</p>
    pub fn max_results(&self) -> ::std::option::Option<i32> {
        self.max_results
    }
    /// <p>An optional token returned from a prior request. Use this token for pagination of results from this action. If this parameter is specified, the response includes only results beyond the token, up to the value specified by MaxResults.</p>
    pub fn next_token(&self) -> ::std::option::Option<&str> {
        self.next_token.as_deref()
    }
}
impl DescribeMultiRegionParametersInput {
    /// Creates a new builder-style object to manufacture [`DescribeMultiRegionParametersInput`](crate::operation::describe_multi_region_parameters::DescribeMultiRegionParametersInput).
    pub fn builder() -> crate::operation::describe_multi_region_parameters::builders::DescribeMultiRegionParametersInputBuilder {
        crate::operation::describe_multi_region_parameters::builders::DescribeMultiRegionParametersInputBuilder::default()
    }
}

/// A builder for [`DescribeMultiRegionParametersInput`](crate::operation::describe_multi_region_parameters::DescribeMultiRegionParametersInput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct DescribeMultiRegionParametersInputBuilder {
    pub(crate) multi_region_parameter_group_name: ::std::option::Option<::std::string::String>,
    pub(crate) source: ::std::option::Option<::std::string::String>,
    pub(crate) max_results: ::std::option::Option<i32>,
    pub(crate) next_token: ::std::option::Option<::std::string::String>,
}
impl DescribeMultiRegionParametersInputBuilder {
    /// <p>The name of the multi-region parameter group to return details for.</p>
    /// This field is required.
    pub fn multi_region_parameter_group_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.multi_region_parameter_group_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of the multi-region parameter group to return details for.</p>
    pub fn set_multi_region_parameter_group_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.multi_region_parameter_group_name = input;
        self
    }
    /// <p>The name of the multi-region parameter group to return details for.</p>
    pub fn get_multi_region_parameter_group_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.multi_region_parameter_group_name
    }
    /// <p>The parameter types to return. Valid values: user | system | engine-default</p>
    pub fn source(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.source = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The parameter types to return. Valid values: user | system | engine-default</p>
    pub fn set_source(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.source = input;
        self
    }
    /// <p>The parameter types to return. Valid values: user | system | engine-default</p>
    pub fn get_source(&self) -> &::std::option::Option<::std::string::String> {
        &self.source
    }
    /// <p>The maximum number of records to include in the response. If more records exist than the specified MaxResults value, a token is included in the response so that the remaining results can be retrieved.</p>
    pub fn max_results(mut self, input: i32) -> Self {
        self.max_results = ::std::option::Option::Some(input);
        self
    }
    /// <p>The maximum number of records to include in the response. If more records exist than the specified MaxResults value, a token is included in the response so that the remaining results can be retrieved.</p>
    pub fn set_max_results(mut self, input: ::std::option::Option<i32>) -> Self {
        self.max_results = input;
        self
    }
    /// <p>The maximum number of records to include in the response. If more records exist than the specified MaxResults value, a token is included in the response so that the remaining results can be retrieved.</p>
    pub fn get_max_results(&self) -> &::std::option::Option<i32> {
        &self.max_results
    }
    /// <p>An optional token returned from a prior request. Use this token for pagination of results from this action. If this parameter is specified, the response includes only results beyond the token, up to the value specified by MaxResults.</p>
    pub fn next_token(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.next_token = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>An optional token returned from a prior request. Use this token for pagination of results from this action. If this parameter is specified, the response includes only results beyond the token, up to the value specified by MaxResults.</p>
    pub fn set_next_token(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.next_token = input;
        self
    }
    /// <p>An optional token returned from a prior request. Use this token for pagination of results from this action. If this parameter is specified, the response includes only results beyond the token, up to the value specified by MaxResults.</p>
    pub fn get_next_token(&self) -> &::std::option::Option<::std::string::String> {
        &self.next_token
    }
    /// Consumes the builder and constructs a [`DescribeMultiRegionParametersInput`](crate::operation::describe_multi_region_parameters::DescribeMultiRegionParametersInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::describe_multi_region_parameters::DescribeMultiRegionParametersInput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(crate::operation::describe_multi_region_parameters::DescribeMultiRegionParametersInput {
            multi_region_parameter_group_name: self.multi_region_parameter_group_name,
            source: self.source,
            max_results: self.max_results,
            next_token: self.next_token,
        })
    }
}
