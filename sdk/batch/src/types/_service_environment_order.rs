// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Specifies the order of a service environment for a job queue. This determines the priority order when multiple service environments are associated with the same job queue.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ServiceEnvironmentOrder {
    /// <p>The order of the service environment. Job queues with a higher priority are evaluated first when associated with the same service environment.</p>
    pub order: ::std::option::Option<i32>,
    /// <p>The name or ARN of the service environment.</p>
    pub service_environment: ::std::option::Option<::std::string::String>,
}
impl ServiceEnvironmentOrder {
    /// <p>The order of the service environment. Job queues with a higher priority are evaluated first when associated with the same service environment.</p>
    pub fn order(&self) -> ::std::option::Option<i32> {
        self.order
    }
    /// <p>The name or ARN of the service environment.</p>
    pub fn service_environment(&self) -> ::std::option::Option<&str> {
        self.service_environment.as_deref()
    }
}
impl ServiceEnvironmentOrder {
    /// Creates a new builder-style object to manufacture [`ServiceEnvironmentOrder`](crate::types::ServiceEnvironmentOrder).
    pub fn builder() -> crate::types::builders::ServiceEnvironmentOrderBuilder {
        crate::types::builders::ServiceEnvironmentOrderBuilder::default()
    }
}

/// A builder for [`ServiceEnvironmentOrder`](crate::types::ServiceEnvironmentOrder).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct ServiceEnvironmentOrderBuilder {
    pub(crate) order: ::std::option::Option<i32>,
    pub(crate) service_environment: ::std::option::Option<::std::string::String>,
}
impl ServiceEnvironmentOrderBuilder {
    /// <p>The order of the service environment. Job queues with a higher priority are evaluated first when associated with the same service environment.</p>
    /// This field is required.
    pub fn order(mut self, input: i32) -> Self {
        self.order = ::std::option::Option::Some(input);
        self
    }
    /// <p>The order of the service environment. Job queues with a higher priority are evaluated first when associated with the same service environment.</p>
    pub fn set_order(mut self, input: ::std::option::Option<i32>) -> Self {
        self.order = input;
        self
    }
    /// <p>The order of the service environment. Job queues with a higher priority are evaluated first when associated with the same service environment.</p>
    pub fn get_order(&self) -> &::std::option::Option<i32> {
        &self.order
    }
    /// <p>The name or ARN of the service environment.</p>
    /// This field is required.
    pub fn service_environment(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.service_environment = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name or ARN of the service environment.</p>
    pub fn set_service_environment(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.service_environment = input;
        self
    }
    /// <p>The name or ARN of the service environment.</p>
    pub fn get_service_environment(&self) -> &::std::option::Option<::std::string::String> {
        &self.service_environment
    }
    /// Consumes the builder and constructs a [`ServiceEnvironmentOrder`](crate::types::ServiceEnvironmentOrder).
    pub fn build(self) -> crate::types::ServiceEnvironmentOrder {
        crate::types::ServiceEnvironmentOrder {
            order: self.order,
            service_environment: self.service_environment,
        }
    }
}
