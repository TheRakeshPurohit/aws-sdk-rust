// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateServiceEnvironment`](crate::operation::create_service_environment::builders::CreateServiceEnvironmentFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`service_environment_name(impl Into<String>)`](crate::operation::create_service_environment::builders::CreateServiceEnvironmentFluentBuilder::service_environment_name) / [`set_service_environment_name(Option<String>)`](crate::operation::create_service_environment::builders::CreateServiceEnvironmentFluentBuilder::set_service_environment_name):<br>required: **true**<br><p>The name for the service environment. It can be up to 128 characters long and can contain letters, numbers, hyphens (-), and underscores (_).</p><br>
    ///   - [`service_environment_type(ServiceEnvironmentType)`](crate::operation::create_service_environment::builders::CreateServiceEnvironmentFluentBuilder::service_environment_type) / [`set_service_environment_type(Option<ServiceEnvironmentType>)`](crate::operation::create_service_environment::builders::CreateServiceEnvironmentFluentBuilder::set_service_environment_type):<br>required: **true**<br><p>The type of service environment. For SageMaker Training jobs, specify <code>SAGEMAKER_TRAINING</code>.</p><br>
    ///   - [`state(ServiceEnvironmentState)`](crate::operation::create_service_environment::builders::CreateServiceEnvironmentFluentBuilder::state) / [`set_state(Option<ServiceEnvironmentState>)`](crate::operation::create_service_environment::builders::CreateServiceEnvironmentFluentBuilder::set_state):<br>required: **false**<br><p>The state of the service environment. Valid values are <code>ENABLED</code> and <code>DISABLED</code>. The default value is <code>ENABLED</code>.</p><br>
    ///   - [`capacity_limits(CapacityLimit)`](crate::operation::create_service_environment::builders::CreateServiceEnvironmentFluentBuilder::capacity_limits) / [`set_capacity_limits(Option<Vec::<CapacityLimit>>)`](crate::operation::create_service_environment::builders::CreateServiceEnvironmentFluentBuilder::set_capacity_limits):<br>required: **true**<br><p>The capacity limits for the service environment. The number of instances a job consumes is the total number of instances requested in the submit training job request resource configuration.</p><br>
    ///   - [`tags(impl Into<String>, impl Into<String>)`](crate::operation::create_service_environment::builders::CreateServiceEnvironmentFluentBuilder::tags) / [`set_tags(Option<HashMap::<String, String>>)`](crate::operation::create_service_environment::builders::CreateServiceEnvironmentFluentBuilder::set_tags):<br>required: **false**<br><p>The tags that you apply to the service environment to help you categorize and organize your resources. Each tag consists of a key and an optional value. For more information, see <a href="https://docs.aws.amazon.com/batch/latest/userguide/using-tags.html">Tagging your Batch resources</a>.</p><br>
    /// - On success, responds with [`CreateServiceEnvironmentOutput`](crate::operation::create_service_environment::CreateServiceEnvironmentOutput) with field(s):
    ///   - [`service_environment_name(Option<String>)`](crate::operation::create_service_environment::CreateServiceEnvironmentOutput::service_environment_name): <p>The name of the service environment.</p>
    ///   - [`service_environment_arn(Option<String>)`](crate::operation::create_service_environment::CreateServiceEnvironmentOutput::service_environment_arn): <p>The Amazon Resource Name (ARN) of the service environment.</p>
    /// - On failure, responds with [`SdkError<CreateServiceEnvironmentError>`](crate::operation::create_service_environment::CreateServiceEnvironmentError)
    pub fn create_service_environment(&self) -> crate::operation::create_service_environment::builders::CreateServiceEnvironmentFluentBuilder {
        crate::operation::create_service_environment::builders::CreateServiceEnvironmentFluentBuilder::new(self.handle.clone())
    }
}
