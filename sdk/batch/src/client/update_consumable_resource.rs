// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`UpdateConsumableResource`](crate::operation::update_consumable_resource::builders::UpdateConsumableResourceFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`consumable_resource(impl Into<String>)`](crate::operation::update_consumable_resource::builders::UpdateConsumableResourceFluentBuilder::consumable_resource) / [`set_consumable_resource(Option<String>)`](crate::operation::update_consumable_resource::builders::UpdateConsumableResourceFluentBuilder::set_consumable_resource):<br>required: **true**<br><p>The name or ARN of the consumable resource to be updated.</p><br>
    ///   - [`operation(impl Into<String>)`](crate::operation::update_consumable_resource::builders::UpdateConsumableResourceFluentBuilder::operation) / [`set_operation(Option<String>)`](crate::operation::update_consumable_resource::builders::UpdateConsumableResourceFluentBuilder::set_operation):<br>required: **false**<br><p>Indicates how the quantity of the consumable resource will be updated. Must be one of:</p> <ul>  <li>   <p><code>SET</code></p>   <p>Sets the quantity of the resource to the value specified by the <code>quantity</code> parameter.</p></li>  <li>   <p><code>ADD</code></p>   <p>Increases the quantity of the resource by the value specified by the <code>quantity</code> parameter.</p></li>  <li>   <p><code>REMOVE</code></p>   <p>Reduces the quantity of the resource by the value specified by the <code>quantity</code> parameter.</p></li> </ul><br>
    ///   - [`quantity(i64)`](crate::operation::update_consumable_resource::builders::UpdateConsumableResourceFluentBuilder::quantity) / [`set_quantity(Option<i64>)`](crate::operation::update_consumable_resource::builders::UpdateConsumableResourceFluentBuilder::set_quantity):<br>required: **false**<br><p>The change in the total quantity of the consumable resource. The <code>operation</code> parameter determines whether the value specified here will be the new total quantity, or the amount by which the total quantity will be increased or reduced. Must be a non-negative value.</p><br>
    ///   - [`client_token(impl Into<String>)`](crate::operation::update_consumable_resource::builders::UpdateConsumableResourceFluentBuilder::client_token) / [`set_client_token(Option<String>)`](crate::operation::update_consumable_resource::builders::UpdateConsumableResourceFluentBuilder::set_client_token):<br>required: **false**<br><p>If this parameter is specified and two update requests with identical payloads and <code>clientToken</code>s are received, these requests are considered the same request. Both requests will succeed, but the update will only happen once. A <code>clientToken</code> is valid for 8 hours.</p><br>
    /// - On success, responds with [`UpdateConsumableResourceOutput`](crate::operation::update_consumable_resource::UpdateConsumableResourceOutput) with field(s):
    ///   - [`consumable_resource_name(Option<String>)`](crate::operation::update_consumable_resource::UpdateConsumableResourceOutput::consumable_resource_name): <p>The name of the consumable resource to be updated.</p>
    ///   - [`consumable_resource_arn(Option<String>)`](crate::operation::update_consumable_resource::UpdateConsumableResourceOutput::consumable_resource_arn): <p>The Amazon Resource Name (ARN) of the consumable resource.</p>
    ///   - [`total_quantity(Option<i64>)`](crate::operation::update_consumable_resource::UpdateConsumableResourceOutput::total_quantity): <p>The total amount of the consumable resource that is available.</p>
    /// - On failure, responds with [`SdkError<UpdateConsumableResourceError>`](crate::operation::update_consumable_resource::UpdateConsumableResourceError)
    pub fn update_consumable_resource(&self) -> crate::operation::update_consumable_resource::builders::UpdateConsumableResourceFluentBuilder {
        crate::operation::update_consumable_resource::builders::UpdateConsumableResourceFluentBuilder::new(self.handle.clone())
    }
}
