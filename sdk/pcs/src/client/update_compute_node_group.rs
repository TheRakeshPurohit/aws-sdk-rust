// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`UpdateComputeNodeGroup`](crate::operation::update_compute_node_group::builders::UpdateComputeNodeGroupFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`cluster_identifier(impl Into<String>)`](crate::operation::update_compute_node_group::builders::UpdateComputeNodeGroupFluentBuilder::cluster_identifier) / [`set_cluster_identifier(Option<String>)`](crate::operation::update_compute_node_group::builders::UpdateComputeNodeGroupFluentBuilder::set_cluster_identifier):<br>required: **true**<br><p>The name or ID of the cluster of the compute node group.</p><br>
    ///   - [`compute_node_group_identifier(impl Into<String>)`](crate::operation::update_compute_node_group::builders::UpdateComputeNodeGroupFluentBuilder::compute_node_group_identifier) / [`set_compute_node_group_identifier(Option<String>)`](crate::operation::update_compute_node_group::builders::UpdateComputeNodeGroupFluentBuilder::set_compute_node_group_identifier):<br>required: **true**<br><p>The name or ID of the compute node group.</p><br>
    ///   - [`ami_id(impl Into<String>)`](crate::operation::update_compute_node_group::builders::UpdateComputeNodeGroupFluentBuilder::ami_id) / [`set_ami_id(Option<String>)`](crate::operation::update_compute_node_group::builders::UpdateComputeNodeGroupFluentBuilder::set_ami_id):<br>required: **false**<br><p>The ID of the Amazon Machine Image (AMI) that PCS uses to launch instances. If not provided, PCS uses the AMI ID specified in the custom launch template.</p><br>
    ///   - [`subnet_ids(impl Into<String>)`](crate::operation::update_compute_node_group::builders::UpdateComputeNodeGroupFluentBuilder::subnet_ids) / [`set_subnet_ids(Option<Vec::<String>>)`](crate::operation::update_compute_node_group::builders::UpdateComputeNodeGroupFluentBuilder::set_subnet_ids):<br>required: **false**<br><p>The list of subnet IDs where the compute node group provisions instances. The subnets must be in the same VPC as the cluster.</p><br>
    ///   - [`custom_launch_template(CustomLaunchTemplate)`](crate::operation::update_compute_node_group::builders::UpdateComputeNodeGroupFluentBuilder::custom_launch_template) / [`set_custom_launch_template(Option<CustomLaunchTemplate>)`](crate::operation::update_compute_node_group::builders::UpdateComputeNodeGroupFluentBuilder::set_custom_launch_template):<br>required: **false**<br><p>An Amazon EC2 launch template PCS uses to launch compute nodes.</p><br>
    ///   - [`purchase_option(PurchaseOption)`](crate::operation::update_compute_node_group::builders::UpdateComputeNodeGroupFluentBuilder::purchase_option) / [`set_purchase_option(Option<PurchaseOption>)`](crate::operation::update_compute_node_group::builders::UpdateComputeNodeGroupFluentBuilder::set_purchase_option):<br>required: **false**<br><p>Specifies how EC2 instances are purchased on your behalf. PCS supports On-Demand Instances, Spot Instances, and Amazon EC2 Capacity Blocks for ML. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-purchasing-options.html">Amazon EC2 billing and purchasing options</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>. For more information about PCS support for Capacity Blocks, see <a href="https://docs.aws.amazon.com/pcs/latest/userguide/capacity-blocks.html">Using Amazon EC2 Capacity Blocks for ML with PCS</a> in the <i>PCS User Guide</i>. If you don't provide this option, it defaults to On-Demand.</p><br>
    ///   - [`spot_options(SpotOptions)`](crate::operation::update_compute_node_group::builders::UpdateComputeNodeGroupFluentBuilder::spot_options) / [`set_spot_options(Option<SpotOptions>)`](crate::operation::update_compute_node_group::builders::UpdateComputeNodeGroupFluentBuilder::set_spot_options):<br>required: **false**<br><p>Additional configuration when you specify <code>SPOT</code> as the <code>purchaseOption</code> for the <code>CreateComputeNodeGroup</code> API action.</p><br>
    ///   - [`scaling_configuration(ScalingConfigurationRequest)`](crate::operation::update_compute_node_group::builders::UpdateComputeNodeGroupFluentBuilder::scaling_configuration) / [`set_scaling_configuration(Option<ScalingConfigurationRequest>)`](crate::operation::update_compute_node_group::builders::UpdateComputeNodeGroupFluentBuilder::set_scaling_configuration):<br>required: **false**<br><p>Specifies the boundaries of the compute node group auto scaling.</p><br>
    ///   - [`iam_instance_profile_arn(impl Into<String>)`](crate::operation::update_compute_node_group::builders::UpdateComputeNodeGroupFluentBuilder::iam_instance_profile_arn) / [`set_iam_instance_profile_arn(Option<String>)`](crate::operation::update_compute_node_group::builders::UpdateComputeNodeGroupFluentBuilder::set_iam_instance_profile_arn):<br>required: **false**<br><p>The Amazon Resource Name (ARN) of the IAM instance profile used to pass an IAM role when launching EC2 instances. The role contained in your instance profile must have the <code>pcs:RegisterComputeNodeGroupInstance</code> permission and the role name must start with <code>AWSPCS</code> or must have the path <code>/aws-pcs/</code>. For more information, see <a href="https://docs.aws.amazon.com/pcs/latest/userguide/security-instance-profiles.html">IAM instance profiles for PCS</a> in the <i>PCS User Guide</i>.</p><br>
    ///   - [`slurm_configuration(UpdateComputeNodeGroupSlurmConfigurationRequest)`](crate::operation::update_compute_node_group::builders::UpdateComputeNodeGroupFluentBuilder::slurm_configuration) / [`set_slurm_configuration(Option<UpdateComputeNodeGroupSlurmConfigurationRequest>)`](crate::operation::update_compute_node_group::builders::UpdateComputeNodeGroupFluentBuilder::set_slurm_configuration):<br>required: **false**<br><p>Additional options related to the Slurm scheduler.</p><br>
    ///   - [`client_token(impl Into<String>)`](crate::operation::update_compute_node_group::builders::UpdateComputeNodeGroupFluentBuilder::client_token) / [`set_client_token(Option<String>)`](crate::operation::update_compute_node_group::builders::UpdateComputeNodeGroupFluentBuilder::set_client_token):<br>required: **false**<br><p>A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. Idempotency ensures that an API request completes only once. With an idempotent request, if the original request completes successfully, the subsequent retries with the same client token return the result from the original successful request and they have no additional effect. If you don't specify a client token, the CLI and SDK automatically generate 1 for you.</p><br>
    /// - On success, responds with [`UpdateComputeNodeGroupOutput`](crate::operation::update_compute_node_group::UpdateComputeNodeGroupOutput) with field(s):
    ///   - [`compute_node_group(Option<ComputeNodeGroup>)`](crate::operation::update_compute_node_group::UpdateComputeNodeGroupOutput::compute_node_group): <p>A compute node group associated with a cluster.</p>
    /// - On failure, responds with [`SdkError<UpdateComputeNodeGroupError>`](crate::operation::update_compute_node_group::UpdateComputeNodeGroupError)
    pub fn update_compute_node_group(&self) -> crate::operation::update_compute_node_group::builders::UpdateComputeNodeGroupFluentBuilder {
        crate::operation::update_compute_node_group::builders::UpdateComputeNodeGroupFluentBuilder::new(self.handle.clone())
    }
}
