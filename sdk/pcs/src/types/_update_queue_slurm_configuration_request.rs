// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Additional options related to the Slurm scheduler.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct UpdateQueueSlurmConfigurationRequest {
    /// <p>Additional Slurm-specific configuration that directly maps to Slurm settings.</p>
    pub slurm_custom_settings: ::std::option::Option<::std::vec::Vec<crate::types::SlurmCustomSetting>>,
}
impl UpdateQueueSlurmConfigurationRequest {
    /// <p>Additional Slurm-specific configuration that directly maps to Slurm settings.</p>
    ///
    /// If no value was sent for this field, a default will be set. If you want to determine if no value was sent, use `.slurm_custom_settings.is_none()`.
    pub fn slurm_custom_settings(&self) -> &[crate::types::SlurmCustomSetting] {
        self.slurm_custom_settings.as_deref().unwrap_or_default()
    }
}
impl UpdateQueueSlurmConfigurationRequest {
    /// Creates a new builder-style object to manufacture [`UpdateQueueSlurmConfigurationRequest`](crate::types::UpdateQueueSlurmConfigurationRequest).
    pub fn builder() -> crate::types::builders::UpdateQueueSlurmConfigurationRequestBuilder {
        crate::types::builders::UpdateQueueSlurmConfigurationRequestBuilder::default()
    }
}

/// A builder for [`UpdateQueueSlurmConfigurationRequest`](crate::types::UpdateQueueSlurmConfigurationRequest).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct UpdateQueueSlurmConfigurationRequestBuilder {
    pub(crate) slurm_custom_settings: ::std::option::Option<::std::vec::Vec<crate::types::SlurmCustomSetting>>,
}
impl UpdateQueueSlurmConfigurationRequestBuilder {
    /// Appends an item to `slurm_custom_settings`.
    ///
    /// To override the contents of this collection use [`set_slurm_custom_settings`](Self::set_slurm_custom_settings).
    ///
    /// <p>Additional Slurm-specific configuration that directly maps to Slurm settings.</p>
    pub fn slurm_custom_settings(mut self, input: crate::types::SlurmCustomSetting) -> Self {
        let mut v = self.slurm_custom_settings.unwrap_or_default();
        v.push(input);
        self.slurm_custom_settings = ::std::option::Option::Some(v);
        self
    }
    /// <p>Additional Slurm-specific configuration that directly maps to Slurm settings.</p>
    pub fn set_slurm_custom_settings(mut self, input: ::std::option::Option<::std::vec::Vec<crate::types::SlurmCustomSetting>>) -> Self {
        self.slurm_custom_settings = input;
        self
    }
    /// <p>Additional Slurm-specific configuration that directly maps to Slurm settings.</p>
    pub fn get_slurm_custom_settings(&self) -> &::std::option::Option<::std::vec::Vec<crate::types::SlurmCustomSetting>> {
        &self.slurm_custom_settings
    }
    /// Consumes the builder and constructs a [`UpdateQueueSlurmConfigurationRequest`](crate::types::UpdateQueueSlurmConfigurationRequest).
    pub fn build(self) -> crate::types::UpdateQueueSlurmConfigurationRequest {
        crate::types::UpdateQueueSlurmConfigurationRequest {
            slurm_custom_settings: self.slurm_custom_settings,
        }
    }
}
