// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Parameter information of the TR31WrappedKeyBlock containing the transaction key wrapped using a KEK.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct OutgoingTr31KeyBlock {
    /// <p>The <code>keyARN</code> of the KEK used to wrap the transaction key.</p>
    pub wrapping_key_identifier: ::std::string::String,
}
impl OutgoingTr31KeyBlock {
    /// <p>The <code>keyARN</code> of the KEK used to wrap the transaction key.</p>
    pub fn wrapping_key_identifier(&self) -> &str {
        use std::ops::Deref;
        self.wrapping_key_identifier.deref()
    }
}
impl OutgoingTr31KeyBlock {
    /// Creates a new builder-style object to manufacture [`OutgoingTr31KeyBlock`](crate::types::OutgoingTr31KeyBlock).
    pub fn builder() -> crate::types::builders::OutgoingTr31KeyBlockBuilder {
        crate::types::builders::OutgoingTr31KeyBlockBuilder::default()
    }
}

/// A builder for [`OutgoingTr31KeyBlock`](crate::types::OutgoingTr31KeyBlock).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct OutgoingTr31KeyBlockBuilder {
    pub(crate) wrapping_key_identifier: ::std::option::Option<::std::string::String>,
}
impl OutgoingTr31KeyBlockBuilder {
    /// <p>The <code>keyARN</code> of the KEK used to wrap the transaction key.</p>
    /// This field is required.
    pub fn wrapping_key_identifier(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.wrapping_key_identifier = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The <code>keyARN</code> of the KEK used to wrap the transaction key.</p>
    pub fn set_wrapping_key_identifier(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.wrapping_key_identifier = input;
        self
    }
    /// <p>The <code>keyARN</code> of the KEK used to wrap the transaction key.</p>
    pub fn get_wrapping_key_identifier(&self) -> &::std::option::Option<::std::string::String> {
        &self.wrapping_key_identifier
    }
    /// Consumes the builder and constructs a [`OutgoingTr31KeyBlock`](crate::types::OutgoingTr31KeyBlock).
    /// This method will fail if any of the following fields are not set:
    /// - [`wrapping_key_identifier`](crate::types::builders::OutgoingTr31KeyBlockBuilder::wrapping_key_identifier)
    pub fn build(self) -> ::std::result::Result<crate::types::OutgoingTr31KeyBlock, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::OutgoingTr31KeyBlock {
            wrapping_key_identifier: self.wrapping_key_identifier.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "wrapping_key_identifier",
                    "wrapping_key_identifier was not specified but it is required when building OutgoingTr31KeyBlock",
                )
            })?,
        })
    }
}
