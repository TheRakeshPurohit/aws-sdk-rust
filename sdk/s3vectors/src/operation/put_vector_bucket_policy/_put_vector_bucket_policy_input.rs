// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct PutVectorBucketPolicyInput {
    /// <p>The name of the vector bucket.</p>
    pub vector_bucket_name: ::std::option::Option<::std::string::String>,
    /// <p>The Amazon Resource Name (ARN) of the vector bucket.</p>
    pub vector_bucket_arn: ::std::option::Option<::std::string::String>,
    /// <p>The <code>JSON</code> that defines the policy. For more information about bucket policies for S3 Vectors, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/s3-vectors-bucket-policy.html">Managing vector bucket policies</a> in the <i>Amazon S3 User Guide</i>.</p>
    pub policy: ::std::option::Option<::std::string::String>,
}
impl PutVectorBucketPolicyInput {
    /// <p>The name of the vector bucket.</p>
    pub fn vector_bucket_name(&self) -> ::std::option::Option<&str> {
        self.vector_bucket_name.as_deref()
    }
    /// <p>The Amazon Resource Name (ARN) of the vector bucket.</p>
    pub fn vector_bucket_arn(&self) -> ::std::option::Option<&str> {
        self.vector_bucket_arn.as_deref()
    }
    /// <p>The <code>JSON</code> that defines the policy. For more information about bucket policies for S3 Vectors, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/s3-vectors-bucket-policy.html">Managing vector bucket policies</a> in the <i>Amazon S3 User Guide</i>.</p>
    pub fn policy(&self) -> ::std::option::Option<&str> {
        self.policy.as_deref()
    }
}
impl PutVectorBucketPolicyInput {
    /// Creates a new builder-style object to manufacture [`PutVectorBucketPolicyInput`](crate::operation::put_vector_bucket_policy::PutVectorBucketPolicyInput).
    pub fn builder() -> crate::operation::put_vector_bucket_policy::builders::PutVectorBucketPolicyInputBuilder {
        crate::operation::put_vector_bucket_policy::builders::PutVectorBucketPolicyInputBuilder::default()
    }
}

/// A builder for [`PutVectorBucketPolicyInput`](crate::operation::put_vector_bucket_policy::PutVectorBucketPolicyInput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct PutVectorBucketPolicyInputBuilder {
    pub(crate) vector_bucket_name: ::std::option::Option<::std::string::String>,
    pub(crate) vector_bucket_arn: ::std::option::Option<::std::string::String>,
    pub(crate) policy: ::std::option::Option<::std::string::String>,
}
impl PutVectorBucketPolicyInputBuilder {
    /// <p>The name of the vector bucket.</p>
    pub fn vector_bucket_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.vector_bucket_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of the vector bucket.</p>
    pub fn set_vector_bucket_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.vector_bucket_name = input;
        self
    }
    /// <p>The name of the vector bucket.</p>
    pub fn get_vector_bucket_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.vector_bucket_name
    }
    /// <p>The Amazon Resource Name (ARN) of the vector bucket.</p>
    pub fn vector_bucket_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.vector_bucket_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the vector bucket.</p>
    pub fn set_vector_bucket_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.vector_bucket_arn = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the vector bucket.</p>
    pub fn get_vector_bucket_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.vector_bucket_arn
    }
    /// <p>The <code>JSON</code> that defines the policy. For more information about bucket policies for S3 Vectors, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/s3-vectors-bucket-policy.html">Managing vector bucket policies</a> in the <i>Amazon S3 User Guide</i>.</p>
    /// This field is required.
    pub fn policy(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.policy = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The <code>JSON</code> that defines the policy. For more information about bucket policies for S3 Vectors, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/s3-vectors-bucket-policy.html">Managing vector bucket policies</a> in the <i>Amazon S3 User Guide</i>.</p>
    pub fn set_policy(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.policy = input;
        self
    }
    /// <p>The <code>JSON</code> that defines the policy. For more information about bucket policies for S3 Vectors, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/s3-vectors-bucket-policy.html">Managing vector bucket policies</a> in the <i>Amazon S3 User Guide</i>.</p>
    pub fn get_policy(&self) -> &::std::option::Option<::std::string::String> {
        &self.policy
    }
    /// Consumes the builder and constructs a [`PutVectorBucketPolicyInput`](crate::operation::put_vector_bucket_policy::PutVectorBucketPolicyInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<crate::operation::put_vector_bucket_policy::PutVectorBucketPolicyInput, ::aws_smithy_types::error::operation::BuildError>
    {
        ::std::result::Result::Ok(crate::operation::put_vector_bucket_policy::PutVectorBucketPolicyInput {
            vector_bucket_name: self.vector_bucket_name,
            vector_bucket_arn: self.vector_bucket_arn,
            policy: self.policy,
        })
    }
}
