// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct GetVectorBucketOutput {
    /// <p>The attributes of the vector bucket.</p>
    pub vector_bucket: ::std::option::Option<crate::types::VectorBucket>,
    _request_id: Option<String>,
}
impl GetVectorBucketOutput {
    /// <p>The attributes of the vector bucket.</p>
    pub fn vector_bucket(&self) -> ::std::option::Option<&crate::types::VectorBucket> {
        self.vector_bucket.as_ref()
    }
}
impl ::aws_types::request_id::RequestId for GetVectorBucketOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl GetVectorBucketOutput {
    /// Creates a new builder-style object to manufacture [`GetVectorBucketOutput`](crate::operation::get_vector_bucket::GetVectorBucketOutput).
    pub fn builder() -> crate::operation::get_vector_bucket::builders::GetVectorBucketOutputBuilder {
        crate::operation::get_vector_bucket::builders::GetVectorBucketOutputBuilder::default()
    }
}

/// A builder for [`GetVectorBucketOutput`](crate::operation::get_vector_bucket::GetVectorBucketOutput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct GetVectorBucketOutputBuilder {
    pub(crate) vector_bucket: ::std::option::Option<crate::types::VectorBucket>,
    _request_id: Option<String>,
}
impl GetVectorBucketOutputBuilder {
    /// <p>The attributes of the vector bucket.</p>
    /// This field is required.
    pub fn vector_bucket(mut self, input: crate::types::VectorBucket) -> Self {
        self.vector_bucket = ::std::option::Option::Some(input);
        self
    }
    /// <p>The attributes of the vector bucket.</p>
    pub fn set_vector_bucket(mut self, input: ::std::option::Option<crate::types::VectorBucket>) -> Self {
        self.vector_bucket = input;
        self
    }
    /// <p>The attributes of the vector bucket.</p>
    pub fn get_vector_bucket(&self) -> &::std::option::Option<crate::types::VectorBucket> {
        &self.vector_bucket
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`GetVectorBucketOutput`](crate::operation::get_vector_bucket::GetVectorBucketOutput).
    pub fn build(self) -> crate::operation::get_vector_bucket::GetVectorBucketOutput {
        crate::operation::get_vector_bucket::GetVectorBucketOutput {
            vector_bucket: self.vector_bucket,
            _request_id: self._request_id,
        }
    }
}
