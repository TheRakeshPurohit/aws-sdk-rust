// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_create_index_input_input(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::operation::create_index::CreateIndexInput,
) -> ::std::result::Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    if let Some(var_1) = &input.data_type {
        object.key("dataType").string(var_1.as_str());
    }
    if let Some(var_2) = &input.dimension {
        object.key("dimension").number(
            #[allow(clippy::useless_conversion)]
            ::aws_smithy_types::Number::NegInt((*var_2).into()),
        );
    }
    if let Some(var_3) = &input.distance_metric {
        object.key("distanceMetric").string(var_3.as_str());
    }
    if let Some(var_4) = &input.index_name {
        object.key("indexName").string(var_4.as_str());
    }
    if let Some(var_5) = &input.metadata_configuration {
        #[allow(unused_mut)]
        let mut object_6 = object.key("metadataConfiguration").start_object();
        crate::protocol_serde::shape_metadata_configuration::ser_metadata_configuration(&mut object_6, var_5)?;
        object_6.finish();
    }
    if let Some(var_7) = &input.vector_bucket_arn {
        object.key("vectorBucketArn").string(var_7.as_str());
    }
    if let Some(var_8) = &input.vector_bucket_name {
        object.key("vectorBucketName").string(var_8.as_str());
    }
    Ok(())
}
