// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_list_vectors_input_input(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::operation::list_vectors::ListVectorsInput,
) -> ::std::result::Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    if let Some(var_1) = &input.index_arn {
        object.key("indexArn").string(var_1.as_str());
    }
    if let Some(var_2) = &input.index_name {
        object.key("indexName").string(var_2.as_str());
    }
    if let Some(var_3) = &input.max_results {
        object.key("maxResults").number(
            #[allow(clippy::useless_conversion)]
            ::aws_smithy_types::Number::NegInt((*var_3).into()),
        );
    }
    if let Some(var_4) = &input.next_token {
        object.key("nextToken").string(var_4.as_str());
    }
    if let Some(var_5) = &input.return_data {
        object.key("returnData").boolean(*var_5);
    }
    if let Some(var_6) = &input.return_metadata {
        object.key("returnMetadata").boolean(*var_6);
    }
    if let Some(var_7) = &input.segment_count {
        object.key("segmentCount").number(
            #[allow(clippy::useless_conversion)]
            ::aws_smithy_types::Number::NegInt((*var_7).into()),
        );
    }
    if let Some(var_8) = &input.segment_index {
        object.key("segmentIndex").number(
            #[allow(clippy::useless_conversion)]
            ::aws_smithy_types::Number::NegInt((*var_8).into()),
        );
    }
    if let Some(var_9) = &input.vector_bucket_name {
        object.key("vectorBucketName").string(var_9.as_str());
    }
    Ok(())
}
