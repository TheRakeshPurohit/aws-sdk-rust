// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// Media Package V2 Group Settings
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct MediaPackageV2GroupSettings {
    /// Mapping of up to 4 caption channels to caption languages.
    pub caption_language_mappings: ::std::option::Option<::std::vec::Vec<crate::types::CaptionLanguageMapping>>,
}
impl MediaPackageV2GroupSettings {
    /// Mapping of up to 4 caption channels to caption languages.
    ///
    /// If no value was sent for this field, a default will be set. If you want to determine if no value was sent, use `.caption_language_mappings.is_none()`.
    pub fn caption_language_mappings(&self) -> &[crate::types::CaptionLanguageMapping] {
        self.caption_language_mappings.as_deref().unwrap_or_default()
    }
}
impl MediaPackageV2GroupSettings {
    /// Creates a new builder-style object to manufacture [`MediaPackageV2GroupSettings`](crate::types::MediaPackageV2GroupSettings).
    pub fn builder() -> crate::types::builders::MediaPackageV2GroupSettingsBuilder {
        crate::types::builders::MediaPackageV2GroupSettingsBuilder::default()
    }
}

/// A builder for [`MediaPackageV2GroupSettings`](crate::types::MediaPackageV2GroupSettings).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct MediaPackageV2GroupSettingsBuilder {
    pub(crate) caption_language_mappings: ::std::option::Option<::std::vec::Vec<crate::types::CaptionLanguageMapping>>,
}
impl MediaPackageV2GroupSettingsBuilder {
    /// Appends an item to `caption_language_mappings`.
    ///
    /// To override the contents of this collection use [`set_caption_language_mappings`](Self::set_caption_language_mappings).
    ///
    /// Mapping of up to 4 caption channels to caption languages.
    pub fn caption_language_mappings(mut self, input: crate::types::CaptionLanguageMapping) -> Self {
        let mut v = self.caption_language_mappings.unwrap_or_default();
        v.push(input);
        self.caption_language_mappings = ::std::option::Option::Some(v);
        self
    }
    /// Mapping of up to 4 caption channels to caption languages.
    pub fn set_caption_language_mappings(mut self, input: ::std::option::Option<::std::vec::Vec<crate::types::CaptionLanguageMapping>>) -> Self {
        self.caption_language_mappings = input;
        self
    }
    /// Mapping of up to 4 caption channels to caption languages.
    pub fn get_caption_language_mappings(&self) -> &::std::option::Option<::std::vec::Vec<crate::types::CaptionLanguageMapping>> {
        &self.caption_language_mappings
    }
    /// Consumes the builder and constructs a [`MediaPackageV2GroupSettings`](crate::types::MediaPackageV2GroupSettings).
    pub fn build(self) -> crate::types::MediaPackageV2GroupSettings {
        crate::types::MediaPackageV2GroupSettings {
            caption_language_mappings: self.caption_language_mappings,
        }
    }
}
