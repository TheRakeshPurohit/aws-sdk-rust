// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// Channel labeling configuration
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ChannelLabelingConfiguration {
    /// State
    pub state: crate::types::State,
}
impl ChannelLabelingConfiguration {
    /// State
    pub fn state(&self) -> &crate::types::State {
        &self.state
    }
}
impl ChannelLabelingConfiguration {
    /// Creates a new builder-style object to manufacture [`ChannelLabelingConfiguration`](crate::types::ChannelLabelingConfiguration).
    pub fn builder() -> crate::types::builders::ChannelLabelingConfigurationBuilder {
        crate::types::builders::ChannelLabelingConfigurationBuilder::default()
    }
}

/// A builder for [`ChannelLabelingConfiguration`](crate::types::ChannelLabelingConfiguration).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct ChannelLabelingConfigurationBuilder {
    pub(crate) state: ::std::option::Option<crate::types::State>,
}
impl ChannelLabelingConfigurationBuilder {
    /// State
    /// This field is required.
    pub fn state(mut self, input: crate::types::State) -> Self {
        self.state = ::std::option::Option::Some(input);
        self
    }
    /// State
    pub fn set_state(mut self, input: ::std::option::Option<crate::types::State>) -> Self {
        self.state = input;
        self
    }
    /// State
    pub fn get_state(&self) -> &::std::option::Option<crate::types::State> {
        &self.state
    }
    /// Consumes the builder and constructs a [`ChannelLabelingConfiguration`](crate::types::ChannelLabelingConfiguration).
    /// This method will fail if any of the following fields are not set:
    /// - [`state`](crate::types::builders::ChannelLabelingConfigurationBuilder::state)
    pub fn build(self) -> ::std::result::Result<crate::types::ChannelLabelingConfiguration, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::ChannelLabelingConfiguration {
            state: self.state.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "state",
                    "state was not specified but it is required when building ChannelLabelingConfiguration",
                )
            })?,
        })
    }
}
