// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// Configuration for transcript related features
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct TranscriptConfiguration {
    /// Speaker labeling configuration
    pub speaker_labeling: ::std::option::Option<crate::types::SpeakerLabelingConfiguration>,
    /// Channel labeling configuration
    pub channel_labeling: ::std::option::Option<crate::types::ChannelLabelingConfiguration>,
}
impl TranscriptConfiguration {
    /// Speaker labeling configuration
    pub fn speaker_labeling(&self) -> ::std::option::Option<&crate::types::SpeakerLabelingConfiguration> {
        self.speaker_labeling.as_ref()
    }
    /// Channel labeling configuration
    pub fn channel_labeling(&self) -> ::std::option::Option<&crate::types::ChannelLabelingConfiguration> {
        self.channel_labeling.as_ref()
    }
}
impl TranscriptConfiguration {
    /// Creates a new builder-style object to manufacture [`TranscriptConfiguration`](crate::types::TranscriptConfiguration).
    pub fn builder() -> crate::types::builders::TranscriptConfigurationBuilder {
        crate::types::builders::TranscriptConfigurationBuilder::default()
    }
}

/// A builder for [`TranscriptConfiguration`](crate::types::TranscriptConfiguration).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct TranscriptConfigurationBuilder {
    pub(crate) speaker_labeling: ::std::option::Option<crate::types::SpeakerLabelingConfiguration>,
    pub(crate) channel_labeling: ::std::option::Option<crate::types::ChannelLabelingConfiguration>,
}
impl TranscriptConfigurationBuilder {
    /// Speaker labeling configuration
    pub fn speaker_labeling(mut self, input: crate::types::SpeakerLabelingConfiguration) -> Self {
        self.speaker_labeling = ::std::option::Option::Some(input);
        self
    }
    /// Speaker labeling configuration
    pub fn set_speaker_labeling(mut self, input: ::std::option::Option<crate::types::SpeakerLabelingConfiguration>) -> Self {
        self.speaker_labeling = input;
        self
    }
    /// Speaker labeling configuration
    pub fn get_speaker_labeling(&self) -> &::std::option::Option<crate::types::SpeakerLabelingConfiguration> {
        &self.speaker_labeling
    }
    /// Channel labeling configuration
    pub fn channel_labeling(mut self, input: crate::types::ChannelLabelingConfiguration) -> Self {
        self.channel_labeling = ::std::option::Option::Some(input);
        self
    }
    /// Channel labeling configuration
    pub fn set_channel_labeling(mut self, input: ::std::option::Option<crate::types::ChannelLabelingConfiguration>) -> Self {
        self.channel_labeling = input;
        self
    }
    /// Channel labeling configuration
    pub fn get_channel_labeling(&self) -> &::std::option::Option<crate::types::ChannelLabelingConfiguration> {
        &self.channel_labeling
    }
    /// Consumes the builder and constructs a [`TranscriptConfiguration`](crate::types::TranscriptConfiguration).
    pub fn build(self) -> crate::types::TranscriptConfiguration {
        crate::types::TranscriptConfiguration {
            speaker_labeling: self.speaker_labeling,
            channel_labeling: self.channel_labeling,
        }
    }
}
