// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub(crate) fn type_erase_result<O, E>(
    result: ::std::result::Result<O, E>,
) -> ::std::result::Result<
    ::aws_smithy_runtime_api::client::interceptors::context::Output,
    ::aws_smithy_runtime_api::client::orchestrator::OrchestratorError<::aws_smithy_runtime_api::client::interceptors::context::Error>,
>
where
    O: ::std::fmt::Debug + ::std::marker::Send + ::std::marker::Sync + 'static,
    E: ::std::error::Error + std::fmt::Debug + ::std::marker::Send + ::std::marker::Sync + 'static,
{
    result
        .map(|output| ::aws_smithy_runtime_api::client::interceptors::context::Output::erase(output))
        .map_err(|error| ::aws_smithy_runtime_api::client::interceptors::context::Error::erase(error))
        .map_err(::std::convert::Into::into)
}

pub fn parse_http_error_metadata(
    _response_status: u16,
    response_headers: &::aws_smithy_runtime_api::http::Headers,
    response_body: &[u8],
) -> ::std::result::Result<::aws_smithy_types::error::metadata::Builder, ::aws_smithy_json::deserialize::error::DeserializeError> {
    crate::json_errors::parse_error_metadata(response_body, response_headers)
}

pub(crate) mod shape_create_blueprint;

pub(crate) mod shape_create_blueprint_version;

pub(crate) mod shape_create_data_automation_project;

pub(crate) mod shape_delete_blueprint;

pub(crate) mod shape_delete_data_automation_project;

pub(crate) mod shape_get_blueprint;

pub(crate) mod shape_get_data_automation_project;

pub(crate) mod shape_list_blueprints;

pub(crate) mod shape_list_data_automation_projects;

pub(crate) mod shape_list_tags_for_resource;

pub(crate) mod shape_tag_resource;

pub(crate) mod shape_untag_resource;

pub(crate) mod shape_update_blueprint;

pub(crate) mod shape_update_data_automation_project;

pub(crate) fn or_empty_doc(data: &[u8]) -> &[u8] {
    if data.is_empty() {
        b"{}"
    } else {
        data
    }
}

pub(crate) mod shape_access_denied_exception;

pub(crate) mod shape_conflict_exception;

pub(crate) mod shape_create_blueprint_input;

pub(crate) mod shape_create_blueprint_version_input;

pub(crate) mod shape_create_data_automation_project_input;

pub(crate) mod shape_get_blueprint_input;

pub(crate) mod shape_get_data_automation_project_input;

pub(crate) mod shape_internal_server_exception;

pub(crate) mod shape_list_blueprints_input;

pub(crate) mod shape_list_data_automation_projects_input;

pub(crate) mod shape_list_tags_for_resource_input;

pub(crate) mod shape_resource_not_found_exception;

pub(crate) mod shape_service_quota_exceeded_exception;

pub(crate) mod shape_tag_resource_input;

pub(crate) mod shape_throttling_exception;

pub(crate) mod shape_untag_resource_input;

pub(crate) mod shape_update_blueprint_input;

pub(crate) mod shape_update_data_automation_project_input;

pub(crate) mod shape_validation_exception;

pub(crate) mod shape_blueprint;

pub(crate) mod shape_blueprint_filter;

pub(crate) mod shape_blueprints;

pub(crate) mod shape_custom_output_configuration;

pub(crate) mod shape_data_automation_project;

pub(crate) mod shape_data_automation_project_filter;

pub(crate) mod shape_data_automation_project_summaries;

pub(crate) mod shape_encryption_configuration;

pub(crate) mod shape_override_configuration;

pub(crate) mod shape_standard_output_configuration;

pub(crate) mod shape_tag;

pub(crate) mod shape_tag_list;

pub(crate) mod shape_validation_exception_field_list;

pub(crate) mod shape_audio_override_configuration;

pub(crate) mod shape_audio_standard_output_configuration;

pub(crate) mod shape_blueprint_item;

pub(crate) mod shape_blueprint_summary;

pub(crate) mod shape_data_automation_project_summary;

pub(crate) mod shape_document_override_configuration;

pub(crate) mod shape_document_standard_output_configuration;

pub(crate) mod shape_image_override_configuration;

pub(crate) mod shape_image_standard_output_configuration;

pub(crate) mod shape_kms_encryption_context;

pub(crate) mod shape_modality_routing_configuration;

pub(crate) mod shape_validation_exception_field;

pub(crate) mod shape_video_override_configuration;

pub(crate) mod shape_video_standard_output_configuration;

pub(crate) mod shape_audio_standard_extraction;

pub(crate) mod shape_audio_standard_generative_field;

pub(crate) mod shape_blueprint_items;

pub(crate) mod shape_document_output_format;

pub(crate) mod shape_document_standard_extraction;

pub(crate) mod shape_document_standard_generative_field;

pub(crate) mod shape_image_standard_extraction;

pub(crate) mod shape_image_standard_generative_field;

pub(crate) mod shape_modality_processing_configuration;

pub(crate) mod shape_splitter_configuration;

pub(crate) mod shape_video_standard_extraction;

pub(crate) mod shape_video_standard_generative_field;

pub(crate) mod shape_audio_extraction_category;

pub(crate) mod shape_document_bounding_box;

pub(crate) mod shape_document_extraction_granularity;

pub(crate) mod shape_document_output_additional_file_format;

pub(crate) mod shape_document_output_text_format;

pub(crate) mod shape_image_bounding_box;

pub(crate) mod shape_image_extraction_category;

pub(crate) mod shape_video_bounding_box;

pub(crate) mod shape_video_extraction_category;

pub(crate) mod shape_audio_extraction_category_type_configuration;

pub(crate) mod shape_audio_standard_generative_field_types;

pub(crate) mod shape_image_standard_generative_field_types;

pub(crate) mod shape_video_standard_generative_field_types;

pub(crate) mod shape_audio_extraction_category_types;

pub(crate) mod shape_document_extraction_granularity_types;

pub(crate) mod shape_document_output_text_format_types;

pub(crate) mod shape_image_extraction_category_types;

pub(crate) mod shape_transcript_configuration;

pub(crate) mod shape_video_extraction_category_types;

pub(crate) mod shape_channel_labeling_configuration;

pub(crate) mod shape_speaker_labeling_configuration;
