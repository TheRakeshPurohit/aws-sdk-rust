// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`UpdateMonitor`](crate::operation::update_monitor::builders::UpdateMonitorFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`monitor_name(impl Into<String>)`](crate::operation::update_monitor::builders::UpdateMonitorFluentBuilder::monitor_name) / [`set_monitor_name(Option<String>)`](crate::operation::update_monitor::builders::UpdateMonitorFluentBuilder::set_monitor_name):<br>required: **true**<br><p>The name of the monitor.</p><br>
    ///   - [`local_resources_to_add(MonitorLocalResource)`](crate::operation::update_monitor::builders::UpdateMonitorFluentBuilder::local_resources_to_add) / [`set_local_resources_to_add(Option<Vec::<MonitorLocalResource>>)`](crate::operation::update_monitor::builders::UpdateMonitorFluentBuilder::set_local_resources_to_add):<br>required: **false**<br><p>Additional local resources to specify network flows for a monitor, as an array of resources with identifiers and types. A local resource in a workload is the location of hosts where the Network Flow Monitor agent is installed.</p><br>
    ///   - [`local_resources_to_remove(MonitorLocalResource)`](crate::operation::update_monitor::builders::UpdateMonitorFluentBuilder::local_resources_to_remove) / [`set_local_resources_to_remove(Option<Vec::<MonitorLocalResource>>)`](crate::operation::update_monitor::builders::UpdateMonitorFluentBuilder::set_local_resources_to_remove):<br>required: **false**<br><p>The local resources to remove, as an array of resources with identifiers and types.</p><br>
    ///   - [`remote_resources_to_add(MonitorRemoteResource)`](crate::operation::update_monitor::builders::UpdateMonitorFluentBuilder::remote_resources_to_add) / [`set_remote_resources_to_add(Option<Vec::<MonitorRemoteResource>>)`](crate::operation::update_monitor::builders::UpdateMonitorFluentBuilder::set_remote_resources_to_add):<br>required: **false**<br><p>The remote resources to add, as an array of resources with identifiers and types.</p> <p>A remote resource is the other endpoint in the flow of a workload, with a local resource. For example, Amazon Dynamo DB can be a remote resource.</p><br>
    ///   - [`remote_resources_to_remove(MonitorRemoteResource)`](crate::operation::update_monitor::builders::UpdateMonitorFluentBuilder::remote_resources_to_remove) / [`set_remote_resources_to_remove(Option<Vec::<MonitorRemoteResource>>)`](crate::operation::update_monitor::builders::UpdateMonitorFluentBuilder::set_remote_resources_to_remove):<br>required: **false**<br><p>The remote resources to remove, as an array of resources with identifiers and types.</p> <p>A remote resource is the other endpoint specified for the network flow of a workload, with a local resource. For example, Amazon Dynamo DB can be a remote resource.</p><br>
    ///   - [`client_token(impl Into<String>)`](crate::operation::update_monitor::builders::UpdateMonitorFluentBuilder::client_token) / [`set_client_token(Option<String>)`](crate::operation::update_monitor::builders::UpdateMonitorFluentBuilder::set_client_token):<br>required: **false**<br><p>A unique, case-sensitive string of up to 64 ASCII characters that you specify to make an idempotent API request. Don't reuse the same client token for other API requests.</p><br>
    /// - On success, responds with [`UpdateMonitorOutput`](crate::operation::update_monitor::UpdateMonitorOutput) with field(s):
    ///   - [`monitor_arn(String)`](crate::operation::update_monitor::UpdateMonitorOutput::monitor_arn): <p>The Amazon Resource Name (ARN) of the monitor.</p>
    ///   - [`monitor_name(String)`](crate::operation::update_monitor::UpdateMonitorOutput::monitor_name): <p>The name of the monitor.</p>
    ///   - [`monitor_status(MonitorStatus)`](crate::operation::update_monitor::UpdateMonitorOutput::monitor_status): <p>The status of a monitor. The status can be one of the following</p> <ul>  <li>   <p><code>PENDING</code>: The monitor is in the process of being created.</p></li>  <li>   <p><code>ACTIVE</code>: The monitor is active.</p></li>  <li>   <p><code>INACTIVE</code>: The monitor is inactive.</p></li>  <li>   <p><code>ERROR</code>: Monitor creation failed due to an error.</p></li>  <li>   <p><code>DELETING</code>: The monitor is in the process of being deleted.</p></li> </ul>
    ///   - [`local_resources(Vec::<MonitorLocalResource>)`](crate::operation::update_monitor::UpdateMonitorOutput::local_resources): <p>The local resources to monitor. A local resource in a workload is the location of hosts where the Network Flow Monitor agent is installed.</p>
    ///   - [`remote_resources(Vec::<MonitorRemoteResource>)`](crate::operation::update_monitor::UpdateMonitorOutput::remote_resources): <p>The remote resources updated for a monitor, as an array of resources with identifiers and types.</p> <p>A remote resource is the other endpoint specified for the network flow of a workload, with a local resource. For example, Amazon Dynamo DB can be a remote resource.</p>
    ///   - [`created_at(DateTime)`](crate::operation::update_monitor::UpdateMonitorOutput::created_at): <p>The date and time when the monitor was created.</p>
    ///   - [`modified_at(DateTime)`](crate::operation::update_monitor::UpdateMonitorOutput::modified_at): <p>The last date and time that the monitor was modified.</p>
    ///   - [`tags(Option<HashMap::<String, String>>)`](crate::operation::update_monitor::UpdateMonitorOutput::tags): <p>The tags for a monitor.</p>
    /// - On failure, responds with [`SdkError<UpdateMonitorError>`](crate::operation::update_monitor::UpdateMonitorError)
    pub fn update_monitor(&self) -> crate::operation::update_monitor::builders::UpdateMonitorFluentBuilder {
        crate::operation::update_monitor::builders::UpdateMonitorFluentBuilder::new(self.handle.clone())
    }
}
