// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>A local resource is the host where the agent is installed. Local resources can be a a subnet, a VPC, an Availability Zone, or an Amazon Web Services service.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct MonitorLocalResource {
    /// <p>The type of the local resource. Valid values are <code>AWS::EC2::VPC</code> <code>AWS::AvailabilityZone</code>, <code>AWS::EC2::Subnet</code>, or <code>AWS::Region</code>.</p>
    pub r#type: crate::types::MonitorLocalResourceType,
    /// <p>The identifier of the local resource. For a VPC or subnet, this identifier is the VPC Amazon Resource Name (ARN) or subnet ARN. For an Availability Zone, this identifier is the AZ name, for example, us-west-2b.</p>
    pub identifier: ::std::string::String,
}
impl MonitorLocalResource {
    /// <p>The type of the local resource. Valid values are <code>AWS::EC2::VPC</code> <code>AWS::AvailabilityZone</code>, <code>AWS::EC2::Subnet</code>, or <code>AWS::Region</code>.</p>
    pub fn r#type(&self) -> &crate::types::MonitorLocalResourceType {
        &self.r#type
    }
    /// <p>The identifier of the local resource. For a VPC or subnet, this identifier is the VPC Amazon Resource Name (ARN) or subnet ARN. For an Availability Zone, this identifier is the AZ name, for example, us-west-2b.</p>
    pub fn identifier(&self) -> &str {
        use std::ops::Deref;
        self.identifier.deref()
    }
}
impl MonitorLocalResource {
    /// Creates a new builder-style object to manufacture [`MonitorLocalResource`](crate::types::MonitorLocalResource).
    pub fn builder() -> crate::types::builders::MonitorLocalResourceBuilder {
        crate::types::builders::MonitorLocalResourceBuilder::default()
    }
}

/// A builder for [`MonitorLocalResource`](crate::types::MonitorLocalResource).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct MonitorLocalResourceBuilder {
    pub(crate) r#type: ::std::option::Option<crate::types::MonitorLocalResourceType>,
    pub(crate) identifier: ::std::option::Option<::std::string::String>,
}
impl MonitorLocalResourceBuilder {
    /// <p>The type of the local resource. Valid values are <code>AWS::EC2::VPC</code> <code>AWS::AvailabilityZone</code>, <code>AWS::EC2::Subnet</code>, or <code>AWS::Region</code>.</p>
    /// This field is required.
    pub fn r#type(mut self, input: crate::types::MonitorLocalResourceType) -> Self {
        self.r#type = ::std::option::Option::Some(input);
        self
    }
    /// <p>The type of the local resource. Valid values are <code>AWS::EC2::VPC</code> <code>AWS::AvailabilityZone</code>, <code>AWS::EC2::Subnet</code>, or <code>AWS::Region</code>.</p>
    pub fn set_type(mut self, input: ::std::option::Option<crate::types::MonitorLocalResourceType>) -> Self {
        self.r#type = input;
        self
    }
    /// <p>The type of the local resource. Valid values are <code>AWS::EC2::VPC</code> <code>AWS::AvailabilityZone</code>, <code>AWS::EC2::Subnet</code>, or <code>AWS::Region</code>.</p>
    pub fn get_type(&self) -> &::std::option::Option<crate::types::MonitorLocalResourceType> {
        &self.r#type
    }
    /// <p>The identifier of the local resource. For a VPC or subnet, this identifier is the VPC Amazon Resource Name (ARN) or subnet ARN. For an Availability Zone, this identifier is the AZ name, for example, us-west-2b.</p>
    /// This field is required.
    pub fn identifier(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.identifier = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The identifier of the local resource. For a VPC or subnet, this identifier is the VPC Amazon Resource Name (ARN) or subnet ARN. For an Availability Zone, this identifier is the AZ name, for example, us-west-2b.</p>
    pub fn set_identifier(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.identifier = input;
        self
    }
    /// <p>The identifier of the local resource. For a VPC or subnet, this identifier is the VPC Amazon Resource Name (ARN) or subnet ARN. For an Availability Zone, this identifier is the AZ name, for example, us-west-2b.</p>
    pub fn get_identifier(&self) -> &::std::option::Option<::std::string::String> {
        &self.identifier
    }
    /// Consumes the builder and constructs a [`MonitorLocalResource`](crate::types::MonitorLocalResource).
    /// This method will fail if any of the following fields are not set:
    /// - [`r#type`](crate::types::builders::MonitorLocalResourceBuilder::type)
    /// - [`identifier`](crate::types::builders::MonitorLocalResourceBuilder::identifier)
    pub fn build(self) -> ::std::result::Result<crate::types::MonitorLocalResource, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::MonitorLocalResource {
            r#type: self.r#type.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "r#type",
                    "r#type was not specified but it is required when building MonitorLocalResource",
                )
            })?,
            identifier: self.identifier.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "identifier",
                    "identifier was not specified but it is required when building MonitorLocalResource",
                )
            })?,
        })
    }
}
