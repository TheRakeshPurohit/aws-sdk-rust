// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The <code>MembershipAccountsConfigurationsUpdate</code>structure represents the configuration updates for member accounts within an Amazon Web Services organization.</p>
/// <p>This structure is used to modify existing account configurations and settings for members in the organization. When applying updates, ensure all required fields are properly specified to maintain account consistency.</p>
/// <p>Key considerations when using this structure:</p>
/// <ul>
/// <li>
/// <p>All configuration changes are validated before being applied</p></li>
/// <li>
/// <p>Updates are processed asynchronously in the background</p></li>
/// <li>
/// <p>Configuration changes may take several minutes to propagate across all affected accounts</p></li>
/// </ul>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct MembershipAccountsConfigurationsUpdate {
    /// <p>The <code>coverEntireOrganization</code> field is a boolean value that determines whether the membership configuration should be applied across the entire Amazon Web Services Organization.</p>
    /// <p>When set to <code>true</code>, the configuration will be applied to all accounts within the organization. When set to <code>false</code>, the configuration will only apply to specifically designated accounts.</p>
    pub cover_entire_organization: ::std::option::Option<bool>,
    /// <p>A list of organizational unit IDs to add to the membership configuration. Each organizational unit ID must match the pattern <code>ou-\[0-9a-z\]{4,32}-\[a-z0-9\]{8,32}</code>.</p>
    /// <p>The list must contain between 1 and 5 organizational unit IDs.</p>
    pub organizational_units_to_add: ::std::option::Option<::std::vec::Vec<::std::string::String>>,
    /// <p>A list of organizational unit IDs to remove from the membership configuration. Each organizational unit ID must match the pattern <code>ou-\[0-9a-z\]{4,32}-\[a-z0-9\]{8,32}</code>.</p>
    /// <p>The list must contain between 1 and 5 organizational unit IDs per invocation of the API request.</p>
    pub organizational_units_to_remove: ::std::option::Option<::std::vec::Vec<::std::string::String>>,
}
impl MembershipAccountsConfigurationsUpdate {
    /// <p>The <code>coverEntireOrganization</code> field is a boolean value that determines whether the membership configuration should be applied across the entire Amazon Web Services Organization.</p>
    /// <p>When set to <code>true</code>, the configuration will be applied to all accounts within the organization. When set to <code>false</code>, the configuration will only apply to specifically designated accounts.</p>
    pub fn cover_entire_organization(&self) -> ::std::option::Option<bool> {
        self.cover_entire_organization
    }
    /// <p>A list of organizational unit IDs to add to the membership configuration. Each organizational unit ID must match the pattern <code>ou-\[0-9a-z\]{4,32}-\[a-z0-9\]{8,32}</code>.</p>
    /// <p>The list must contain between 1 and 5 organizational unit IDs.</p>
    ///
    /// If no value was sent for this field, a default will be set. If you want to determine if no value was sent, use `.organizational_units_to_add.is_none()`.
    pub fn organizational_units_to_add(&self) -> &[::std::string::String] {
        self.organizational_units_to_add.as_deref().unwrap_or_default()
    }
    /// <p>A list of organizational unit IDs to remove from the membership configuration. Each organizational unit ID must match the pattern <code>ou-\[0-9a-z\]{4,32}-\[a-z0-9\]{8,32}</code>.</p>
    /// <p>The list must contain between 1 and 5 organizational unit IDs per invocation of the API request.</p>
    ///
    /// If no value was sent for this field, a default will be set. If you want to determine if no value was sent, use `.organizational_units_to_remove.is_none()`.
    pub fn organizational_units_to_remove(&self) -> &[::std::string::String] {
        self.organizational_units_to_remove.as_deref().unwrap_or_default()
    }
}
impl MembershipAccountsConfigurationsUpdate {
    /// Creates a new builder-style object to manufacture [`MembershipAccountsConfigurationsUpdate`](crate::types::MembershipAccountsConfigurationsUpdate).
    pub fn builder() -> crate::types::builders::MembershipAccountsConfigurationsUpdateBuilder {
        crate::types::builders::MembershipAccountsConfigurationsUpdateBuilder::default()
    }
}

/// A builder for [`MembershipAccountsConfigurationsUpdate`](crate::types::MembershipAccountsConfigurationsUpdate).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct MembershipAccountsConfigurationsUpdateBuilder {
    pub(crate) cover_entire_organization: ::std::option::Option<bool>,
    pub(crate) organizational_units_to_add: ::std::option::Option<::std::vec::Vec<::std::string::String>>,
    pub(crate) organizational_units_to_remove: ::std::option::Option<::std::vec::Vec<::std::string::String>>,
}
impl MembershipAccountsConfigurationsUpdateBuilder {
    /// <p>The <code>coverEntireOrganization</code> field is a boolean value that determines whether the membership configuration should be applied across the entire Amazon Web Services Organization.</p>
    /// <p>When set to <code>true</code>, the configuration will be applied to all accounts within the organization. When set to <code>false</code>, the configuration will only apply to specifically designated accounts.</p>
    pub fn cover_entire_organization(mut self, input: bool) -> Self {
        self.cover_entire_organization = ::std::option::Option::Some(input);
        self
    }
    /// <p>The <code>coverEntireOrganization</code> field is a boolean value that determines whether the membership configuration should be applied across the entire Amazon Web Services Organization.</p>
    /// <p>When set to <code>true</code>, the configuration will be applied to all accounts within the organization. When set to <code>false</code>, the configuration will only apply to specifically designated accounts.</p>
    pub fn set_cover_entire_organization(mut self, input: ::std::option::Option<bool>) -> Self {
        self.cover_entire_organization = input;
        self
    }
    /// <p>The <code>coverEntireOrganization</code> field is a boolean value that determines whether the membership configuration should be applied across the entire Amazon Web Services Organization.</p>
    /// <p>When set to <code>true</code>, the configuration will be applied to all accounts within the organization. When set to <code>false</code>, the configuration will only apply to specifically designated accounts.</p>
    pub fn get_cover_entire_organization(&self) -> &::std::option::Option<bool> {
        &self.cover_entire_organization
    }
    /// Appends an item to `organizational_units_to_add`.
    ///
    /// To override the contents of this collection use [`set_organizational_units_to_add`](Self::set_organizational_units_to_add).
    ///
    /// <p>A list of organizational unit IDs to add to the membership configuration. Each organizational unit ID must match the pattern <code>ou-\[0-9a-z\]{4,32}-\[a-z0-9\]{8,32}</code>.</p>
    /// <p>The list must contain between 1 and 5 organizational unit IDs.</p>
    pub fn organizational_units_to_add(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        let mut v = self.organizational_units_to_add.unwrap_or_default();
        v.push(input.into());
        self.organizational_units_to_add = ::std::option::Option::Some(v);
        self
    }
    /// <p>A list of organizational unit IDs to add to the membership configuration. Each organizational unit ID must match the pattern <code>ou-\[0-9a-z\]{4,32}-\[a-z0-9\]{8,32}</code>.</p>
    /// <p>The list must contain between 1 and 5 organizational unit IDs.</p>
    pub fn set_organizational_units_to_add(mut self, input: ::std::option::Option<::std::vec::Vec<::std::string::String>>) -> Self {
        self.organizational_units_to_add = input;
        self
    }
    /// <p>A list of organizational unit IDs to add to the membership configuration. Each organizational unit ID must match the pattern <code>ou-\[0-9a-z\]{4,32}-\[a-z0-9\]{8,32}</code>.</p>
    /// <p>The list must contain between 1 and 5 organizational unit IDs.</p>
    pub fn get_organizational_units_to_add(&self) -> &::std::option::Option<::std::vec::Vec<::std::string::String>> {
        &self.organizational_units_to_add
    }
    /// Appends an item to `organizational_units_to_remove`.
    ///
    /// To override the contents of this collection use [`set_organizational_units_to_remove`](Self::set_organizational_units_to_remove).
    ///
    /// <p>A list of organizational unit IDs to remove from the membership configuration. Each organizational unit ID must match the pattern <code>ou-\[0-9a-z\]{4,32}-\[a-z0-9\]{8,32}</code>.</p>
    /// <p>The list must contain between 1 and 5 organizational unit IDs per invocation of the API request.</p>
    pub fn organizational_units_to_remove(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        let mut v = self.organizational_units_to_remove.unwrap_or_default();
        v.push(input.into());
        self.organizational_units_to_remove = ::std::option::Option::Some(v);
        self
    }
    /// <p>A list of organizational unit IDs to remove from the membership configuration. Each organizational unit ID must match the pattern <code>ou-\[0-9a-z\]{4,32}-\[a-z0-9\]{8,32}</code>.</p>
    /// <p>The list must contain between 1 and 5 organizational unit IDs per invocation of the API request.</p>
    pub fn set_organizational_units_to_remove(mut self, input: ::std::option::Option<::std::vec::Vec<::std::string::String>>) -> Self {
        self.organizational_units_to_remove = input;
        self
    }
    /// <p>A list of organizational unit IDs to remove from the membership configuration. Each organizational unit ID must match the pattern <code>ou-\[0-9a-z\]{4,32}-\[a-z0-9\]{8,32}</code>.</p>
    /// <p>The list must contain between 1 and 5 organizational unit IDs per invocation of the API request.</p>
    pub fn get_organizational_units_to_remove(&self) -> &::std::option::Option<::std::vec::Vec<::std::string::String>> {
        &self.organizational_units_to_remove
    }
    /// Consumes the builder and constructs a [`MembershipAccountsConfigurationsUpdate`](crate::types::MembershipAccountsConfigurationsUpdate).
    pub fn build(self) -> crate::types::MembershipAccountsConfigurationsUpdate {
        crate::types::MembershipAccountsConfigurationsUpdate {
            cover_entire_organization: self.cover_entire_organization,
            organizational_units_to_add: self.organizational_units_to_add,
            organizational_units_to_remove: self.organizational_units_to_remove,
        }
    }
}
