// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The <code>MembershipAccountsConfigurations</code> structure defines the configuration settings for managing membership accounts withinAmazon Web Services.</p>
/// <p>This structure contains settings that determine how member accounts are configured and managed within your organization, including:</p>
/// <ul>
/// <li>
/// <p>Account configuration preferences</p></li>
/// <li>
/// <p>Membership validation rules</p></li>
/// <li>
/// <p>Account access settings</p></li>
/// </ul>
/// <p>You can use this structure to define and maintain standardized configurations across multiple member accounts in your organization.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct MembershipAccountsConfigurations {
    /// <p>The <code>coverEntireOrganization</code> field is a boolean value that determines whether the membership configuration applies to all accounts within an Amazon Web Services Organization.</p>
    /// <p>When set to <code>true</code>, the configuration will be applied across all accounts in the organization. When set to <code>false</code>, the configuration will only apply to specifically designated accounts under the AWS Organizational Units specificied.</p>
    pub cover_entire_organization: ::std::option::Option<bool>,
    /// <p>A list of organizational unit IDs that follow the pattern <code>ou-\[0-9a-z\]{4,32}-\[a-z0-9\]{8,32}</code>. These IDs represent the organizational units within an Amazon Web Services Organizations structure that are covered by the membership.</p>
    /// <p>Each organizational unit ID in the list must:</p>
    /// <ul>
    /// <li>
    /// <p>Begin with the prefix 'ou-'</p></li>
    /// <li>
    /// <p>Contain between 4 and 32 alphanumeric characters in the first segment</p></li>
    /// <li>
    /// <p>Contain between 8 and 32 alphanumeric characters in the second segment</p></li>
    /// </ul>
    pub organizational_units: ::std::option::Option<::std::vec::Vec<::std::string::String>>,
}
impl MembershipAccountsConfigurations {
    /// <p>The <code>coverEntireOrganization</code> field is a boolean value that determines whether the membership configuration applies to all accounts within an Amazon Web Services Organization.</p>
    /// <p>When set to <code>true</code>, the configuration will be applied across all accounts in the organization. When set to <code>false</code>, the configuration will only apply to specifically designated accounts under the AWS Organizational Units specificied.</p>
    pub fn cover_entire_organization(&self) -> ::std::option::Option<bool> {
        self.cover_entire_organization
    }
    /// <p>A list of organizational unit IDs that follow the pattern <code>ou-\[0-9a-z\]{4,32}-\[a-z0-9\]{8,32}</code>. These IDs represent the organizational units within an Amazon Web Services Organizations structure that are covered by the membership.</p>
    /// <p>Each organizational unit ID in the list must:</p>
    /// <ul>
    /// <li>
    /// <p>Begin with the prefix 'ou-'</p></li>
    /// <li>
    /// <p>Contain between 4 and 32 alphanumeric characters in the first segment</p></li>
    /// <li>
    /// <p>Contain between 8 and 32 alphanumeric characters in the second segment</p></li>
    /// </ul>
    ///
    /// If no value was sent for this field, a default will be set. If you want to determine if no value was sent, use `.organizational_units.is_none()`.
    pub fn organizational_units(&self) -> &[::std::string::String] {
        self.organizational_units.as_deref().unwrap_or_default()
    }
}
impl MembershipAccountsConfigurations {
    /// Creates a new builder-style object to manufacture [`MembershipAccountsConfigurations`](crate::types::MembershipAccountsConfigurations).
    pub fn builder() -> crate::types::builders::MembershipAccountsConfigurationsBuilder {
        crate::types::builders::MembershipAccountsConfigurationsBuilder::default()
    }
}

/// A builder for [`MembershipAccountsConfigurations`](crate::types::MembershipAccountsConfigurations).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct MembershipAccountsConfigurationsBuilder {
    pub(crate) cover_entire_organization: ::std::option::Option<bool>,
    pub(crate) organizational_units: ::std::option::Option<::std::vec::Vec<::std::string::String>>,
}
impl MembershipAccountsConfigurationsBuilder {
    /// <p>The <code>coverEntireOrganization</code> field is a boolean value that determines whether the membership configuration applies to all accounts within an Amazon Web Services Organization.</p>
    /// <p>When set to <code>true</code>, the configuration will be applied across all accounts in the organization. When set to <code>false</code>, the configuration will only apply to specifically designated accounts under the AWS Organizational Units specificied.</p>
    pub fn cover_entire_organization(mut self, input: bool) -> Self {
        self.cover_entire_organization = ::std::option::Option::Some(input);
        self
    }
    /// <p>The <code>coverEntireOrganization</code> field is a boolean value that determines whether the membership configuration applies to all accounts within an Amazon Web Services Organization.</p>
    /// <p>When set to <code>true</code>, the configuration will be applied across all accounts in the organization. When set to <code>false</code>, the configuration will only apply to specifically designated accounts under the AWS Organizational Units specificied.</p>
    pub fn set_cover_entire_organization(mut self, input: ::std::option::Option<bool>) -> Self {
        self.cover_entire_organization = input;
        self
    }
    /// <p>The <code>coverEntireOrganization</code> field is a boolean value that determines whether the membership configuration applies to all accounts within an Amazon Web Services Organization.</p>
    /// <p>When set to <code>true</code>, the configuration will be applied across all accounts in the organization. When set to <code>false</code>, the configuration will only apply to specifically designated accounts under the AWS Organizational Units specificied.</p>
    pub fn get_cover_entire_organization(&self) -> &::std::option::Option<bool> {
        &self.cover_entire_organization
    }
    /// Appends an item to `organizational_units`.
    ///
    /// To override the contents of this collection use [`set_organizational_units`](Self::set_organizational_units).
    ///
    /// <p>A list of organizational unit IDs that follow the pattern <code>ou-\[0-9a-z\]{4,32}-\[a-z0-9\]{8,32}</code>. These IDs represent the organizational units within an Amazon Web Services Organizations structure that are covered by the membership.</p>
    /// <p>Each organizational unit ID in the list must:</p>
    /// <ul>
    /// <li>
    /// <p>Begin with the prefix 'ou-'</p></li>
    /// <li>
    /// <p>Contain between 4 and 32 alphanumeric characters in the first segment</p></li>
    /// <li>
    /// <p>Contain between 8 and 32 alphanumeric characters in the second segment</p></li>
    /// </ul>
    pub fn organizational_units(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        let mut v = self.organizational_units.unwrap_or_default();
        v.push(input.into());
        self.organizational_units = ::std::option::Option::Some(v);
        self
    }
    /// <p>A list of organizational unit IDs that follow the pattern <code>ou-\[0-9a-z\]{4,32}-\[a-z0-9\]{8,32}</code>. These IDs represent the organizational units within an Amazon Web Services Organizations structure that are covered by the membership.</p>
    /// <p>Each organizational unit ID in the list must:</p>
    /// <ul>
    /// <li>
    /// <p>Begin with the prefix 'ou-'</p></li>
    /// <li>
    /// <p>Contain between 4 and 32 alphanumeric characters in the first segment</p></li>
    /// <li>
    /// <p>Contain between 8 and 32 alphanumeric characters in the second segment</p></li>
    /// </ul>
    pub fn set_organizational_units(mut self, input: ::std::option::Option<::std::vec::Vec<::std::string::String>>) -> Self {
        self.organizational_units = input;
        self
    }
    /// <p>A list of organizational unit IDs that follow the pattern <code>ou-\[0-9a-z\]{4,32}-\[a-z0-9\]{8,32}</code>. These IDs represent the organizational units within an Amazon Web Services Organizations structure that are covered by the membership.</p>
    /// <p>Each organizational unit ID in the list must:</p>
    /// <ul>
    /// <li>
    /// <p>Begin with the prefix 'ou-'</p></li>
    /// <li>
    /// <p>Contain between 4 and 32 alphanumeric characters in the first segment</p></li>
    /// <li>
    /// <p>Contain between 8 and 32 alphanumeric characters in the second segment</p></li>
    /// </ul>
    pub fn get_organizational_units(&self) -> &::std::option::Option<::std::vec::Vec<::std::string::String>> {
        &self.organizational_units
    }
    /// Consumes the builder and constructs a [`MembershipAccountsConfigurations`](crate::types::MembershipAccountsConfigurations).
    pub fn build(self) -> crate::types::MembershipAccountsConfigurations {
        crate::types::MembershipAccountsConfigurations {
            cover_entire_organization: self.cover_entire_organization,
            organizational_units: self.organizational_units,
        }
    }
}
