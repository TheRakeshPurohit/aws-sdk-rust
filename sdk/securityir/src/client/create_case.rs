// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateCase`](crate::operation::create_case::builders::CreateCaseFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`client_token(impl Into<String>)`](crate::operation::create_case::builders::CreateCaseFluentBuilder::client_token) / [`set_client_token(Option<String>)`](crate::operation::create_case::builders::CreateCaseFluentBuilder::set_client_token):<br>required: **false**<br><note>  <p>The <code>clientToken</code> field is an idempotency key used to ensure that repeated attempts for a single action will be ignored by the server during retries. A caller supplied unique ID (typically a UUID) should be provided.</p> </note><br>
    ///   - [`resolver_type(ResolverType)`](crate::operation::create_case::builders::CreateCaseFluentBuilder::resolver_type) / [`set_resolver_type(Option<ResolverType>)`](crate::operation::create_case::builders::CreateCaseFluentBuilder::set_resolver_type):<br>required: **true**<br><p>Required element used in combination with CreateCase to identify the resolver type.</p><br>
    ///   - [`title(impl Into<String>)`](crate::operation::create_case::builders::CreateCaseFluentBuilder::title) / [`set_title(Option<String>)`](crate::operation::create_case::builders::CreateCaseFluentBuilder::set_title):<br>required: **true**<br><p>Required element used in combination with CreateCase to provide a title for the new case.</p><br>
    ///   - [`description(impl Into<String>)`](crate::operation::create_case::builders::CreateCaseFluentBuilder::description) / [`set_description(Option<String>)`](crate::operation::create_case::builders::CreateCaseFluentBuilder::set_description):<br>required: **true**<br><p>Required element used in combination with CreateCase</p> <p>to provide a description for the new case.</p><br>
    ///   - [`engagement_type(EngagementType)`](crate::operation::create_case::builders::CreateCaseFluentBuilder::engagement_type) / [`set_engagement_type(Option<EngagementType>)`](crate::operation::create_case::builders::CreateCaseFluentBuilder::set_engagement_type):<br>required: **true**<br><p>Required element used in combination with CreateCase to provide an engagement type for the new cases. Available engagement types include Security Incident | Investigation</p><br>
    ///   - [`reported_incident_start_date(DateTime)`](crate::operation::create_case::builders::CreateCaseFluentBuilder::reported_incident_start_date) / [`set_reported_incident_start_date(Option<DateTime>)`](crate::operation::create_case::builders::CreateCaseFluentBuilder::set_reported_incident_start_date):<br>required: **true**<br><p>Required element used in combination with CreateCase to provide an initial start date for the unauthorized activity.</p><br>
    ///   - [`impacted_accounts(impl Into<String>)`](crate::operation::create_case::builders::CreateCaseFluentBuilder::impacted_accounts) / [`set_impacted_accounts(Option<Vec::<String>>)`](crate::operation::create_case::builders::CreateCaseFluentBuilder::set_impacted_accounts):<br>required: **true**<br><p>Required element used in combination with CreateCase to provide a list of impacted accounts.</p><note>  <p>AWS account ID's may appear less than 12 characters and need to be zero-prepended. An example would be <code>123123123</code> which is nine digits, and with zero-prepend would be <code>000123123123</code>. Not zero-prepending to 12 digits could result in errors.</p> </note><br>
    ///   - [`watchers(Watcher)`](crate::operation::create_case::builders::CreateCaseFluentBuilder::watchers) / [`set_watchers(Option<Vec::<Watcher>>)`](crate::operation::create_case::builders::CreateCaseFluentBuilder::set_watchers):<br>required: **true**<br><p>Required element used in combination with CreateCase to provide a list of entities to receive notifications for case updates.</p><br>
    ///   - [`threat_actor_ip_addresses(ThreatActorIp)`](crate::operation::create_case::builders::CreateCaseFluentBuilder::threat_actor_ip_addresses) / [`set_threat_actor_ip_addresses(Option<Vec::<ThreatActorIp>>)`](crate::operation::create_case::builders::CreateCaseFluentBuilder::set_threat_actor_ip_addresses):<br>required: **false**<br><p>An optional element used in combination with CreateCase to provide a list of suspicious internet protocol addresses associated with unauthorized activity.</p><br>
    ///   - [`impacted_services(impl Into<String>)`](crate::operation::create_case::builders::CreateCaseFluentBuilder::impacted_services) / [`set_impacted_services(Option<Vec::<String>>)`](crate::operation::create_case::builders::CreateCaseFluentBuilder::set_impacted_services):<br>required: **false**<br><p>An optional element used in combination with CreateCase to provide a list of services impacted.</p><br>
    ///   - [`impacted_aws_regions(ImpactedAwsRegion)`](crate::operation::create_case::builders::CreateCaseFluentBuilder::impacted_aws_regions) / [`set_impacted_aws_regions(Option<Vec::<ImpactedAwsRegion>>)`](crate::operation::create_case::builders::CreateCaseFluentBuilder::set_impacted_aws_regions):<br>required: **false**<br><p>An optional element used in combination with CreateCase to provide a list of impacted regions.</p><br>
    ///   - [`tags(impl Into<String>, impl Into<String>)`](crate::operation::create_case::builders::CreateCaseFluentBuilder::tags) / [`set_tags(Option<HashMap::<String, String>>)`](crate::operation::create_case::builders::CreateCaseFluentBuilder::set_tags):<br>required: **false**<br><p>An optional element used in combination with CreateCase to add customer specified tags to a case.</p><br>
    /// - On success, responds with [`CreateCaseOutput`](crate::operation::create_case::CreateCaseOutput) with field(s):
    ///   - [`case_id(String)`](crate::operation::create_case::CreateCaseOutput::case_id): <p>A response element providing responses for requests to CreateCase. This element responds with the case ID.</p>
    /// - On failure, responds with [`SdkError<CreateCaseError>`](crate::operation::create_case::CreateCaseError)
    pub fn create_case(&self) -> crate::operation::create_case::builders::CreateCaseFluentBuilder {
        crate::operation::create_case::builders::CreateCaseFluentBuilder::new(self.handle.clone())
    }
}
