// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateMembership`](crate::operation::create_membership::builders::CreateMembershipFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`client_token(impl Into<String>)`](crate::operation::create_membership::builders::CreateMembershipFluentBuilder::client_token) / [`set_client_token(Option<String>)`](crate::operation::create_membership::builders::CreateMembershipFluentBuilder::set_client_token):<br>required: **false**<br><note>  <p>The <code>clientToken</code> field is an idempotency key used to ensure that repeated attempts for a single action will be ignored by the server during retries. A caller supplied unique ID (typically a UUID) should be provided.</p> </note><br>
    ///   - [`membership_name(impl Into<String>)`](crate::operation::create_membership::builders::CreateMembershipFluentBuilder::membership_name) / [`set_membership_name(Option<String>)`](crate::operation::create_membership::builders::CreateMembershipFluentBuilder::set_membership_name):<br>required: **true**<br><p>Required element used in combination with CreateMembership to create a name for the membership.</p><br>
    ///   - [`incident_response_team(IncidentResponder)`](crate::operation::create_membership::builders::CreateMembershipFluentBuilder::incident_response_team) / [`set_incident_response_team(Option<Vec::<IncidentResponder>>)`](crate::operation::create_membership::builders::CreateMembershipFluentBuilder::set_incident_response_team):<br>required: **true**<br><p>Required element used in combination with CreateMembership to add customer incident response team members and trusted partners to the membership.</p><br>
    ///   - [`opt_in_features(OptInFeature)`](crate::operation::create_membership::builders::CreateMembershipFluentBuilder::opt_in_features) / [`set_opt_in_features(Option<Vec::<OptInFeature>>)`](crate::operation::create_membership::builders::CreateMembershipFluentBuilder::set_opt_in_features):<br>required: **false**<br><p>Optional element to enable the monitoring and investigation opt-in features for the service.</p><br>
    ///   - [`tags(impl Into<String>, impl Into<String>)`](crate::operation::create_membership::builders::CreateMembershipFluentBuilder::tags) / [`set_tags(Option<HashMap::<String, String>>)`](crate::operation::create_membership::builders::CreateMembershipFluentBuilder::set_tags):<br>required: **false**<br><p>Optional element for customer configured tags.</p><br>
    ///   - [`cover_entire_organization(bool)`](crate::operation::create_membership::builders::CreateMembershipFluentBuilder::cover_entire_organization) / [`set_cover_entire_organization(Option<bool>)`](crate::operation::create_membership::builders::CreateMembershipFluentBuilder::set_cover_entire_organization):<br>required: **false**<br><p>The <code>coverEntireOrganization</code> parameter is a boolean flag that determines whether the membership should be applied to the entire Amazon Web Services Organization. When set to true, the membership will be created for all accounts within the organization. When set to false, the membership will only be created for specified accounts.</p> <p>This parameter is optional. If not specified, the default value is false.</p> <ul>  <li>   <p>If set to <i>true</i>: The membership will automatically include all existing and future accounts in the Amazon Web Services Organization.</p></li>  <li>   <p>If set to <i>false</i>: The membership will only apply to explicitly specified accounts.</p></li> </ul><br>
    /// - On success, responds with [`CreateMembershipOutput`](crate::operation::create_membership::CreateMembershipOutput) with field(s):
    ///   - [`membership_id(String)`](crate::operation::create_membership::CreateMembershipOutput::membership_id): <p>Response element for CreateMembership providing the newly created membership ID.</p>
    /// - On failure, responds with [`SdkError<CreateMembershipError>`](crate::operation::create_membership::CreateMembershipError)
    pub fn create_membership(&self) -> crate::operation::create_membership::builders::CreateMembershipFluentBuilder {
        crate::operation::create_membership::builders::CreateMembershipFluentBuilder::new(self.handle.clone())
    }
}
