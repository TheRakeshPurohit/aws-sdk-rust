// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub(crate) fn de_workflow_list(
    decoder: &mut ::aws_smithy_cbor::Decoder,
) -> ::std::result::Result<::std::vec::Vec<crate::types::Workflow>, ::aws_smithy_cbor::decode::DeserializeError> {
    fn member(
        mut list: ::std::vec::Vec<crate::types::Workflow>,
        decoder: &mut ::aws_smithy_cbor::Decoder,
    ) -> ::std::result::Result<::std::vec::Vec<crate::types::Workflow>, ::aws_smithy_cbor::decode::DeserializeError> {
        let value = match decoder.datatype()? {
            ::aws_smithy_cbor::data::Type::Null => {
                decoder.null()?;
                return ::std::result::Result::Ok(list);
            }
            _ => crate::protocol_serde::shape_workflow::de_workflow(decoder)?,
        };
        list.push(value);
        Ok(list)
    }

    let mut list = ::std::vec::Vec::new();

    match decoder.list()? {
        None => loop {
            match decoder.datatype()? {
                ::aws_smithy_cbor::data::Type::Break => {
                    decoder.skip()?;
                    break;
                }
                _ => {
                    list = member(list, decoder)?;
                }
            };
        },
        Some(n) => {
            for _ in 0..n {
                list = member(list, decoder)?;
            }
        }
    };

    Ok(list)
}
