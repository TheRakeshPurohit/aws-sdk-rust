// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub(crate) fn type_erase_result<O, E>(
    result: ::std::result::Result<O, E>,
) -> ::std::result::Result<
    ::aws_smithy_runtime_api::client::interceptors::context::Output,
    ::aws_smithy_runtime_api::client::orchestrator::OrchestratorError<::aws_smithy_runtime_api::client::interceptors::context::Error>,
>
where
    O: ::std::fmt::Debug + ::std::marker::Send + ::std::marker::Sync + 'static,
    E: ::std::error::Error + std::fmt::Debug + ::std::marker::Send + ::std::marker::Sync + 'static,
{
    result
        .map(|output| ::aws_smithy_runtime_api::client::interceptors::context::Output::erase(output))
        .map_err(|error| ::aws_smithy_runtime_api::client::interceptors::context::Error::erase(error))
        .map_err(::std::convert::Into::into)
}

pub(crate) mod shape_approve_plan_execution_step;

pub(crate) mod shape_cancel_plan_execution;

pub(crate) mod shape_create_plan;

pub(crate) mod shape_delete_plan;

pub(crate) mod shape_get_plan;

pub(crate) mod shape_get_plan_evaluation_status;

pub(crate) mod shape_get_plan_execution;

pub(crate) mod shape_get_plan_in_region;

pub(crate) mod shape_list_plan_execution_events;

pub(crate) mod shape_list_plan_executions;

pub(crate) mod shape_list_plans;

pub(crate) mod shape_list_plans_in_region;

pub(crate) mod shape_list_route53_health_checks;

pub(crate) mod shape_list_tags_for_resource;

pub(crate) mod shape_start_plan_execution;

pub(crate) mod shape_tag_resource;

pub(crate) mod shape_untag_resource;

pub(crate) mod shape_update_plan;

pub(crate) mod shape_update_plan_execution;

pub(crate) mod shape_update_plan_execution_step;

pub(crate) mod shape_access_denied_exception;

pub(crate) mod shape_approve_plan_execution_step_input;

pub(crate) mod shape_cancel_plan_execution_input;

pub(crate) mod shape_create_plan_input;

pub(crate) mod shape_delete_plan_input;

pub(crate) mod shape_get_plan_evaluation_status_input;

pub(crate) mod shape_get_plan_execution_input;

pub(crate) mod shape_get_plan_in_region_input;

pub(crate) mod shape_get_plan_input;

pub(crate) mod shape_illegal_argument_exception;

pub(crate) mod shape_illegal_state_exception;

pub(crate) mod shape_internal_server_exception;

pub(crate) mod shape_list_plan_execution_events_input;

pub(crate) mod shape_list_plan_executions_input;

pub(crate) mod shape_list_plans_in_region_input;

pub(crate) mod shape_list_plans_input;

pub(crate) mod shape_list_route53_health_checks_input;

pub(crate) mod shape_list_tags_for_resource_input;

pub(crate) mod shape_resource_not_found_exception;

pub(crate) mod shape_start_plan_execution_input;

pub(crate) mod shape_tag_resource_input;

pub(crate) mod shape_untag_resource_input;

pub(crate) mod shape_update_plan_execution_input;

pub(crate) mod shape_update_plan_execution_step_input;

pub(crate) mod shape_update_plan_input;

pub(crate) mod shape_abbreviated_executions_list;

pub(crate) mod shape_associated_alarm;

pub(crate) mod shape_execution_event_list;

pub(crate) mod shape_plan;

pub(crate) mod shape_plan_list;

pub(crate) mod shape_plan_warnings;

pub(crate) mod shape_route53_health_check_list;

pub(crate) mod shape_step_states;

pub(crate) mod shape_tags;

pub(crate) mod shape_trigger;

pub(crate) mod shape_workflow;

pub(crate) mod shape_abbreviated_execution;

pub(crate) mod shape_abbreviated_plan;

pub(crate) mod shape_associated_alarm_map;

pub(crate) mod shape_execution_event;

pub(crate) mod shape_region_list;

pub(crate) mod shape_resource_warning;

pub(crate) mod shape_route53_health_check;

pub(crate) mod shape_step;

pub(crate) mod shape_step_state;

pub(crate) mod shape_trigger_condition;

pub(crate) mod shape_trigger_list;

pub(crate) mod shape_workflow_list;

pub(crate) mod shape_execution_block_configuration;

pub(crate) mod shape_minimal_workflow;

pub(crate) mod shape_resources;

pub(crate) mod shape_arc_routing_control_configuration;

pub(crate) mod shape_custom_action_lambda_configuration;

pub(crate) mod shape_ec2_asg_capacity_increase_configuration;

pub(crate) mod shape_ecs_capacity_increase_configuration;

pub(crate) mod shape_eks_resource_scaling_configuration;

pub(crate) mod shape_execution_approval_configuration;

pub(crate) mod shape_global_aurora_configuration;

pub(crate) mod shape_parallel_execution_block_configuration;

pub(crate) mod shape_region_switch_plan_configuration;

pub(crate) mod shape_route53_health_check_configuration;

pub(crate) mod shape_steps;

pub(crate) mod shape_trigger_condition_list;

pub(crate) mod shape_arc_routing_control_state;

pub(crate) mod shape_asg;

pub(crate) mod shape_ec2_ungraceful;

pub(crate) mod shape_ecs_ungraceful;

pub(crate) mod shape_eks_cluster;

pub(crate) mod shape_eks_resource_scaling_ungraceful;

pub(crate) mod shape_global_aurora_ungraceful;

pub(crate) mod shape_kubernetes_resource_type;

pub(crate) mod shape_kubernetes_scaling_resource;

pub(crate) mod shape_lambda_ungraceful;

pub(crate) mod shape_lambdas;

pub(crate) mod shape_route53_resource_record_set;

pub(crate) mod shape_service;

pub(crate) mod shape_asg_list;

pub(crate) mod shape_aurora_cluster_arns;

pub(crate) mod shape_eks_clusters;

pub(crate) mod shape_kubernetes_scaling_apps;

pub(crate) mod shape_lambda_list;

pub(crate) mod shape_region_and_routing_controls;

pub(crate) mod shape_route53_resource_record_set_list;

pub(crate) mod shape_service_list;

pub(crate) mod shape_arc_routing_control_states;

pub(crate) mod shape_kubernetes_scaling_application;

pub(crate) mod shape_regional_scaling_resource;
