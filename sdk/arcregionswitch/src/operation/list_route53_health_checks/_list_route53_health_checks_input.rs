// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ListRoute53HealthChecksInput {
    /// <p>The Amazon Resource Name (ARN) of the Amazon Route 53 health check request.</p>
    pub arn: ::std::option::Option<::std::string::String>,
    /// <p>The hosted zone ID for the health checks.</p>
    pub hosted_zone_id: ::std::option::Option<::std::string::String>,
    /// <p>The record name for the health checks.</p>
    pub record_name: ::std::option::Option<::std::string::String>,
    /// <p>The number of objects that you want to return with this call.</p>
    pub max_results: ::std::option::Option<i32>,
    /// <p>Specifies that you want to receive the next page of results. Valid only if you received a <code>nextToken</code> response in the previous request. If you did, it indicates that more output is available. Set this parameter to the value provided by the previous call's <code>nextToken</code> response to request the next page of results.</p>
    pub next_token: ::std::option::Option<::std::string::String>,
}
impl ListRoute53HealthChecksInput {
    /// <p>The Amazon Resource Name (ARN) of the Amazon Route 53 health check request.</p>
    pub fn arn(&self) -> ::std::option::Option<&str> {
        self.arn.as_deref()
    }
    /// <p>The hosted zone ID for the health checks.</p>
    pub fn hosted_zone_id(&self) -> ::std::option::Option<&str> {
        self.hosted_zone_id.as_deref()
    }
    /// <p>The record name for the health checks.</p>
    pub fn record_name(&self) -> ::std::option::Option<&str> {
        self.record_name.as_deref()
    }
    /// <p>The number of objects that you want to return with this call.</p>
    pub fn max_results(&self) -> ::std::option::Option<i32> {
        self.max_results
    }
    /// <p>Specifies that you want to receive the next page of results. Valid only if you received a <code>nextToken</code> response in the previous request. If you did, it indicates that more output is available. Set this parameter to the value provided by the previous call's <code>nextToken</code> response to request the next page of results.</p>
    pub fn next_token(&self) -> ::std::option::Option<&str> {
        self.next_token.as_deref()
    }
}
impl ListRoute53HealthChecksInput {
    /// Creates a new builder-style object to manufacture [`ListRoute53HealthChecksInput`](crate::operation::list_route53_health_checks::ListRoute53HealthChecksInput).
    pub fn builder() -> crate::operation::list_route53_health_checks::builders::ListRoute53HealthChecksInputBuilder {
        crate::operation::list_route53_health_checks::builders::ListRoute53HealthChecksInputBuilder::default()
    }
}

/// A builder for [`ListRoute53HealthChecksInput`](crate::operation::list_route53_health_checks::ListRoute53HealthChecksInput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct ListRoute53HealthChecksInputBuilder {
    pub(crate) arn: ::std::option::Option<::std::string::String>,
    pub(crate) hosted_zone_id: ::std::option::Option<::std::string::String>,
    pub(crate) record_name: ::std::option::Option<::std::string::String>,
    pub(crate) max_results: ::std::option::Option<i32>,
    pub(crate) next_token: ::std::option::Option<::std::string::String>,
}
impl ListRoute53HealthChecksInputBuilder {
    /// <p>The Amazon Resource Name (ARN) of the Amazon Route 53 health check request.</p>
    /// This field is required.
    pub fn arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the Amazon Route 53 health check request.</p>
    pub fn set_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.arn = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the Amazon Route 53 health check request.</p>
    pub fn get_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.arn
    }
    /// <p>The hosted zone ID for the health checks.</p>
    pub fn hosted_zone_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.hosted_zone_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The hosted zone ID for the health checks.</p>
    pub fn set_hosted_zone_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.hosted_zone_id = input;
        self
    }
    /// <p>The hosted zone ID for the health checks.</p>
    pub fn get_hosted_zone_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.hosted_zone_id
    }
    /// <p>The record name for the health checks.</p>
    pub fn record_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.record_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The record name for the health checks.</p>
    pub fn set_record_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.record_name = input;
        self
    }
    /// <p>The record name for the health checks.</p>
    pub fn get_record_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.record_name
    }
    /// <p>The number of objects that you want to return with this call.</p>
    pub fn max_results(mut self, input: i32) -> Self {
        self.max_results = ::std::option::Option::Some(input);
        self
    }
    /// <p>The number of objects that you want to return with this call.</p>
    pub fn set_max_results(mut self, input: ::std::option::Option<i32>) -> Self {
        self.max_results = input;
        self
    }
    /// <p>The number of objects that you want to return with this call.</p>
    pub fn get_max_results(&self) -> &::std::option::Option<i32> {
        &self.max_results
    }
    /// <p>Specifies that you want to receive the next page of results. Valid only if you received a <code>nextToken</code> response in the previous request. If you did, it indicates that more output is available. Set this parameter to the value provided by the previous call's <code>nextToken</code> response to request the next page of results.</p>
    pub fn next_token(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.next_token = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>Specifies that you want to receive the next page of results. Valid only if you received a <code>nextToken</code> response in the previous request. If you did, it indicates that more output is available. Set this parameter to the value provided by the previous call's <code>nextToken</code> response to request the next page of results.</p>
    pub fn set_next_token(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.next_token = input;
        self
    }
    /// <p>Specifies that you want to receive the next page of results. Valid only if you received a <code>nextToken</code> response in the previous request. If you did, it indicates that more output is available. Set this parameter to the value provided by the previous call's <code>nextToken</code> response to request the next page of results.</p>
    pub fn get_next_token(&self) -> &::std::option::Option<::std::string::String> {
        &self.next_token
    }
    /// Consumes the builder and constructs a [`ListRoute53HealthChecksInput`](crate::operation::list_route53_health_checks::ListRoute53HealthChecksInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::list_route53_health_checks::ListRoute53HealthChecksInput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(crate::operation::list_route53_health_checks::ListRoute53HealthChecksInput {
            arn: self.arn,
            hosted_zone_id: self.hosted_zone_id,
            record_name: self.record_name,
            max_results: self.max_results,
            next_token: self.next_token,
        })
    }
}
