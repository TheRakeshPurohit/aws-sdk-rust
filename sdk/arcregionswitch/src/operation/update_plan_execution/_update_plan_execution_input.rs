// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct UpdatePlanExecutionInput {
    /// <p>The Amazon Resource Name (ARN) of the plan with the execution to update.</p>
    pub plan_arn: ::std::option::Option<::std::string::String>,
    /// <p>The execution identifier of a plan execution.</p>
    pub execution_id: ::std::option::Option<::std::string::String>,
    /// <p>The action specified for a plan execution, for example, Switch to Graceful or Pause.</p>
    pub action: ::std::option::Option<crate::types::UpdatePlanExecutionAction>,
    /// <p>An optional comment about the plan execution.</p>
    pub comment: ::std::option::Option<::std::string::String>,
}
impl UpdatePlanExecutionInput {
    /// <p>The Amazon Resource Name (ARN) of the plan with the execution to update.</p>
    pub fn plan_arn(&self) -> ::std::option::Option<&str> {
        self.plan_arn.as_deref()
    }
    /// <p>The execution identifier of a plan execution.</p>
    pub fn execution_id(&self) -> ::std::option::Option<&str> {
        self.execution_id.as_deref()
    }
    /// <p>The action specified for a plan execution, for example, Switch to Graceful or Pause.</p>
    pub fn action(&self) -> ::std::option::Option<&crate::types::UpdatePlanExecutionAction> {
        self.action.as_ref()
    }
    /// <p>An optional comment about the plan execution.</p>
    pub fn comment(&self) -> ::std::option::Option<&str> {
        self.comment.as_deref()
    }
}
impl UpdatePlanExecutionInput {
    /// Creates a new builder-style object to manufacture [`UpdatePlanExecutionInput`](crate::operation::update_plan_execution::UpdatePlanExecutionInput).
    pub fn builder() -> crate::operation::update_plan_execution::builders::UpdatePlanExecutionInputBuilder {
        crate::operation::update_plan_execution::builders::UpdatePlanExecutionInputBuilder::default()
    }
}

/// A builder for [`UpdatePlanExecutionInput`](crate::operation::update_plan_execution::UpdatePlanExecutionInput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct UpdatePlanExecutionInputBuilder {
    pub(crate) plan_arn: ::std::option::Option<::std::string::String>,
    pub(crate) execution_id: ::std::option::Option<::std::string::String>,
    pub(crate) action: ::std::option::Option<crate::types::UpdatePlanExecutionAction>,
    pub(crate) comment: ::std::option::Option<::std::string::String>,
}
impl UpdatePlanExecutionInputBuilder {
    /// <p>The Amazon Resource Name (ARN) of the plan with the execution to update.</p>
    /// This field is required.
    pub fn plan_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.plan_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the plan with the execution to update.</p>
    pub fn set_plan_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.plan_arn = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the plan with the execution to update.</p>
    pub fn get_plan_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.plan_arn
    }
    /// <p>The execution identifier of a plan execution.</p>
    /// This field is required.
    pub fn execution_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.execution_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The execution identifier of a plan execution.</p>
    pub fn set_execution_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.execution_id = input;
        self
    }
    /// <p>The execution identifier of a plan execution.</p>
    pub fn get_execution_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.execution_id
    }
    /// <p>The action specified for a plan execution, for example, Switch to Graceful or Pause.</p>
    /// This field is required.
    pub fn action(mut self, input: crate::types::UpdatePlanExecutionAction) -> Self {
        self.action = ::std::option::Option::Some(input);
        self
    }
    /// <p>The action specified for a plan execution, for example, Switch to Graceful or Pause.</p>
    pub fn set_action(mut self, input: ::std::option::Option<crate::types::UpdatePlanExecutionAction>) -> Self {
        self.action = input;
        self
    }
    /// <p>The action specified for a plan execution, for example, Switch to Graceful or Pause.</p>
    pub fn get_action(&self) -> &::std::option::Option<crate::types::UpdatePlanExecutionAction> {
        &self.action
    }
    /// <p>An optional comment about the plan execution.</p>
    pub fn comment(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.comment = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>An optional comment about the plan execution.</p>
    pub fn set_comment(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.comment = input;
        self
    }
    /// <p>An optional comment about the plan execution.</p>
    pub fn get_comment(&self) -> &::std::option::Option<::std::string::String> {
        &self.comment
    }
    /// Consumes the builder and constructs a [`UpdatePlanExecutionInput`](crate::operation::update_plan_execution::UpdatePlanExecutionInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<crate::operation::update_plan_execution::UpdatePlanExecutionInput, ::aws_smithy_types::error::operation::BuildError>
    {
        ::std::result::Result::Ok(crate::operation::update_plan_execution::UpdatePlanExecutionInput {
            plan_arn: self.plan_arn,
            execution_id: self.execution_id,
            action: self.action,
            comment: self.comment,
        })
    }
}
