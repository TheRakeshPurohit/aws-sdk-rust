// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`GetPlanExecution`](crate::operation::get_plan_execution::builders::GetPlanExecutionFluentBuilder) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::operation::get_plan_execution::builders::GetPlanExecutionFluentBuilder::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`plan_arn(impl Into<String>)`](crate::operation::get_plan_execution::builders::GetPlanExecutionFluentBuilder::plan_arn) / [`set_plan_arn(Option<String>)`](crate::operation::get_plan_execution::builders::GetPlanExecutionFluentBuilder::set_plan_arn):<br>required: **true**<br><p>The Amazon Resource Name (ARN) of the plan with the execution to retrieve.</p><br>
    ///   - [`execution_id(impl Into<String>)`](crate::operation::get_plan_execution::builders::GetPlanExecutionFluentBuilder::execution_id) / [`set_execution_id(Option<String>)`](crate::operation::get_plan_execution::builders::GetPlanExecutionFluentBuilder::set_execution_id):<br>required: **true**<br><p>The execution identifier of a plan execution.</p><br>
    ///   - [`max_results(i32)`](crate::operation::get_plan_execution::builders::GetPlanExecutionFluentBuilder::max_results) / [`set_max_results(Option<i32>)`](crate::operation::get_plan_execution::builders::GetPlanExecutionFluentBuilder::set_max_results):<br>required: **false**<br><p>The number of objects that you want to return with this call.</p><br>
    ///   - [`next_token(impl Into<String>)`](crate::operation::get_plan_execution::builders::GetPlanExecutionFluentBuilder::next_token) / [`set_next_token(Option<String>)`](crate::operation::get_plan_execution::builders::GetPlanExecutionFluentBuilder::set_next_token):<br>required: **false**<br><p>Specifies that you want to receive the next page of results. Valid only if you received a <code>nextToken</code> response in the previous request. If you did, it indicates that more output is available. Set this parameter to the value provided by the previous call's <code>nextToken</code> response to request the next page of results.</p><br>
    /// - On success, responds with [`GetPlanExecutionOutput`](crate::operation::get_plan_execution::GetPlanExecutionOutput) with field(s):
    ///   - [`plan_arn(String)`](crate::operation::get_plan_execution::GetPlanExecutionOutput::plan_arn): <p>The Amazon Resource Name (ARN) of the plan.</p>
    ///   - [`execution_id(String)`](crate::operation::get_plan_execution::GetPlanExecutionOutput::execution_id): <p>The execution identifier of a plan execution.</p>
    ///   - [`version(Option<String>)`](crate::operation::get_plan_execution::GetPlanExecutionOutput::version): <p>The version for the plan.</p>
    ///   - [`updated_at(Option<DateTime>)`](crate::operation::get_plan_execution::GetPlanExecutionOutput::updated_at): <p>The timestamp when the plan execution was last updated.</p>
    ///   - [`comment(Option<String>)`](crate::operation::get_plan_execution::GetPlanExecutionOutput::comment): <p>A comment included on the plan execution.</p>
    ///   - [`start_time(DateTime)`](crate::operation::get_plan_execution::GetPlanExecutionOutput::start_time): <p>The time (UTC) when the plan execution started.</p>
    ///   - [`end_time(Option<DateTime>)`](crate::operation::get_plan_execution::GetPlanExecutionOutput::end_time): <p>The time (UTC) when the plan execution ended.</p>
    ///   - [`mode(ExecutionMode)`](crate::operation::get_plan_execution::GetPlanExecutionOutput::mode): <p>The plan execution mode. Valid values are <code>Practice</code>, for testing without making actual changes, or <code>Recovery</code>, for actual traffic shifting and application recovery.</p>
    ///   - [`execution_state(ExecutionState)`](crate::operation::get_plan_execution::GetPlanExecutionOutput::execution_state): <p>The plan execution state. Provides the state of a plan execution, for example, In Progress or Paused by Operator.</p>
    ///   - [`execution_action(ExecutionAction)`](crate::operation::get_plan_execution::GetPlanExecutionOutput::execution_action): <p>The plan execution action. Valid values are <code>Activate</code>, to activate an Amazon Web Services Region, or <code>Deactivate</code>, to deactivate a Region.</p>
    ///   - [`execution_region(String)`](crate::operation::get_plan_execution::GetPlanExecutionOutput::execution_region): <p>The Amazon Web Services Region for a plan execution.</p>
    ///   - [`step_states(Option<Vec::<StepState>>)`](crate::operation::get_plan_execution::GetPlanExecutionOutput::step_states): <p>The states of the steps in the plan execution.</p>
    ///   - [`plan(Option<Plan>)`](crate::operation::get_plan_execution::GetPlanExecutionOutput::plan): <p>The details of the Region switch plan.</p>
    ///   - [`actual_recovery_time(Option<String>)`](crate::operation::get_plan_execution::GetPlanExecutionOutput::actual_recovery_time): <p>The actual recovery time that Region switch calculates for a plan execution. Actual recovery time includes the time for the plan to run added to the time elapsed until the application health alarms that you've specified are healthy again.</p>
    ///   - [`next_token(Option<String>)`](crate::operation::get_plan_execution::GetPlanExecutionOutput::next_token): <p>Specifies that you want to receive the next page of results. Valid only if you received a <code>nextToken</code> response in the previous request. If you did, it indicates that more output is available. Set this parameter to the value provided by the previous call's <code>nextToken</code> response to request the next page of results.</p>
    /// - On failure, responds with [`SdkError<GetPlanExecutionError>`](crate::operation::get_plan_execution::GetPlanExecutionError)
    pub fn get_plan_execution(&self) -> crate::operation::get_plan_execution::builders::GetPlanExecutionFluentBuilder {
        crate::operation::get_plan_execution::builders::GetPlanExecutionFluentBuilder::new(self.handle.clone())
    }
}
