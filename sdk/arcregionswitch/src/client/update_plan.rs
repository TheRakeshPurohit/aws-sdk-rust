// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`UpdatePlan`](crate::operation::update_plan::builders::UpdatePlanFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`arn(impl Into<String>)`](crate::operation::update_plan::builders::UpdatePlanFluentBuilder::arn) / [`set_arn(Option<String>)`](crate::operation::update_plan::builders::UpdatePlanFluentBuilder::set_arn):<br>required: **true**<br><p>The Amazon Resource Name (ARN) of the plan.</p><br>
    ///   - [`description(impl Into<String>)`](crate::operation::update_plan::builders::UpdatePlanFluentBuilder::description) / [`set_description(Option<String>)`](crate::operation::update_plan::builders::UpdatePlanFluentBuilder::set_description):<br>required: **false**<br><p>The updated description for the Region switch plan.</p><br>
    ///   - [`workflows(Workflow)`](crate::operation::update_plan::builders::UpdatePlanFluentBuilder::workflows) / [`set_workflows(Option<Vec::<Workflow>>)`](crate::operation::update_plan::builders::UpdatePlanFluentBuilder::set_workflows):<br>required: **true**<br><p>The updated workflows for the Region switch plan.</p><br>
    ///   - [`execution_role(impl Into<String>)`](crate::operation::update_plan::builders::UpdatePlanFluentBuilder::execution_role) / [`set_execution_role(Option<String>)`](crate::operation::update_plan::builders::UpdatePlanFluentBuilder::set_execution_role):<br>required: **true**<br><p>The updated IAM role ARN that grants Region switch the permissions needed to execute the plan steps.</p><br>
    ///   - [`recovery_time_objective_minutes(i32)`](crate::operation::update_plan::builders::UpdatePlanFluentBuilder::recovery_time_objective_minutes) / [`set_recovery_time_objective_minutes(Option<i32>)`](crate::operation::update_plan::builders::UpdatePlanFluentBuilder::set_recovery_time_objective_minutes):<br>required: **false**<br><p>The updated target recovery time objective (RTO) in minutes for the plan.</p><br>
    ///   - [`associated_alarms(impl Into<String>, AssociatedAlarm)`](crate::operation::update_plan::builders::UpdatePlanFluentBuilder::associated_alarms) / [`set_associated_alarms(Option<HashMap::<String, AssociatedAlarm>>)`](crate::operation::update_plan::builders::UpdatePlanFluentBuilder::set_associated_alarms):<br>required: **false**<br><p>The updated CloudWatch alarms associated with the plan.</p><br>
    ///   - [`triggers(Trigger)`](crate::operation::update_plan::builders::UpdatePlanFluentBuilder::triggers) / [`set_triggers(Option<Vec::<Trigger>>)`](crate::operation::update_plan::builders::UpdatePlanFluentBuilder::set_triggers):<br>required: **false**<br><p>The updated conditions that can automatically trigger the execution of the plan.</p><br>
    /// - On success, responds with [`UpdatePlanOutput`](crate::operation::update_plan::UpdatePlanOutput) with field(s):
    ///   - [`plan(Option<Plan>)`](crate::operation::update_plan::UpdatePlanOutput::plan): <p>The details of the updated Region switch plan.</p>
    /// - On failure, responds with [`SdkError<UpdatePlanError>`](crate::operation::update_plan::UpdatePlanError)
    pub fn update_plan(&self) -> crate::operation::update_plan::builders::UpdatePlanFluentBuilder {
        crate::operation::update_plan::builders::UpdatePlanFluentBuilder::new(self.handle.clone())
    }
}
