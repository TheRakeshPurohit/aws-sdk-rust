// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ListPlans`](crate::operation::list_plans::builders::ListPlansFluentBuilder) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::operation::list_plans::builders::ListPlansFluentBuilder::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`max_results(i32)`](crate::operation::list_plans::builders::ListPlansFluentBuilder::max_results) / [`set_max_results(Option<i32>)`](crate::operation::list_plans::builders::ListPlansFluentBuilder::set_max_results):<br>required: **false**<br><p>The number of objects that you want to return with this call.</p><br>
    ///   - [`next_token(impl Into<String>)`](crate::operation::list_plans::builders::ListPlansFluentBuilder::next_token) / [`set_next_token(Option<String>)`](crate::operation::list_plans::builders::ListPlansFluentBuilder::set_next_token):<br>required: **false**<br><p>Specifies that you want to receive the next page of results. Valid only if you received a <code>nextToken</code> response in the previous request. If you did, it indicates that more output is available. Set this parameter to the value provided by the previous call's <code>nextToken</code> response to request the next page of results.</p><br>
    /// - On success, responds with [`ListPlansOutput`](crate::operation::list_plans::ListPlansOutput) with field(s):
    ///   - [`plans(Option<Vec::<AbbreviatedPlan>>)`](crate::operation::list_plans::ListPlansOutput::plans): <p>The plans that were requested.</p>
    ///   - [`next_token(Option<String>)`](crate::operation::list_plans::ListPlansOutput::next_token): <p>Specifies that you want to receive the next page of results. Valid only if you received a <code>nextToken</code> response in the previous request. If you did, it indicates that more output is available. Set this parameter to the value provided by the previous call's <code>nextToken</code> response to request the next page of results.</p>
    /// - On failure, responds with [`SdkError<ListPlansError>`](crate::operation::list_plans::ListPlansError)
    pub fn list_plans(&self) -> crate::operation::list_plans::builders::ListPlansFluentBuilder {
        crate::operation::list_plans::builders::ListPlansFluentBuilder::new(self.handle.clone())
    }
}
