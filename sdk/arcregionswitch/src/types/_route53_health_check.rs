// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The Amazon Route 53 health check.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct Route53HealthCheck {
    /// <p>The Amazon Route 53 health check hosted zone ID.</p>
    pub hosted_zone_id: ::std::string::String,
    /// <p>The Amazon Route 53 record name.</p>
    pub record_name: ::std::string::String,
    /// <p>The Amazon Route 53 health check ID.</p>
    pub health_check_id: ::std::option::Option<::std::string::String>,
    /// <p>The Amazon Route 53 Region.</p>
    pub region: ::std::string::String,
}
impl Route53HealthCheck {
    /// <p>The Amazon Route 53 health check hosted zone ID.</p>
    pub fn hosted_zone_id(&self) -> &str {
        use std::ops::Deref;
        self.hosted_zone_id.deref()
    }
    /// <p>The Amazon Route 53 record name.</p>
    pub fn record_name(&self) -> &str {
        use std::ops::Deref;
        self.record_name.deref()
    }
    /// <p>The Amazon Route 53 health check ID.</p>
    pub fn health_check_id(&self) -> ::std::option::Option<&str> {
        self.health_check_id.as_deref()
    }
    /// <p>The Amazon Route 53 Region.</p>
    pub fn region(&self) -> &str {
        use std::ops::Deref;
        self.region.deref()
    }
}
impl Route53HealthCheck {
    /// Creates a new builder-style object to manufacture [`Route53HealthCheck`](crate::types::Route53HealthCheck).
    pub fn builder() -> crate::types::builders::Route53HealthCheckBuilder {
        crate::types::builders::Route53HealthCheckBuilder::default()
    }
}

/// A builder for [`Route53HealthCheck`](crate::types::Route53HealthCheck).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct Route53HealthCheckBuilder {
    pub(crate) hosted_zone_id: ::std::option::Option<::std::string::String>,
    pub(crate) record_name: ::std::option::Option<::std::string::String>,
    pub(crate) health_check_id: ::std::option::Option<::std::string::String>,
    pub(crate) region: ::std::option::Option<::std::string::String>,
}
impl Route53HealthCheckBuilder {
    /// <p>The Amazon Route 53 health check hosted zone ID.</p>
    /// This field is required.
    pub fn hosted_zone_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.hosted_zone_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Route 53 health check hosted zone ID.</p>
    pub fn set_hosted_zone_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.hosted_zone_id = input;
        self
    }
    /// <p>The Amazon Route 53 health check hosted zone ID.</p>
    pub fn get_hosted_zone_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.hosted_zone_id
    }
    /// <p>The Amazon Route 53 record name.</p>
    /// This field is required.
    pub fn record_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.record_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Route 53 record name.</p>
    pub fn set_record_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.record_name = input;
        self
    }
    /// <p>The Amazon Route 53 record name.</p>
    pub fn get_record_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.record_name
    }
    /// <p>The Amazon Route 53 health check ID.</p>
    pub fn health_check_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.health_check_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Route 53 health check ID.</p>
    pub fn set_health_check_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.health_check_id = input;
        self
    }
    /// <p>The Amazon Route 53 health check ID.</p>
    pub fn get_health_check_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.health_check_id
    }
    /// <p>The Amazon Route 53 Region.</p>
    /// This field is required.
    pub fn region(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.region = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Route 53 Region.</p>
    pub fn set_region(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.region = input;
        self
    }
    /// <p>The Amazon Route 53 Region.</p>
    pub fn get_region(&self) -> &::std::option::Option<::std::string::String> {
        &self.region
    }
    /// Consumes the builder and constructs a [`Route53HealthCheck`](crate::types::Route53HealthCheck).
    /// This method will fail if any of the following fields are not set:
    /// - [`hosted_zone_id`](crate::types::builders::Route53HealthCheckBuilder::hosted_zone_id)
    /// - [`record_name`](crate::types::builders::Route53HealthCheckBuilder::record_name)
    /// - [`region`](crate::types::builders::Route53HealthCheckBuilder::region)
    pub fn build(self) -> ::std::result::Result<crate::types::Route53HealthCheck, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::Route53HealthCheck {
            hosted_zone_id: self.hosted_zone_id.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "hosted_zone_id",
                    "hosted_zone_id was not specified but it is required when building Route53HealthCheck",
                )
            })?,
            record_name: self.record_name.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "record_name",
                    "record_name was not specified but it is required when building Route53HealthCheck",
                )
            })?,
            health_check_id: self.health_check_id,
            region: self.region.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "region",
                    "region was not specified but it is required when building Route53HealthCheck",
                )
            })?,
        })
    }
}
