// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Configuration for approval steps in a Region switch plan execution. Approval steps require manual intervention before the execution can proceed.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ExecutionApprovalConfiguration {
    /// <p>The timeout value specified for the configuration.</p>
    pub timeout_minutes: i32,
    /// <p>The IAM approval role for the configuration.</p>
    pub approval_role: ::std::string::String,
}
impl ExecutionApprovalConfiguration {
    /// <p>The timeout value specified for the configuration.</p>
    pub fn timeout_minutes(&self) -> i32 {
        self.timeout_minutes
    }
    /// <p>The IAM approval role for the configuration.</p>
    pub fn approval_role(&self) -> &str {
        use std::ops::Deref;
        self.approval_role.deref()
    }
}
impl ExecutionApprovalConfiguration {
    /// Creates a new builder-style object to manufacture [`ExecutionApprovalConfiguration`](crate::types::ExecutionApprovalConfiguration).
    pub fn builder() -> crate::types::builders::ExecutionApprovalConfigurationBuilder {
        crate::types::builders::ExecutionApprovalConfigurationBuilder::default()
    }
}

/// A builder for [`ExecutionApprovalConfiguration`](crate::types::ExecutionApprovalConfiguration).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct ExecutionApprovalConfigurationBuilder {
    pub(crate) timeout_minutes: ::std::option::Option<i32>,
    pub(crate) approval_role: ::std::option::Option<::std::string::String>,
}
impl ExecutionApprovalConfigurationBuilder {
    /// <p>The timeout value specified for the configuration.</p>
    pub fn timeout_minutes(mut self, input: i32) -> Self {
        self.timeout_minutes = ::std::option::Option::Some(input);
        self
    }
    /// <p>The timeout value specified for the configuration.</p>
    pub fn set_timeout_minutes(mut self, input: ::std::option::Option<i32>) -> Self {
        self.timeout_minutes = input;
        self
    }
    /// <p>The timeout value specified for the configuration.</p>
    pub fn get_timeout_minutes(&self) -> &::std::option::Option<i32> {
        &self.timeout_minutes
    }
    /// <p>The IAM approval role for the configuration.</p>
    /// This field is required.
    pub fn approval_role(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.approval_role = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The IAM approval role for the configuration.</p>
    pub fn set_approval_role(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.approval_role = input;
        self
    }
    /// <p>The IAM approval role for the configuration.</p>
    pub fn get_approval_role(&self) -> &::std::option::Option<::std::string::String> {
        &self.approval_role
    }
    /// Consumes the builder and constructs a [`ExecutionApprovalConfiguration`](crate::types::ExecutionApprovalConfiguration).
    /// This method will fail if any of the following fields are not set:
    /// - [`approval_role`](crate::types::builders::ExecutionApprovalConfigurationBuilder::approval_role)
    pub fn build(self) -> ::std::result::Result<crate::types::ExecutionApprovalConfiguration, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::ExecutionApprovalConfiguration {
            timeout_minutes: self.timeout_minutes.unwrap_or(60),
            approval_role: self.approval_role.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "approval_role",
                    "approval_role was not specified but it is required when building ExecutionApprovalConfiguration",
                )
            })?,
        })
    }
}
