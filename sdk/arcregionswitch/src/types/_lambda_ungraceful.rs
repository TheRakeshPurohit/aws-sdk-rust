// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Configuration for handling failures when invoking Lambda functions.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct LambdaUngraceful {
    /// <p>The ungraceful behavior for a Lambda function, which must be set to <code>skip</code>.</p>
    pub behavior: crate::types::LambdaUngracefulBehavior,
}
impl LambdaUngraceful {
    /// <p>The ungraceful behavior for a Lambda function, which must be set to <code>skip</code>.</p>
    pub fn behavior(&self) -> &crate::types::LambdaUngracefulBehavior {
        &self.behavior
    }
}
impl LambdaUngraceful {
    /// Creates a new builder-style object to manufacture [`LambdaUngraceful`](crate::types::LambdaUngraceful).
    pub fn builder() -> crate::types::builders::LambdaUngracefulBuilder {
        crate::types::builders::LambdaUngracefulBuilder::default()
    }
}

/// A builder for [`LambdaUngraceful`](crate::types::LambdaUngraceful).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct LambdaUngracefulBuilder {
    pub(crate) behavior: ::std::option::Option<crate::types::LambdaUngracefulBehavior>,
}
impl LambdaUngracefulBuilder {
    /// <p>The ungraceful behavior for a Lambda function, which must be set to <code>skip</code>.</p>
    pub fn behavior(mut self, input: crate::types::LambdaUngracefulBehavior) -> Self {
        self.behavior = ::std::option::Option::Some(input);
        self
    }
    /// <p>The ungraceful behavior for a Lambda function, which must be set to <code>skip</code>.</p>
    pub fn set_behavior(mut self, input: ::std::option::Option<crate::types::LambdaUngracefulBehavior>) -> Self {
        self.behavior = input;
        self
    }
    /// <p>The ungraceful behavior for a Lambda function, which must be set to <code>skip</code>.</p>
    pub fn get_behavior(&self) -> &::std::option::Option<crate::types::LambdaUngracefulBehavior> {
        &self.behavior
    }
    /// Consumes the builder and constructs a [`LambdaUngraceful`](crate::types::LambdaUngraceful).
    pub fn build(self) -> crate::types::LambdaUngraceful {
        crate::types::LambdaUngraceful {
            behavior: self.behavior.unwrap_or(
                "skip"
                    .parse::<crate::types::LambdaUngracefulBehavior>()
                    .expect("static value validated to member"),
            ),
        }
    }
}
