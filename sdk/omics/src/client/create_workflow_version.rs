// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateWorkflowVersion`](crate::operation::create_workflow_version::builders::CreateWorkflowVersionFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`workflow_id(impl Into<String>)`](crate::operation::create_workflow_version::builders::CreateWorkflowVersionFluentBuilder::workflow_id) / [`set_workflow_id(Option<String>)`](crate::operation::create_workflow_version::builders::CreateWorkflowVersionFluentBuilder::set_workflow_id):<br>required: **true**<br><p>The ID of the workflow where you are creating the new version.</p><br>
    ///   - [`version_name(impl Into<String>)`](crate::operation::create_workflow_version::builders::CreateWorkflowVersionFluentBuilder::version_name) / [`set_version_name(Option<String>)`](crate::operation::create_workflow_version::builders::CreateWorkflowVersionFluentBuilder::set_version_name):<br>required: **true**<br><p>A name for the workflow version. Provide a version name that is unique for this workflow. You cannot change the name after HealthOmics creates the version.</p> <p>The version name must start with a letter or number and it can include upper-case and lower-case letters, numbers, hyphens, periods and underscores. The maximum length is 64 characters. You can use a simple naming scheme, such as version1, version2, version3. You can also match your workflow versions with your own internal versioning conventions, such as 2.7.0, 2.7.1, 2.7.2.</p><br>
    ///   - [`definition_zip(Blob)`](crate::operation::create_workflow_version::builders::CreateWorkflowVersionFluentBuilder::definition_zip) / [`set_definition_zip(Option<Blob>)`](crate::operation::create_workflow_version::builders::CreateWorkflowVersionFluentBuilder::set_definition_zip):<br>required: **false**<br><p>A zip archive containing the workflow definition for this workflow version.</p><br>
    ///   - [`definition_uri(impl Into<String>)`](crate::operation::create_workflow_version::builders::CreateWorkflowVersionFluentBuilder::definition_uri) / [`set_definition_uri(Option<String>)`](crate::operation::create_workflow_version::builders::CreateWorkflowVersionFluentBuilder::set_definition_uri):<br>required: **false**<br><p>The URI specifies the location of the workflow definition for this workflow version.</p><br>
    ///   - [`accelerators(Accelerators)`](crate::operation::create_workflow_version::builders::CreateWorkflowVersionFluentBuilder::accelerators) / [`set_accelerators(Option<Accelerators>)`](crate::operation::create_workflow_version::builders::CreateWorkflowVersionFluentBuilder::set_accelerators):<br>required: **false**<br><p>The computational accelerator for this workflow version.</p><br>
    ///   - [`description(impl Into<String>)`](crate::operation::create_workflow_version::builders::CreateWorkflowVersionFluentBuilder::description) / [`set_description(Option<String>)`](crate::operation::create_workflow_version::builders::CreateWorkflowVersionFluentBuilder::set_description):<br>required: **false**<br><p>A description for this workflow version.</p><br>
    ///   - [`engine(WorkflowEngine)`](crate::operation::create_workflow_version::builders::CreateWorkflowVersionFluentBuilder::engine) / [`set_engine(Option<WorkflowEngine>)`](crate::operation::create_workflow_version::builders::CreateWorkflowVersionFluentBuilder::set_engine):<br>required: **false**<br><p>The workflow engine for this workflow version.</p><br>
    ///   - [`main(impl Into<String>)`](crate::operation::create_workflow_version::builders::CreateWorkflowVersionFluentBuilder::main) / [`set_main(Option<String>)`](crate::operation::create_workflow_version::builders::CreateWorkflowVersionFluentBuilder::set_main):<br>required: **false**<br><p>The path of the main definition file for this workflow version.</p><br>
    ///   - [`parameter_template(impl Into<String>, WorkflowParameter)`](crate::operation::create_workflow_version::builders::CreateWorkflowVersionFluentBuilder::parameter_template) / [`set_parameter_template(Option<HashMap::<String, WorkflowParameter>>)`](crate::operation::create_workflow_version::builders::CreateWorkflowVersionFluentBuilder::set_parameter_template):<br>required: **false**<br><p>The parameter template defines the input parameters for runs that use this workflow version.</p><br>
    ///   - [`request_id(impl Into<String>)`](crate::operation::create_workflow_version::builders::CreateWorkflowVersionFluentBuilder::request_id) / [`set_request_id(Option<String>)`](crate::operation::create_workflow_version::builders::CreateWorkflowVersionFluentBuilder::set_request_id):<br>required: **true**<br><p>To ensure that requests don't run multiple times, specify a unique ID for each request.</p><br>
    ///   - [`storage_type(StorageType)`](crate::operation::create_workflow_version::builders::CreateWorkflowVersionFluentBuilder::storage_type) / [`set_storage_type(Option<StorageType>)`](crate::operation::create_workflow_version::builders::CreateWorkflowVersionFluentBuilder::set_storage_type):<br>required: **false**<br><p>The default storage type for runs that use this workflow. STATIC storage allocates a fixed amount of storage. DYNAMIC storage dynamically scales the storage up or down, based on file system utilization. For more information about static and dynamic storage, see <a href="https://docs.aws.amazon.com/omics/latest/dev/Using-workflows.html">Running workflows</a> in the <i>Amazon Web Services HealthOmics User Guide</i>.</p><br>
    ///   - [`storage_capacity(i32)`](crate::operation::create_workflow_version::builders::CreateWorkflowVersionFluentBuilder::storage_capacity) / [`set_storage_capacity(Option<i32>)`](crate::operation::create_workflow_version::builders::CreateWorkflowVersionFluentBuilder::set_storage_capacity):<br>required: **false**<br><p>The default static storage capacity (in gibibytes) for runs that use this workflow or workflow version.</p><br>
    ///   - [`tags(impl Into<String>, impl Into<String>)`](crate::operation::create_workflow_version::builders::CreateWorkflowVersionFluentBuilder::tags) / [`set_tags(Option<HashMap::<String, String>>)`](crate::operation::create_workflow_version::builders::CreateWorkflowVersionFluentBuilder::set_tags):<br>required: **false**<br><p>Optional tags to associate with this workflow version.</p><br>
    ///   - [`workflow_bucket_owner_id(impl Into<String>)`](crate::operation::create_workflow_version::builders::CreateWorkflowVersionFluentBuilder::workflow_bucket_owner_id) / [`set_workflow_bucket_owner_id(Option<String>)`](crate::operation::create_workflow_version::builders::CreateWorkflowVersionFluentBuilder::set_workflow_bucket_owner_id):<br>required: **false**<br><p>Amazon Web Services Id of the owner of the S3 bucket that contains the workflow definition. You need to specify this parameter if your account is not the bucket owner.</p><br>
    ///   - [`readme_markdown(impl Into<String>)`](crate::operation::create_workflow_version::builders::CreateWorkflowVersionFluentBuilder::readme_markdown) / [`set_readme_markdown(Option<String>)`](crate::operation::create_workflow_version::builders::CreateWorkflowVersionFluentBuilder::set_readme_markdown):<br>required: **false**<br><p>The markdown content for the workflow version's README file. This provides documentation and usage information for users of this specific workflow version.</p><br>
    ///   - [`parameter_template_path(impl Into<String>)`](crate::operation::create_workflow_version::builders::CreateWorkflowVersionFluentBuilder::parameter_template_path) / [`set_parameter_template_path(Option<String>)`](crate::operation::create_workflow_version::builders::CreateWorkflowVersionFluentBuilder::set_parameter_template_path):<br>required: **false**<br><p>The path to the workflow version parameter template JSON file within the repository. This file defines the input parameters for runs that use this workflow version. If not specified, the workflow version will be created without a parameter template.</p><br>
    ///   - [`readme_path(impl Into<String>)`](crate::operation::create_workflow_version::builders::CreateWorkflowVersionFluentBuilder::readme_path) / [`set_readme_path(Option<String>)`](crate::operation::create_workflow_version::builders::CreateWorkflowVersionFluentBuilder::set_readme_path):<br>required: **false**<br><p>The path to the workflow version README markdown file within the repository. This file provides documentation and usage information for the workflow. If not specified, the <code>README.md</code> file from the root directory of the repository will be used.</p><br>
    ///   - [`definition_repository(DefinitionRepository)`](crate::operation::create_workflow_version::builders::CreateWorkflowVersionFluentBuilder::definition_repository) / [`set_definition_repository(Option<DefinitionRepository>)`](crate::operation::create_workflow_version::builders::CreateWorkflowVersionFluentBuilder::set_definition_repository):<br>required: **false**<br><p>The repository information for the workflow version definition. This allows you to source your workflow version definition directly from a code repository.</p><br>
    ///   - [`readme_uri(impl Into<String>)`](crate::operation::create_workflow_version::builders::CreateWorkflowVersionFluentBuilder::readme_uri) / [`set_readme_uri(Option<String>)`](crate::operation::create_workflow_version::builders::CreateWorkflowVersionFluentBuilder::set_readme_uri):<br>required: **false**<br><p>The S3 URI of the README file for the workflow version. This file provides documentation and usage information for the workflow version. Requirements include:</p> <ul>  <li>   <p>The S3 URI must begin with <code>s3://USER-OWNED-BUCKET/</code></p></li>  <li>   <p>The requester must have access to the S3 bucket and object.</p></li>  <li>   <p>The max README content length is 500 KiB.</p></li> </ul><br>
    /// - On success, responds with [`CreateWorkflowVersionOutput`](crate::operation::create_workflow_version::CreateWorkflowVersionOutput) with field(s):
    ///   - [`arn(Option<String>)`](crate::operation::create_workflow_version::CreateWorkflowVersionOutput::arn): <p>ARN of the workflow version.</p>
    ///   - [`workflow_id(Option<String>)`](crate::operation::create_workflow_version::CreateWorkflowVersionOutput::workflow_id): <p>The workflow's ID.</p>
    ///   - [`version_name(Option<String>)`](crate::operation::create_workflow_version::CreateWorkflowVersionOutput::version_name): <p>The workflow version name.</p>
    ///   - [`status(Option<WorkflowStatus>)`](crate::operation::create_workflow_version::CreateWorkflowVersionOutput::status): <p>The workflow version status.</p>
    ///   - [`tags(Option<HashMap::<String, String>>)`](crate::operation::create_workflow_version::CreateWorkflowVersionOutput::tags): <p>The workflow version's tags.</p>
    ///   - [`uuid(Option<String>)`](crate::operation::create_workflow_version::CreateWorkflowVersionOutput::uuid): <p>The universally unique identifier (UUID) value for this workflow version.</p>
    /// - On failure, responds with [`SdkError<CreateWorkflowVersionError>`](crate::operation::create_workflow_version::CreateWorkflowVersionError)
    pub fn create_workflow_version(&self) -> crate::operation::create_workflow_version::builders::CreateWorkflowVersionFluentBuilder {
        crate::operation::create_workflow_version::builders::CreateWorkflowVersionFluentBuilder::new(self.handle.clone())
    }
}
