// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ListWorkflowVersions`](crate::operation::list_workflow_versions::builders::ListWorkflowVersionsFluentBuilder) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::operation::list_workflow_versions::builders::ListWorkflowVersionsFluentBuilder::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`workflow_id(impl Into<String>)`](crate::operation::list_workflow_versions::builders::ListWorkflowVersionsFluentBuilder::workflow_id) / [`set_workflow_id(Option<String>)`](crate::operation::list_workflow_versions::builders::ListWorkflowVersionsFluentBuilder::set_workflow_id):<br>required: **true**<br><p>The workflow's ID. The <code>workflowId</code> is not the UUID.</p><br>
    ///   - [`r#type(WorkflowType)`](crate::operation::list_workflow_versions::builders::ListWorkflowVersionsFluentBuilder::type) / [`set_type(Option<WorkflowType>)`](crate::operation::list_workflow_versions::builders::ListWorkflowVersionsFluentBuilder::set_type):<br>required: **false**<br><p>The workflow type.</p><br>
    ///   - [`workflow_owner_id(impl Into<String>)`](crate::operation::list_workflow_versions::builders::ListWorkflowVersionsFluentBuilder::workflow_owner_id) / [`set_workflow_owner_id(Option<String>)`](crate::operation::list_workflow_versions::builders::ListWorkflowVersionsFluentBuilder::set_workflow_owner_id):<br>required: **false**<br><p>The 12-digit account ID of the workflow owner. The workflow owner ID can be retrieved using the <code>GetShare</code> API operation. If you are the workflow owner, you do not need to include this ID.</p><br>
    ///   - [`starting_token(impl Into<String>)`](crate::operation::list_workflow_versions::builders::ListWorkflowVersionsFluentBuilder::starting_token) / [`set_starting_token(Option<String>)`](crate::operation::list_workflow_versions::builders::ListWorkflowVersionsFluentBuilder::set_starting_token):<br>required: **false**<br><p>Specify the pagination token from a previous request to retrieve the next page of results.</p><br>
    ///   - [`max_results(i32)`](crate::operation::list_workflow_versions::builders::ListWorkflowVersionsFluentBuilder::max_results) / [`set_max_results(Option<i32>)`](crate::operation::list_workflow_versions::builders::ListWorkflowVersionsFluentBuilder::set_max_results):<br>required: **false**<br><p>The maximum number of workflows to return in one page of results.</p><br>
    /// - On success, responds with [`ListWorkflowVersionsOutput`](crate::operation::list_workflow_versions::ListWorkflowVersionsOutput) with field(s):
    ///   - [`items(Option<Vec::<WorkflowVersionListItem>>)`](crate::operation::list_workflow_versions::ListWorkflowVersionsOutput::items): <p>A list of workflow version items.</p>
    ///   - [`next_token(Option<String>)`](crate::operation::list_workflow_versions::ListWorkflowVersionsOutput::next_token): <p>A pagination token that's included if more results are available.</p>
    /// - On failure, responds with [`SdkError<ListWorkflowVersionsError>`](crate::operation::list_workflow_versions::ListWorkflowVersionsError)
    pub fn list_workflow_versions(&self) -> crate::operation::list_workflow_versions::builders::ListWorkflowVersionsFluentBuilder {
        crate::operation::list_workflow_versions::builders::ListWorkflowVersionsFluentBuilder::new(self.handle.clone())
    }
}
