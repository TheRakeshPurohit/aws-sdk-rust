// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_definition_repository(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::types::DefinitionRepository,
) -> ::std::result::Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    {
        object.key("connectionArn").string(input.connection_arn.as_str());
    }
    {
        object.key("fullRepositoryId").string(input.full_repository_id.as_str());
    }
    if let Some(var_1) = &input.source_reference {
        #[allow(unused_mut)]
        let mut object_2 = object.key("sourceReference").start_object();
        crate::protocol_serde::shape_source_reference::ser_source_reference(&mut object_2, var_1)?;
        object_2.finish();
    }
    if let Some(var_3) = &input.exclude_file_patterns {
        let mut array_4 = object.key("excludeFilePatterns").start_array();
        for item_5 in var_3 {
            {
                array_4.value().string(item_5.as_str());
            }
        }
        array_4.finish();
    }
    Ok(())
}
