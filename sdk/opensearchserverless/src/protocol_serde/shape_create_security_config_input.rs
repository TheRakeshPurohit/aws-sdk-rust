// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_create_security_config_input_input(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::operation::create_security_config::CreateSecurityConfigInput,
) -> ::std::result::Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    if let Some(var_1) = &input.r#type {
        object.key("type").string(var_1.as_str());
    }
    if let Some(var_2) = &input.name {
        object.key("name").string(var_2.as_str());
    }
    if let Some(var_3) = &input.description {
        object.key("description").string(var_3.as_str());
    }
    if let Some(var_4) = &input.saml_options {
        #[allow(unused_mut)]
        let mut object_5 = object.key("samlOptions").start_object();
        crate::protocol_serde::shape_saml_config_options::ser_saml_config_options(&mut object_5, var_4)?;
        object_5.finish();
    }
    if let Some(var_6) = &input.iam_identity_center_options {
        #[allow(unused_mut)]
        let mut object_7 = object.key("iamIdentityCenterOptions").start_object();
        crate::protocol_serde::shape_create_iam_identity_center_config_options::ser_create_iam_identity_center_config_options(&mut object_7, var_6)?;
        object_7.finish();
    }
    if let Some(var_8) = &input.iam_federation_options {
        #[allow(unused_mut)]
        let mut object_9 = object.key("iamFederationOptions").start_object();
        crate::protocol_serde::shape_iam_federation_config_options::ser_iam_federation_config_options(&mut object_9, var_8)?;
        object_9.finish();
    }
    if let Some(var_10) = &input.client_token {
        object.key("clientToken").string(var_10.as_str());
    }
    Ok(())
}
