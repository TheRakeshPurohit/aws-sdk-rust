// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct UpdateIndexInput {
    /// <p>The unique identifier of the collection containing the index to update.</p>
    pub id: ::std::option::Option<::std::string::String>,
    /// <p>The name of the index to update.</p>
    pub index_name: ::std::option::Option<::std::string::String>,
    /// <p>The updated JSON schema definition for the index, including field mappings and settings.</p>
    pub index_schema: ::std::option::Option<::aws_smithy_types::Document>,
}
impl UpdateIndexInput {
    /// <p>The unique identifier of the collection containing the index to update.</p>
    pub fn id(&self) -> ::std::option::Option<&str> {
        self.id.as_deref()
    }
    /// <p>The name of the index to update.</p>
    pub fn index_name(&self) -> ::std::option::Option<&str> {
        self.index_name.as_deref()
    }
    /// <p>The updated JSON schema definition for the index, including field mappings and settings.</p>
    pub fn index_schema(&self) -> ::std::option::Option<&::aws_smithy_types::Document> {
        self.index_schema.as_ref()
    }
}
impl UpdateIndexInput {
    /// Creates a new builder-style object to manufacture [`UpdateIndexInput`](crate::operation::update_index::UpdateIndexInput).
    pub fn builder() -> crate::operation::update_index::builders::UpdateIndexInputBuilder {
        crate::operation::update_index::builders::UpdateIndexInputBuilder::default()
    }
}

/// A builder for [`UpdateIndexInput`](crate::operation::update_index::UpdateIndexInput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct UpdateIndexInputBuilder {
    pub(crate) id: ::std::option::Option<::std::string::String>,
    pub(crate) index_name: ::std::option::Option<::std::string::String>,
    pub(crate) index_schema: ::std::option::Option<::aws_smithy_types::Document>,
}
impl UpdateIndexInputBuilder {
    /// <p>The unique identifier of the collection containing the index to update.</p>
    /// This field is required.
    pub fn id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The unique identifier of the collection containing the index to update.</p>
    pub fn set_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.id = input;
        self
    }
    /// <p>The unique identifier of the collection containing the index to update.</p>
    pub fn get_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.id
    }
    /// <p>The name of the index to update.</p>
    /// This field is required.
    pub fn index_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.index_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of the index to update.</p>
    pub fn set_index_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.index_name = input;
        self
    }
    /// <p>The name of the index to update.</p>
    pub fn get_index_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.index_name
    }
    /// <p>The updated JSON schema definition for the index, including field mappings and settings.</p>
    pub fn index_schema(mut self, input: ::aws_smithy_types::Document) -> Self {
        self.index_schema = ::std::option::Option::Some(input);
        self
    }
    /// <p>The updated JSON schema definition for the index, including field mappings and settings.</p>
    pub fn set_index_schema(mut self, input: ::std::option::Option<::aws_smithy_types::Document>) -> Self {
        self.index_schema = input;
        self
    }
    /// <p>The updated JSON schema definition for the index, including field mappings and settings.</p>
    pub fn get_index_schema(&self) -> &::std::option::Option<::aws_smithy_types::Document> {
        &self.index_schema
    }
    /// Consumes the builder and constructs a [`UpdateIndexInput`](crate::operation::update_index::UpdateIndexInput).
    pub fn build(self) -> ::std::result::Result<crate::operation::update_index::UpdateIndexInput, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::operation::update_index::UpdateIndexInput {
            id: self.id,
            index_name: self.index_name,
            index_schema: self.index_schema,
        })
    }
}
