// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_list_billing_views_input_input(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::operation::list_billing_views::ListBillingViewsInput,
) -> ::std::result::Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    if let Some(var_1) = &input.active_time_range {
        #[allow(unused_mut)]
        let mut object_2 = object.key("activeTimeRange").start_object();
        crate::protocol_serde::shape_active_time_range::ser_active_time_range(&mut object_2, var_1)?;
        object_2.finish();
    }
    if let Some(var_3) = &input.arns {
        let mut array_4 = object.key("arns").start_array();
        for item_5 in var_3 {
            {
                array_4.value().string(item_5.as_str());
            }
        }
        array_4.finish();
    }
    if let Some(var_6) = &input.billing_view_types {
        let mut array_7 = object.key("billingViewTypes").start_array();
        for item_8 in var_6 {
            {
                array_7.value().string(item_8.as_str());
            }
        }
        array_7.finish();
    }
    if let Some(var_9) = &input.owner_account_id {
        object.key("ownerAccountId").string(var_9.as_str());
    }
    if let Some(var_10) = &input.source_account_id {
        object.key("sourceAccountId").string(var_10.as_str());
    }
    if let Some(var_11) = &input.max_results {
        object.key("maxResults").number(
            #[allow(clippy::useless_conversion)]
            ::aws_smithy_types::Number::NegInt((*var_11).into()),
        );
    }
    if let Some(var_12) = &input.next_token {
        object.key("nextToken").string(var_12.as_str());
    }
    Ok(())
}
