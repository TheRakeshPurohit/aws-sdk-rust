// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`GetPlace`](crate::operation::get_place::builders::GetPlaceFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`place_id(impl Into<String>)`](crate::operation::get_place::builders::GetPlaceFluentBuilder::place_id) / [`set_place_id(Option<String>)`](crate::operation::get_place::builders::GetPlaceFluentBuilder::set_place_id):<br>required: **true**<br><p>The <code>PlaceId</code> of the place you wish to receive the information for.</p><br>
    ///   - [`additional_features(GetPlaceAdditionalFeature)`](crate::operation::get_place::builders::GetPlaceFluentBuilder::additional_features) / [`set_additional_features(Option<Vec::<GetPlaceAdditionalFeature>>)`](crate::operation::get_place::builders::GetPlaceFluentBuilder::set_additional_features):<br>required: **false**<br><p>A list of optional additional parameters such as time zone that can be requested for each result.</p><br>
    ///   - [`language(impl Into<String>)`](crate::operation::get_place::builders::GetPlaceFluentBuilder::language) / [`set_language(Option<String>)`](crate::operation::get_place::builders::GetPlaceFluentBuilder::set_language):<br>required: **false**<br><p>A list of <a href="https://en.wikipedia.org/wiki/IETF_language_tag">BCP 47</a> compliant language codes for the results to be rendered in. If there is no data for the result in the requested language, data will be returned in the default language for the entry.</p><br>
    ///   - [`political_view(impl Into<String>)`](crate::operation::get_place::builders::GetPlaceFluentBuilder::political_view) / [`set_political_view(Option<String>)`](crate::operation::get_place::builders::GetPlaceFluentBuilder::set_political_view):<br>required: **false**<br><p>The alpha-2 or alpha-3 character code for the political view of a country. The political view applies to the results of the request to represent unresolved territorial claims through the point of view of the specified country.</p><br>
    ///   - [`intended_use(GetPlaceIntendedUse)`](crate::operation::get_place::builders::GetPlaceFluentBuilder::intended_use) / [`set_intended_use(Option<GetPlaceIntendedUse>)`](crate::operation::get_place::builders::GetPlaceFluentBuilder::set_intended_use):<br>required: **false**<br><p>Indicates if the results will be stored. Defaults to <code>SingleUse</code>, if left empty.</p><note>  <p>Storing the response of an GetPlace query is required to comply with service terms, but charged at a higher cost per request. Please review the <a href="https://aws.amazon.com/location/sla/">user agreement</a> and <a href="https://aws.amazon.com/location/pricing/">service pricing structure</a> to determine the correct setting for your use case.</p> </note><br>
    ///   - [`key(impl Into<String>)`](crate::operation::get_place::builders::GetPlaceFluentBuilder::key) / [`set_key(Option<String>)`](crate::operation::get_place::builders::GetPlaceFluentBuilder::set_key):<br>required: **false**<br><p>Optional: The API key to be used for authorization. Either an API key or valid SigV4 signature must be provided when making a request.</p><br>
    /// - On success, responds with [`GetPlaceOutput`](crate::operation::get_place::GetPlaceOutput) with field(s):
    ///   - [`place_id(String)`](crate::operation::get_place::GetPlaceOutput::place_id): <p>The <code>PlaceId</code> of the place you wish to receive the information for.</p>
    ///   - [`place_type(PlaceType)`](crate::operation::get_place::GetPlaceOutput::place_type): <p>A <code>PlaceType</code> is a category that the result place must belong to.</p>
    ///   - [`title(String)`](crate::operation::get_place::GetPlaceOutput::title): <p>The localized display name of this result item based on request parameter <code>language</code>.</p>
    ///   - [`pricing_bucket(String)`](crate::operation::get_place::GetPlaceOutput::pricing_bucket): <p>The pricing bucket for which the query is charged at.</p> <p>For more information on pricing, please visit <a href="https://aws.amazon.com/location/pricing/">Amazon Location Service Pricing</a>.</p>
    ///   - [`address(Option<Address>)`](crate::operation::get_place::GetPlaceOutput::address): <p>The place's address.</p>
    ///   - [`address_number_corrected(Option<bool>)`](crate::operation::get_place::GetPlaceOutput::address_number_corrected): <p>Boolean indicating if the address provided has been corrected.</p>
    ///   - [`postal_code_details(Option<Vec::<PostalCodeDetails>>)`](crate::operation::get_place::GetPlaceOutput::postal_code_details): <p>Contains details about the postal code of the place/result.</p>
    ///   - [`position(Option<Vec::<f64>>)`](crate::operation::get_place::GetPlaceOutput::position): <p>The position, in longitude and latitude.</p>
    ///   - [`map_view(Option<Vec::<f64>>)`](crate::operation::get_place::GetPlaceOutput::map_view): <p>The bounding box enclosing the geometric shape (area or line) that an individual result covers.</p> <p>The bounding box formed is defined as a set of four coordinates: <code>\[{westward lng}, {southern lat}, {eastward lng}, {northern lat}\]</code></p>
    ///   - [`categories(Option<Vec::<Category>>)`](crate::operation::get_place::GetPlaceOutput::categories): <p>Categories of results that results must belong to.</p>
    ///   - [`food_types(Option<Vec::<FoodType>>)`](crate::operation::get_place::GetPlaceOutput::food_types): <p>List of food types offered by this result.</p>
    ///   - [`business_chains(Option<Vec::<BusinessChain>>)`](crate::operation::get_place::GetPlaceOutput::business_chains): <p>The Business Chains associated with the place.</p>
    ///   - [`contacts(Option<Contacts>)`](crate::operation::get_place::GetPlaceOutput::contacts): <p>List of potential contact methods for the result/place.</p>
    ///   - [`opening_hours(Option<Vec::<OpeningHours>>)`](crate::operation::get_place::GetPlaceOutput::opening_hours): <p>List of opening hours objects.</p>
    ///   - [`access_points(Option<Vec::<AccessPoint>>)`](crate::operation::get_place::GetPlaceOutput::access_points): <p>Position of the access point in <code>(lng,lat)</code>.</p>
    ///   - [`access_restrictions(Option<Vec::<AccessRestriction>>)`](crate::operation::get_place::GetPlaceOutput::access_restrictions): <p>Indicates known access restrictions on a vehicle access point. The index correlates to an access point and indicates if access through this point has some form of restriction.</p>
    ///   - [`time_zone(Option<TimeZone>)`](crate::operation::get_place::GetPlaceOutput::time_zone): <p>The time zone in which the place is located.</p>
    ///   - [`political_view(Option<String>)`](crate::operation::get_place::GetPlaceOutput::political_view): <p>The alpha-2 or alpha-3 character code for the political view of a country. The political view applies to the results of the request to represent unresolved territorial claims through the point of view of the specified country.</p>
    ///   - [`phonemes(Option<PhonemeDetails>)`](crate::operation::get_place::GetPlaceOutput::phonemes): <p>How the various components of the result's address are pronounced in various languages.</p>
    ///   - [`main_address(Option<RelatedPlace>)`](crate::operation::get_place::GetPlaceOutput::main_address): <p>The main address corresponding to a place of type Secondary Address.</p>
    ///   - [`secondary_addresses(Option<Vec::<RelatedPlace>>)`](crate::operation::get_place::GetPlaceOutput::secondary_addresses): <p>All secondary addresses that are associated with a main address. A secondary address is one that includes secondary designators, such as a Suite or Unit Number, Building, or Floor information.</p>
    /// - On failure, responds with [`SdkError<GetPlaceError>`](crate::operation::get_place::GetPlaceError)
    pub fn get_place(&self) -> crate::operation::get_place::builders::GetPlaceFluentBuilder {
        crate::operation::get_place::builders::GetPlaceFluentBuilder::new(self.handle.clone())
    }
}
