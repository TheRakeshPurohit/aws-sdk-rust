// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`Autocomplete`](crate::operation::autocomplete::builders::AutocompleteFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`query_text(impl Into<String>)`](crate::operation::autocomplete::builders::AutocompleteFluentBuilder::query_text) / [`set_query_text(Option<String>)`](crate::operation::autocomplete::builders::AutocompleteFluentBuilder::set_query_text):<br>required: **true**<br><p>The free-form text query to match addresses against. This is usually a partially typed address from an end user in an address box or form.</p><note>  <p>The fields <code>QueryText</code>, and <code>QueryID</code> are mutually exclusive.</p> </note><br>
    ///   - [`max_results(i32)`](crate::operation::autocomplete::builders::AutocompleteFluentBuilder::max_results) / [`set_max_results(Option<i32>)`](crate::operation::autocomplete::builders::AutocompleteFluentBuilder::set_max_results):<br>required: **false**<br><p>An optional limit for the number of results returned in a single call.</p><br>
    ///   - [`bias_position(f64)`](crate::operation::autocomplete::builders::AutocompleteFluentBuilder::bias_position) / [`set_bias_position(Option<Vec::<f64>>)`](crate::operation::autocomplete::builders::AutocompleteFluentBuilder::set_bias_position):<br>required: **false**<br><p>The position in longitude and latitude that the results should be close to. Typically, place results returned are ranked higher the closer they are to this position. Stored in <code>\[lng, lat\]</code> and in the WSG84 format.</p><note>  <p>The fields <code>BiasPosition</code>, <code>FilterBoundingBox</code>, and <code>FilterCircle</code> are mutually exclusive.</p> </note><br>
    ///   - [`filter(AutocompleteFilter)`](crate::operation::autocomplete::builders::AutocompleteFluentBuilder::filter) / [`set_filter(Option<AutocompleteFilter>)`](crate::operation::autocomplete::builders::AutocompleteFluentBuilder::set_filter):<br>required: **false**<br><p>A structure which contains a set of inclusion/exclusion properties that results must possess in order to be returned as a result.</p><br>
    ///   - [`postal_code_mode(PostalCodeMode)`](crate::operation::autocomplete::builders::AutocompleteFluentBuilder::postal_code_mode) / [`set_postal_code_mode(Option<PostalCodeMode>)`](crate::operation::autocomplete::builders::AutocompleteFluentBuilder::set_postal_code_mode):<br>required: **false**<br><p>The <code>PostalCodeMode</code> affects how postal code results are returned. If a postal code spans multiple localities and this value is empty, partial district or locality information may be returned under a single postal code result entry. If it's populated with the value <code>EnumerateSpannedLocalities</code>, all cities in that postal code are returned.</p><br>
    ///   - [`additional_features(AutocompleteAdditionalFeature)`](crate::operation::autocomplete::builders::AutocompleteFluentBuilder::additional_features) / [`set_additional_features(Option<Vec::<AutocompleteAdditionalFeature>>)`](crate::operation::autocomplete::builders::AutocompleteFluentBuilder::set_additional_features):<br>required: **false**<br><p>A list of optional additional parameters that can be requested for each result.</p><br>
    ///   - [`language(impl Into<String>)`](crate::operation::autocomplete::builders::AutocompleteFluentBuilder::language) / [`set_language(Option<String>)`](crate::operation::autocomplete::builders::AutocompleteFluentBuilder::set_language):<br>required: **false**<br><p>A list of <a href="https://en.wikipedia.org/wiki/IETF_language_tag">BCP 47</a> compliant language codes for the results to be rendered in. If there is no data for the result in the requested language, data will be returned in the default language for the entry.</p><br>
    ///   - [`political_view(impl Into<String>)`](crate::operation::autocomplete::builders::AutocompleteFluentBuilder::political_view) / [`set_political_view(Option<String>)`](crate::operation::autocomplete::builders::AutocompleteFluentBuilder::set_political_view):<br>required: **false**<br><p>The alpha-2 or alpha-3 character code for the political view of a country. The political view applies to the results of the request to represent unresolved territorial claims through the point of view of the specified country.</p> <p>The following political views are currently supported:</p> <ul>  <li>   <p><code>ARG</code>: Argentina's view on the Southern Patagonian Ice Field and Tierra Del Fuego, including the Falkland Islands, South Georgia, and South Sandwich Islands</p></li>  <li>   <p><code>EGY</code>: Egypt's view on Bir Tawil</p></li>  <li>   <p><code>IND</code>: India's view on Gilgit-Baltistan</p></li>  <li>   <p><code>KEN</code>: Kenya's view on the Ilemi Triangle</p></li>  <li>   <p><code>MAR</code>: Morocco's view on Western Sahara</p></li>  <li>   <p><code>RUS</code>: Russia's view on Crimea</p></li>  <li>   <p><code>SDN</code>: Sudan's view on the Halaib Triangle</p></li>  <li>   <p><code>SRB</code>: Serbia's view on Kosovo, Vukovar, and Sarengrad Islands</p></li>  <li>   <p><code>SUR</code>: Suriname's view on the Courantyne Headwaters and Lawa Headwaters</p></li>  <li>   <p><code>SYR</code>: Syria's view on the Golan Heights</p></li>  <li>   <p><code>TUR</code>: Turkey's view on Cyprus and Northern Cyprus</p></li>  <li>   <p><code>TZA</code>: Tanzania's view on Lake Malawi</p></li>  <li>   <p><code>URY</code>: Uruguay's view on Rincon de Artigas</p></li>  <li>   <p><code>VNM</code>: Vietnam's view on the Paracel Islands and Spratly Islands</p></li> </ul><br>
    ///   - [`intended_use(AutocompleteIntendedUse)`](crate::operation::autocomplete::builders::AutocompleteFluentBuilder::intended_use) / [`set_intended_use(Option<AutocompleteIntendedUse>)`](crate::operation::autocomplete::builders::AutocompleteFluentBuilder::set_intended_use):<br>required: **false**<br><p>Indicates if the results will be stored. Defaults to <code>SingleUse</code>, if left empty.</p><br>
    ///   - [`key(impl Into<String>)`](crate::operation::autocomplete::builders::AutocompleteFluentBuilder::key) / [`set_key(Option<String>)`](crate::operation::autocomplete::builders::AutocompleteFluentBuilder::set_key):<br>required: **false**<br><p>Optional: The API key to be used for authorization. Either an API key or valid SigV4 signature must be provided when making a request.</p><br>
    /// - On success, responds with [`AutocompleteOutput`](crate::operation::autocomplete::AutocompleteOutput) with field(s):
    ///   - [`pricing_bucket(String)`](crate::operation::autocomplete::AutocompleteOutput::pricing_bucket): <p>The pricing bucket for which the query is charged at.</p> <p>For more information on pricing, please visit <a href="https://aws.amazon.com/location/pricing/">Amazon Location Service Pricing</a>.</p>
    ///   - [`result_items(Option<Vec::<AutocompleteResultItem>>)`](crate::operation::autocomplete::AutocompleteOutput::result_items): <p>List of places or results returned for a query.</p>
    /// - On failure, responds with [`SdkError<AutocompleteError>`](crate::operation::autocomplete::AutocompleteError)
    pub fn autocomplete(&self) -> crate::operation::autocomplete::builders::AutocompleteFluentBuilder {
        crate::operation::autocomplete::builders::AutocompleteFluentBuilder::new(self.handle.clone())
    }
}
