// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct DeleteScraperLoggingConfigurationInput {
    /// <p>The ID of the scraper whose logging configuration will be deleted.</p>
    pub scraper_id: ::std::option::Option<::std::string::String>,
    /// <p>A unique, case-sensitive identifier that you provide to ensure the request is processed exactly once.</p>
    pub client_token: ::std::option::Option<::std::string::String>,
}
impl DeleteScraperLoggingConfigurationInput {
    /// <p>The ID of the scraper whose logging configuration will be deleted.</p>
    pub fn scraper_id(&self) -> ::std::option::Option<&str> {
        self.scraper_id.as_deref()
    }
    /// <p>A unique, case-sensitive identifier that you provide to ensure the request is processed exactly once.</p>
    pub fn client_token(&self) -> ::std::option::Option<&str> {
        self.client_token.as_deref()
    }
}
impl DeleteScraperLoggingConfigurationInput {
    /// Creates a new builder-style object to manufacture [`DeleteScraperLoggingConfigurationInput`](crate::operation::delete_scraper_logging_configuration::DeleteScraperLoggingConfigurationInput).
    pub fn builder() -> crate::operation::delete_scraper_logging_configuration::builders::DeleteScraperLoggingConfigurationInputBuilder {
        crate::operation::delete_scraper_logging_configuration::builders::DeleteScraperLoggingConfigurationInputBuilder::default()
    }
}

/// A builder for [`DeleteScraperLoggingConfigurationInput`](crate::operation::delete_scraper_logging_configuration::DeleteScraperLoggingConfigurationInput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct DeleteScraperLoggingConfigurationInputBuilder {
    pub(crate) scraper_id: ::std::option::Option<::std::string::String>,
    pub(crate) client_token: ::std::option::Option<::std::string::String>,
}
impl DeleteScraperLoggingConfigurationInputBuilder {
    /// <p>The ID of the scraper whose logging configuration will be deleted.</p>
    /// This field is required.
    pub fn scraper_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.scraper_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The ID of the scraper whose logging configuration will be deleted.</p>
    pub fn set_scraper_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.scraper_id = input;
        self
    }
    /// <p>The ID of the scraper whose logging configuration will be deleted.</p>
    pub fn get_scraper_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.scraper_id
    }
    /// <p>A unique, case-sensitive identifier that you provide to ensure the request is processed exactly once.</p>
    pub fn client_token(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.client_token = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>A unique, case-sensitive identifier that you provide to ensure the request is processed exactly once.</p>
    pub fn set_client_token(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.client_token = input;
        self
    }
    /// <p>A unique, case-sensitive identifier that you provide to ensure the request is processed exactly once.</p>
    pub fn get_client_token(&self) -> &::std::option::Option<::std::string::String> {
        &self.client_token
    }
    /// Consumes the builder and constructs a [`DeleteScraperLoggingConfigurationInput`](crate::operation::delete_scraper_logging_configuration::DeleteScraperLoggingConfigurationInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::delete_scraper_logging_configuration::DeleteScraperLoggingConfigurationInput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(
            crate::operation::delete_scraper_logging_configuration::DeleteScraperLoggingConfigurationInput {
                scraper_id: self.scraper_id,
                client_token: self.client_token,
            },
        )
    }
}
