// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_create_terms_input_input(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::operation::create_terms::CreateTermsInput,
) -> ::std::result::Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    if let Some(var_1) = &input.user_pool_id {
        object.key("UserPoolId").string(var_1.as_str());
    }
    if let Some(var_2) = &input.client_id {
        object.key("ClientId").string(var_2.as_str());
    }
    if let Some(var_3) = &input.terms_name {
        object.key("TermsName").string(var_3.as_str());
    }
    if let Some(var_4) = &input.terms_source {
        object.key("TermsSource").string(var_4.as_str());
    }
    if let Some(var_5) = &input.enforcement {
        object.key("Enforcement").string(var_5.as_str());
    }
    if let Some(var_6) = &input.links {
        #[allow(unused_mut)]
        let mut object_7 = object.key("Links").start_object();
        for (key_8, value_9) in var_6 {
            {
                object_7.key(key_8.as_str()).string(value_9.as_str());
            }
        }
        object_7.finish();
    }
    Ok(())
}
