// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`UpdateUserPoolDomain`](crate::operation::update_user_pool_domain::builders::UpdateUserPoolDomainFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`domain(impl Into<String>)`](crate::operation::update_user_pool_domain::builders::UpdateUserPoolDomainFluentBuilder::domain) / [`set_domain(Option<String>)`](crate::operation::update_user_pool_domain::builders::UpdateUserPoolDomainFluentBuilder::set_domain):<br>required: **true**<br><p>The name of the domain that you want to update. For custom domains, this is the fully-qualified domain name, for example <code>auth.example.com</code>. For prefix domains, this is the prefix alone, such as <code>myprefix</code>.</p><br>
    ///   - [`user_pool_id(impl Into<String>)`](crate::operation::update_user_pool_domain::builders::UpdateUserPoolDomainFluentBuilder::user_pool_id) / [`set_user_pool_id(Option<String>)`](crate::operation::update_user_pool_domain::builders::UpdateUserPoolDomainFluentBuilder::set_user_pool_id):<br>required: **true**<br><p>The ID of the user pool that is associated with the domain you're updating.</p><br>
    ///   - [`managed_login_version(i32)`](crate::operation::update_user_pool_domain::builders::UpdateUserPoolDomainFluentBuilder::managed_login_version) / [`set_managed_login_version(Option<i32>)`](crate::operation::update_user_pool_domain::builders::UpdateUserPoolDomainFluentBuilder::set_managed_login_version):<br>required: **false**<br><p>A version number that indicates the state of managed login for your domain. Version <code>1</code> is hosted UI (classic). Version <code>2</code> is the newer managed login with the branding editor. For more information, see <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-pools-managed-login.html">Managed login</a>.</p><br>
    ///   - [`custom_domain_config(CustomDomainConfigType)`](crate::operation::update_user_pool_domain::builders::UpdateUserPoolDomainFluentBuilder::custom_domain_config) / [`set_custom_domain_config(Option<CustomDomainConfigType>)`](crate::operation::update_user_pool_domain::builders::UpdateUserPoolDomainFluentBuilder::set_custom_domain_config):<br>required: **false**<br><p>The configuration for a custom domain that hosts managed login for your application. In an <code>UpdateUserPoolDomain</code> request, this parameter specifies an SSL certificate for the managed login hosted webserver. The certificate must be an ACM ARN in <code>us-east-1</code>.</p> <p>When you create a custom domain, the passkey RP ID defaults to the custom domain. If you had a prefix domain active, this will cause passkey integration for your prefix domain to stop working due to a mismatch in RP ID. To keep the prefix domain passkey integration working, you can explicitly set RP ID to the prefix domain.</p><br>
    /// - On success, responds with [`UpdateUserPoolDomainOutput`](crate::operation::update_user_pool_domain::UpdateUserPoolDomainOutput) with field(s):
    ///   - [`managed_login_version(Option<i32>)`](crate::operation::update_user_pool_domain::UpdateUserPoolDomainOutput::managed_login_version): <p>A version number that indicates the state of managed login for your domain. Version <code>1</code> is hosted UI (classic). Version <code>2</code> is the newer managed login with the branding editor. For more information, see <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-pools-managed-login.html">Managed login</a>.</p>
    ///   - [`cloud_front_domain(Option<String>)`](crate::operation::update_user_pool_domain::UpdateUserPoolDomainOutput::cloud_front_domain): <p>The fully-qualified domain name (FQDN) of the Amazon CloudFront distribution that hosts your managed login or classic hosted UI pages. You domain-name authority must have an alias record that points requests for your custom domain to this FQDN. Amazon Cognito returns this value if you set a custom domain with <code>CustomDomainConfig</code>. If you set an Amazon Cognito prefix domain, this operation returns a blank response.</p>
    /// - On failure, responds with [`SdkError<UpdateUserPoolDomainError>`](crate::operation::update_user_pool_domain::UpdateUserPoolDomainError)
    pub fn update_user_pool_domain(&self) -> crate::operation::update_user_pool_domain::builders::UpdateUserPoolDomainFluentBuilder {
        crate::operation::update_user_pool_domain::builders::UpdateUserPoolDomainFluentBuilder::new(self.handle.clone())
    }
}
