// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>A structure that contains information about a dependency for a canary.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct Dependency {
    /// <p>The type of dependency. Valid value is <code>LambdaLayer</code>.</p>
    pub r#type: ::std::option::Option<crate::types::DependencyType>,
    /// <p>The dependency reference. For Lambda layers, this is the ARN of the Lambda layer. For more information about Lambda ARN format, see <a href="https://docs.aws.amazon.com/lambda/latest/api/API_Layer.html">Lambda</a>.</p>
    pub reference: ::std::string::String,
}
impl Dependency {
    /// <p>The type of dependency. Valid value is <code>LambdaLayer</code>.</p>
    pub fn r#type(&self) -> ::std::option::Option<&crate::types::DependencyType> {
        self.r#type.as_ref()
    }
    /// <p>The dependency reference. For Lambda layers, this is the ARN of the Lambda layer. For more information about Lambda ARN format, see <a href="https://docs.aws.amazon.com/lambda/latest/api/API_Layer.html">Lambda</a>.</p>
    pub fn reference(&self) -> &str {
        use std::ops::Deref;
        self.reference.deref()
    }
}
impl Dependency {
    /// Creates a new builder-style object to manufacture [`Dependency`](crate::types::Dependency).
    pub fn builder() -> crate::types::builders::DependencyBuilder {
        crate::types::builders::DependencyBuilder::default()
    }
}

/// A builder for [`Dependency`](crate::types::Dependency).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct DependencyBuilder {
    pub(crate) r#type: ::std::option::Option<crate::types::DependencyType>,
    pub(crate) reference: ::std::option::Option<::std::string::String>,
}
impl DependencyBuilder {
    /// <p>The type of dependency. Valid value is <code>LambdaLayer</code>.</p>
    pub fn r#type(mut self, input: crate::types::DependencyType) -> Self {
        self.r#type = ::std::option::Option::Some(input);
        self
    }
    /// <p>The type of dependency. Valid value is <code>LambdaLayer</code>.</p>
    pub fn set_type(mut self, input: ::std::option::Option<crate::types::DependencyType>) -> Self {
        self.r#type = input;
        self
    }
    /// <p>The type of dependency. Valid value is <code>LambdaLayer</code>.</p>
    pub fn get_type(&self) -> &::std::option::Option<crate::types::DependencyType> {
        &self.r#type
    }
    /// <p>The dependency reference. For Lambda layers, this is the ARN of the Lambda layer. For more information about Lambda ARN format, see <a href="https://docs.aws.amazon.com/lambda/latest/api/API_Layer.html">Lambda</a>.</p>
    /// This field is required.
    pub fn reference(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.reference = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The dependency reference. For Lambda layers, this is the ARN of the Lambda layer. For more information about Lambda ARN format, see <a href="https://docs.aws.amazon.com/lambda/latest/api/API_Layer.html">Lambda</a>.</p>
    pub fn set_reference(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.reference = input;
        self
    }
    /// <p>The dependency reference. For Lambda layers, this is the ARN of the Lambda layer. For more information about Lambda ARN format, see <a href="https://docs.aws.amazon.com/lambda/latest/api/API_Layer.html">Lambda</a>.</p>
    pub fn get_reference(&self) -> &::std::option::Option<::std::string::String> {
        &self.reference
    }
    /// Consumes the builder and constructs a [`Dependency`](crate::types::Dependency).
    /// This method will fail if any of the following fields are not set:
    /// - [`reference`](crate::types::builders::DependencyBuilder::reference)
    pub fn build(self) -> ::std::result::Result<crate::types::Dependency, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::Dependency {
            r#type: self.r#type,
            reference: self.reference.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "reference",
                    "reference was not specified but it is required when building Dependency",
                )
            })?,
        })
    }
}
