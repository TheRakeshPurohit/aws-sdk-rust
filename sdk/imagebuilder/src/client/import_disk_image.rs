// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ImportDiskImage`](crate::operation::import_disk_image::builders::ImportDiskImageFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`name(impl Into<String>)`](crate::operation::import_disk_image::builders::ImportDiskImageFluentBuilder::name) / [`set_name(Option<String>)`](crate::operation::import_disk_image::builders::ImportDiskImageFluentBuilder::set_name):<br>required: **true**<br><p>The name of the image resource that's created from the import.</p><br>
    ///   - [`semantic_version(impl Into<String>)`](crate::operation::import_disk_image::builders::ImportDiskImageFluentBuilder::semantic_version) / [`set_semantic_version(Option<String>)`](crate::operation::import_disk_image::builders::ImportDiskImageFluentBuilder::set_semantic_version):<br>required: **true**<br><p>The semantic version to attach to the image that's created during the import process. This version follows the semantic version syntax.</p><br>
    ///   - [`description(impl Into<String>)`](crate::operation::import_disk_image::builders::ImportDiskImageFluentBuilder::description) / [`set_description(Option<String>)`](crate::operation::import_disk_image::builders::ImportDiskImageFluentBuilder::set_description):<br>required: **false**<br><p>The description for your disk image import.</p><br>
    ///   - [`platform(impl Into<String>)`](crate::operation::import_disk_image::builders::ImportDiskImageFluentBuilder::platform) / [`set_platform(Option<String>)`](crate::operation::import_disk_image::builders::ImportDiskImageFluentBuilder::set_platform):<br>required: **true**<br><p>The operating system platform for the imported image. Allowed values include the following: <code>Windows</code>.</p><br>
    ///   - [`os_version(impl Into<String>)`](crate::operation::import_disk_image::builders::ImportDiskImageFluentBuilder::os_version) / [`set_os_version(Option<String>)`](crate::operation::import_disk_image::builders::ImportDiskImageFluentBuilder::set_os_version):<br>required: **true**<br><p>The operating system version for the imported image. Allowed values include the following: <code>Microsoft Windows 11</code>.</p><br>
    ///   - [`execution_role(impl Into<String>)`](crate::operation::import_disk_image::builders::ImportDiskImageFluentBuilder::execution_role) / [`set_execution_role(Option<String>)`](crate::operation::import_disk_image::builders::ImportDiskImageFluentBuilder::set_execution_role):<br>required: **false**<br><p>The name or Amazon Resource Name (ARN) for the IAM role you create that grants Image Builder access to perform workflow actions to import an image from a Microsoft ISO file.</p><br>
    ///   - [`infrastructure_configuration_arn(impl Into<String>)`](crate::operation::import_disk_image::builders::ImportDiskImageFluentBuilder::infrastructure_configuration_arn) / [`set_infrastructure_configuration_arn(Option<String>)`](crate::operation::import_disk_image::builders::ImportDiskImageFluentBuilder::set_infrastructure_configuration_arn):<br>required: **true**<br><p>The Amazon Resource Name (ARN) of the infrastructure configuration resource that's used for launching the EC2 instance on which the ISO image is built.</p><br>
    ///   - [`uri(impl Into<String>)`](crate::operation::import_disk_image::builders::ImportDiskImageFluentBuilder::uri) / [`set_uri(Option<String>)`](crate::operation::import_disk_image::builders::ImportDiskImageFluentBuilder::set_uri):<br>required: **true**<br><p>The <code>uri</code> of the ISO disk file that's stored in Amazon S3.</p><br>
    ///   - [`logging_configuration(ImageLoggingConfiguration)`](crate::operation::import_disk_image::builders::ImportDiskImageFluentBuilder::logging_configuration) / [`set_logging_configuration(Option<ImageLoggingConfiguration>)`](crate::operation::import_disk_image::builders::ImportDiskImageFluentBuilder::set_logging_configuration):<br>required: **false**<br><p>Define logging configuration for the image build process.</p><br>
    ///   - [`tags(impl Into<String>, impl Into<String>)`](crate::operation::import_disk_image::builders::ImportDiskImageFluentBuilder::tags) / [`set_tags(Option<HashMap::<String, String>>)`](crate::operation::import_disk_image::builders::ImportDiskImageFluentBuilder::set_tags):<br>required: **false**<br><p>Tags that are attached to image resources created from the import.</p><br>
    ///   - [`client_token(impl Into<String>)`](crate::operation::import_disk_image::builders::ImportDiskImageFluentBuilder::client_token) / [`set_client_token(Option<String>)`](crate::operation::import_disk_image::builders::ImportDiskImageFluentBuilder::set_client_token):<br>required: **true**<br><p>Unique, case-sensitive identifier you provide to ensure idempotency of the request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">Ensuring idempotency</a> in the <i>Amazon EC2 API Reference</i>.</p><br>
    /// - On success, responds with [`ImportDiskImageOutput`](crate::operation::import_disk_image::ImportDiskImageOutput) with field(s):
    ///   - [`client_token(Option<String>)`](crate::operation::import_disk_image::ImportDiskImageOutput::client_token): <p>The client token that uniquely identifies the request.</p>
    ///   - [`image_build_version_arn(Option<String>)`](crate::operation::import_disk_image::ImportDiskImageOutput::image_build_version_arn): <p>The Amazon Resource Name (ARN) of the output AMI that was created from the ISO disk file.</p>
    /// - On failure, responds with [`SdkError<ImportDiskImageError>`](crate::operation::import_disk_image::ImportDiskImageError)
    pub fn import_disk_image(&self) -> crate::operation::import_disk_image::builders::ImportDiskImageFluentBuilder {
        crate::operation::import_disk_image::builders::ImportDiskImageFluentBuilder::new(self.handle.clone())
    }
}
