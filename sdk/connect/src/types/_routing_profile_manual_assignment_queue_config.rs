// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Contains information about the queue and channel for manual assignment behaviour can be enabled.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct RoutingProfileManualAssignmentQueueConfig {
    /// <p>Contains the channel and queue identifier for a routing profile.</p>
    pub queue_reference: ::std::option::Option<crate::types::RoutingProfileQueueReference>,
}
impl RoutingProfileManualAssignmentQueueConfig {
    /// <p>Contains the channel and queue identifier for a routing profile.</p>
    pub fn queue_reference(&self) -> ::std::option::Option<&crate::types::RoutingProfileQueueReference> {
        self.queue_reference.as_ref()
    }
}
impl RoutingProfileManualAssignmentQueueConfig {
    /// Creates a new builder-style object to manufacture [`RoutingProfileManualAssignmentQueueConfig`](crate::types::RoutingProfileManualAssignmentQueueConfig).
    pub fn builder() -> crate::types::builders::RoutingProfileManualAssignmentQueueConfigBuilder {
        crate::types::builders::RoutingProfileManualAssignmentQueueConfigBuilder::default()
    }
}

/// A builder for [`RoutingProfileManualAssignmentQueueConfig`](crate::types::RoutingProfileManualAssignmentQueueConfig).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct RoutingProfileManualAssignmentQueueConfigBuilder {
    pub(crate) queue_reference: ::std::option::Option<crate::types::RoutingProfileQueueReference>,
}
impl RoutingProfileManualAssignmentQueueConfigBuilder {
    /// <p>Contains the channel and queue identifier for a routing profile.</p>
    /// This field is required.
    pub fn queue_reference(mut self, input: crate::types::RoutingProfileQueueReference) -> Self {
        self.queue_reference = ::std::option::Option::Some(input);
        self
    }
    /// <p>Contains the channel and queue identifier for a routing profile.</p>
    pub fn set_queue_reference(mut self, input: ::std::option::Option<crate::types::RoutingProfileQueueReference>) -> Self {
        self.queue_reference = input;
        self
    }
    /// <p>Contains the channel and queue identifier for a routing profile.</p>
    pub fn get_queue_reference(&self) -> &::std::option::Option<crate::types::RoutingProfileQueueReference> {
        &self.queue_reference
    }
    /// Consumes the builder and constructs a [`RoutingProfileManualAssignmentQueueConfig`](crate::types::RoutingProfileManualAssignmentQueueConfig).
    pub fn build(self) -> crate::types::RoutingProfileManualAssignmentQueueConfig {
        crate::types::RoutingProfileManualAssignmentQueueConfig {
            queue_reference: self.queue_reference,
        }
    }
}
