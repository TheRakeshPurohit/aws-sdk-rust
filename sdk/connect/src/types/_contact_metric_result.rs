// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Object containing information about metric requested for the contact.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ContactMetricResult {
    /// <p>The name of the metric being retrieved in type String.</p>
    pub name: crate::types::ContactMetricName,
    /// <p>Object result associated with the metric received.</p>
    pub value: ::std::option::Option<crate::types::ContactMetricValue>,
}
impl ContactMetricResult {
    /// <p>The name of the metric being retrieved in type String.</p>
    pub fn name(&self) -> &crate::types::ContactMetricName {
        &self.name
    }
    /// <p>Object result associated with the metric received.</p>
    pub fn value(&self) -> ::std::option::Option<&crate::types::ContactMetricValue> {
        self.value.as_ref()
    }
}
impl ContactMetricResult {
    /// Creates a new builder-style object to manufacture [`ContactMetricResult`](crate::types::ContactMetricResult).
    pub fn builder() -> crate::types::builders::ContactMetricResultBuilder {
        crate::types::builders::ContactMetricResultBuilder::default()
    }
}

/// A builder for [`ContactMetricResult`](crate::types::ContactMetricResult).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct ContactMetricResultBuilder {
    pub(crate) name: ::std::option::Option<crate::types::ContactMetricName>,
    pub(crate) value: ::std::option::Option<crate::types::ContactMetricValue>,
}
impl ContactMetricResultBuilder {
    /// <p>The name of the metric being retrieved in type String.</p>
    /// This field is required.
    pub fn name(mut self, input: crate::types::ContactMetricName) -> Self {
        self.name = ::std::option::Option::Some(input);
        self
    }
    /// <p>The name of the metric being retrieved in type String.</p>
    pub fn set_name(mut self, input: ::std::option::Option<crate::types::ContactMetricName>) -> Self {
        self.name = input;
        self
    }
    /// <p>The name of the metric being retrieved in type String.</p>
    pub fn get_name(&self) -> &::std::option::Option<crate::types::ContactMetricName> {
        &self.name
    }
    /// <p>Object result associated with the metric received.</p>
    /// This field is required.
    pub fn value(mut self, input: crate::types::ContactMetricValue) -> Self {
        self.value = ::std::option::Option::Some(input);
        self
    }
    /// <p>Object result associated with the metric received.</p>
    pub fn set_value(mut self, input: ::std::option::Option<crate::types::ContactMetricValue>) -> Self {
        self.value = input;
        self
    }
    /// <p>Object result associated with the metric received.</p>
    pub fn get_value(&self) -> &::std::option::Option<crate::types::ContactMetricValue> {
        &self.value
    }
    /// Consumes the builder and constructs a [`ContactMetricResult`](crate::types::ContactMetricResult).
    /// This method will fail if any of the following fields are not set:
    /// - [`name`](crate::types::builders::ContactMetricResultBuilder::name)
    pub fn build(self) -> ::std::result::Result<crate::types::ContactMetricResult, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::ContactMetricResult {
            name: self.name.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "name",
                    "name was not specified but it is required when building ContactMetricResult",
                )
            })?,
            value: self.value,
        })
    }
}
