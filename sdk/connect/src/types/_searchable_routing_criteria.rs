// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Routing criteria of the contact to match on.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct SearchableRoutingCriteria {
    /// <p>The list of Routing criteria steps of the contact routing.</p>
    pub steps: ::std::option::Option<::std::vec::Vec<crate::types::SearchableRoutingCriteriaStep>>,
}
impl SearchableRoutingCriteria {
    /// <p>The list of Routing criteria steps of the contact routing.</p>
    ///
    /// If no value was sent for this field, a default will be set. If you want to determine if no value was sent, use `.steps.is_none()`.
    pub fn steps(&self) -> &[crate::types::SearchableRoutingCriteriaStep] {
        self.steps.as_deref().unwrap_or_default()
    }
}
impl SearchableRoutingCriteria {
    /// Creates a new builder-style object to manufacture [`SearchableRoutingCriteria`](crate::types::SearchableRoutingCriteria).
    pub fn builder() -> crate::types::builders::SearchableRoutingCriteriaBuilder {
        crate::types::builders::SearchableRoutingCriteriaBuilder::default()
    }
}

/// A builder for [`SearchableRoutingCriteria`](crate::types::SearchableRoutingCriteria).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct SearchableRoutingCriteriaBuilder {
    pub(crate) steps: ::std::option::Option<::std::vec::Vec<crate::types::SearchableRoutingCriteriaStep>>,
}
impl SearchableRoutingCriteriaBuilder {
    /// Appends an item to `steps`.
    ///
    /// To override the contents of this collection use [`set_steps`](Self::set_steps).
    ///
    /// <p>The list of Routing criteria steps of the contact routing.</p>
    pub fn steps(mut self, input: crate::types::SearchableRoutingCriteriaStep) -> Self {
        let mut v = self.steps.unwrap_or_default();
        v.push(input);
        self.steps = ::std::option::Option::Some(v);
        self
    }
    /// <p>The list of Routing criteria steps of the contact routing.</p>
    pub fn set_steps(mut self, input: ::std::option::Option<::std::vec::Vec<crate::types::SearchableRoutingCriteriaStep>>) -> Self {
        self.steps = input;
        self
    }
    /// <p>The list of Routing criteria steps of the contact routing.</p>
    pub fn get_steps(&self) -> &::std::option::Option<::std::vec::Vec<crate::types::SearchableRoutingCriteriaStep>> {
        &self.steps
    }
    /// Consumes the builder and constructs a [`SearchableRoutingCriteria`](crate::types::SearchableRoutingCriteria).
    pub fn build(self) -> crate::types::SearchableRoutingCriteria {
        crate::types::SearchableRoutingCriteria { steps: self.steps }
    }
}
