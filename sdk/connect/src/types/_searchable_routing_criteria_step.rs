// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Routing criteria of the contact to match on.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct SearchableRoutingCriteriaStep {
    /// <p>Agent matching the routing step of the routing criteria</p>
    pub agent_criteria: ::std::option::Option<crate::types::SearchableAgentCriteriaStep>,
}
impl SearchableRoutingCriteriaStep {
    /// <p>Agent matching the routing step of the routing criteria</p>
    pub fn agent_criteria(&self) -> ::std::option::Option<&crate::types::SearchableAgentCriteriaStep> {
        self.agent_criteria.as_ref()
    }
}
impl SearchableRoutingCriteriaStep {
    /// Creates a new builder-style object to manufacture [`SearchableRoutingCriteriaStep`](crate::types::SearchableRoutingCriteriaStep).
    pub fn builder() -> crate::types::builders::SearchableRoutingCriteriaStepBuilder {
        crate::types::builders::SearchableRoutingCriteriaStepBuilder::default()
    }
}

/// A builder for [`SearchableRoutingCriteriaStep`](crate::types::SearchableRoutingCriteriaStep).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct SearchableRoutingCriteriaStepBuilder {
    pub(crate) agent_criteria: ::std::option::Option<crate::types::SearchableAgentCriteriaStep>,
}
impl SearchableRoutingCriteriaStepBuilder {
    /// <p>Agent matching the routing step of the routing criteria</p>
    pub fn agent_criteria(mut self, input: crate::types::SearchableAgentCriteriaStep) -> Self {
        self.agent_criteria = ::std::option::Option::Some(input);
        self
    }
    /// <p>Agent matching the routing step of the routing criteria</p>
    pub fn set_agent_criteria(mut self, input: ::std::option::Option<crate::types::SearchableAgentCriteriaStep>) -> Self {
        self.agent_criteria = input;
        self
    }
    /// <p>Agent matching the routing step of the routing criteria</p>
    pub fn get_agent_criteria(&self) -> &::std::option::Option<crate::types::SearchableAgentCriteriaStep> {
        &self.agent_criteria
    }
    /// Consumes the builder and constructs a [`SearchableRoutingCriteriaStep`](crate::types::SearchableRoutingCriteriaStep).
    pub fn build(self) -> crate::types::SearchableRoutingCriteriaStep {
        crate::types::SearchableRoutingCriteriaStep {
            agent_criteria: self.agent_criteria,
        }
    }
}
