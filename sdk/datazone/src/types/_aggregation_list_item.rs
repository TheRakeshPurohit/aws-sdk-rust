// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>An aggregation list item.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct AggregationListItem {
    /// <p>An attribute on which to compute aggregations.</p>
    pub attribute: ::std::string::String,
    /// <p>The display value of the aggregation list item. Supported values include <code>value</code> and <code>glossaryTerm.name</code>.</p>
    pub display_value: ::std::option::Option<::std::string::String>,
}
impl AggregationListItem {
    /// <p>An attribute on which to compute aggregations.</p>
    pub fn attribute(&self) -> &str {
        use std::ops::Deref;
        self.attribute.deref()
    }
    /// <p>The display value of the aggregation list item. Supported values include <code>value</code> and <code>glossaryTerm.name</code>.</p>
    pub fn display_value(&self) -> ::std::option::Option<&str> {
        self.display_value.as_deref()
    }
}
impl AggregationListItem {
    /// Creates a new builder-style object to manufacture [`AggregationListItem`](crate::types::AggregationListItem).
    pub fn builder() -> crate::types::builders::AggregationListItemBuilder {
        crate::types::builders::AggregationListItemBuilder::default()
    }
}

/// A builder for [`AggregationListItem`](crate::types::AggregationListItem).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct AggregationListItemBuilder {
    pub(crate) attribute: ::std::option::Option<::std::string::String>,
    pub(crate) display_value: ::std::option::Option<::std::string::String>,
}
impl AggregationListItemBuilder {
    /// <p>An attribute on which to compute aggregations.</p>
    /// This field is required.
    pub fn attribute(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.attribute = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>An attribute on which to compute aggregations.</p>
    pub fn set_attribute(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.attribute = input;
        self
    }
    /// <p>An attribute on which to compute aggregations.</p>
    pub fn get_attribute(&self) -> &::std::option::Option<::std::string::String> {
        &self.attribute
    }
    /// <p>The display value of the aggregation list item. Supported values include <code>value</code> and <code>glossaryTerm.name</code>.</p>
    pub fn display_value(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.display_value = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The display value of the aggregation list item. Supported values include <code>value</code> and <code>glossaryTerm.name</code>.</p>
    pub fn set_display_value(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.display_value = input;
        self
    }
    /// <p>The display value of the aggregation list item. Supported values include <code>value</code> and <code>glossaryTerm.name</code>.</p>
    pub fn get_display_value(&self) -> &::std::option::Option<::std::string::String> {
        &self.display_value
    }
    /// Consumes the builder and constructs a [`AggregationListItem`](crate::types::AggregationListItem).
    /// This method will fail if any of the following fields are not set:
    /// - [`attribute`](crate::types::builders::AggregationListItemBuilder::attribute)
    pub fn build(self) -> ::std::result::Result<crate::types::AggregationListItem, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::AggregationListItem {
            attribute: self.attribute.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "attribute",
                    "attribute was not specified but it is required when building AggregationListItem",
                )
            })?,
            display_value: self.display_value,
        })
    }
}
