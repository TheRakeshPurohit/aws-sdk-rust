// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The managed endpoint credentials of the EMR on EKS cluster.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq)]
pub struct ManagedEndpointCredentials {
    /// <p>The identifier of the managed endpoint credentials.</p>
    pub id: ::std::option::Option<::std::string::String>,
    /// <p>The ARN of the managed endpoint credentials.</p>
    pub token: ::std::option::Option<::std::string::String>,
}
impl ManagedEndpointCredentials {
    /// <p>The identifier of the managed endpoint credentials.</p>
    pub fn id(&self) -> ::std::option::Option<&str> {
        self.id.as_deref()
    }
    /// <p>The ARN of the managed endpoint credentials.</p>
    pub fn token(&self) -> ::std::option::Option<&str> {
        self.token.as_deref()
    }
}
impl ::std::fmt::Debug for ManagedEndpointCredentials {
    fn fmt(&self, f: &mut ::std::fmt::Formatter<'_>) -> ::std::fmt::Result {
        let mut formatter = f.debug_struct("ManagedEndpointCredentials");
        formatter.field("id", &"*** Sensitive Data Redacted ***");
        formatter.field("token", &"*** Sensitive Data Redacted ***");
        formatter.finish()
    }
}
impl ManagedEndpointCredentials {
    /// Creates a new builder-style object to manufacture [`ManagedEndpointCredentials`](crate::types::ManagedEndpointCredentials).
    pub fn builder() -> crate::types::builders::ManagedEndpointCredentialsBuilder {
        crate::types::builders::ManagedEndpointCredentialsBuilder::default()
    }
}

/// A builder for [`ManagedEndpointCredentials`](crate::types::ManagedEndpointCredentials).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default)]
#[non_exhaustive]
pub struct ManagedEndpointCredentialsBuilder {
    pub(crate) id: ::std::option::Option<::std::string::String>,
    pub(crate) token: ::std::option::Option<::std::string::String>,
}
impl ManagedEndpointCredentialsBuilder {
    /// <p>The identifier of the managed endpoint credentials.</p>
    pub fn id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The identifier of the managed endpoint credentials.</p>
    pub fn set_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.id = input;
        self
    }
    /// <p>The identifier of the managed endpoint credentials.</p>
    pub fn get_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.id
    }
    /// <p>The ARN of the managed endpoint credentials.</p>
    pub fn token(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.token = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The ARN of the managed endpoint credentials.</p>
    pub fn set_token(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.token = input;
        self
    }
    /// <p>The ARN of the managed endpoint credentials.</p>
    pub fn get_token(&self) -> &::std::option::Option<::std::string::String> {
        &self.token
    }
    /// Consumes the builder and constructs a [`ManagedEndpointCredentials`](crate::types::ManagedEndpointCredentials).
    pub fn build(self) -> crate::types::ManagedEndpointCredentials {
        crate::types::ManagedEndpointCredentials {
            id: self.id,
            token: self.token,
        }
    }
}
impl ::std::fmt::Debug for ManagedEndpointCredentialsBuilder {
    fn fmt(&self, f: &mut ::std::fmt::Formatter<'_>) -> ::std::fmt::Result {
        let mut formatter = f.debug_struct("ManagedEndpointCredentialsBuilder");
        formatter.field("id", &"*** Sensitive Data Redacted ***");
        formatter.field("token", &"*** Sensitive Data Redacted ***");
        formatter.finish()
    }
}
