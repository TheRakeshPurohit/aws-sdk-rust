// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Specifies the account/Region that is to be used during project creation for a particular blueprint.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct EnvironmentResolvedAccount {
    /// <p>The ID of the resolved account.</p>
    pub aws_account_id: ::std::string::String,
    /// <p>The name of the resolved Region.</p>
    pub region_name: ::std::string::String,
    /// <p>The ID of the account pool.</p>
    pub source_account_pool_id: ::std::option::Option<::std::string::String>,
}
impl EnvironmentResolvedAccount {
    /// <p>The ID of the resolved account.</p>
    pub fn aws_account_id(&self) -> &str {
        use std::ops::Deref;
        self.aws_account_id.deref()
    }
    /// <p>The name of the resolved Region.</p>
    pub fn region_name(&self) -> &str {
        use std::ops::Deref;
        self.region_name.deref()
    }
    /// <p>The ID of the account pool.</p>
    pub fn source_account_pool_id(&self) -> ::std::option::Option<&str> {
        self.source_account_pool_id.as_deref()
    }
}
impl EnvironmentResolvedAccount {
    /// Creates a new builder-style object to manufacture [`EnvironmentResolvedAccount`](crate::types::EnvironmentResolvedAccount).
    pub fn builder() -> crate::types::builders::EnvironmentResolvedAccountBuilder {
        crate::types::builders::EnvironmentResolvedAccountBuilder::default()
    }
}

/// A builder for [`EnvironmentResolvedAccount`](crate::types::EnvironmentResolvedAccount).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct EnvironmentResolvedAccountBuilder {
    pub(crate) aws_account_id: ::std::option::Option<::std::string::String>,
    pub(crate) region_name: ::std::option::Option<::std::string::String>,
    pub(crate) source_account_pool_id: ::std::option::Option<::std::string::String>,
}
impl EnvironmentResolvedAccountBuilder {
    /// <p>The ID of the resolved account.</p>
    /// This field is required.
    pub fn aws_account_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.aws_account_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The ID of the resolved account.</p>
    pub fn set_aws_account_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.aws_account_id = input;
        self
    }
    /// <p>The ID of the resolved account.</p>
    pub fn get_aws_account_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.aws_account_id
    }
    /// <p>The name of the resolved Region.</p>
    /// This field is required.
    pub fn region_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.region_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of the resolved Region.</p>
    pub fn set_region_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.region_name = input;
        self
    }
    /// <p>The name of the resolved Region.</p>
    pub fn get_region_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.region_name
    }
    /// <p>The ID of the account pool.</p>
    pub fn source_account_pool_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.source_account_pool_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The ID of the account pool.</p>
    pub fn set_source_account_pool_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.source_account_pool_id = input;
        self
    }
    /// <p>The ID of the account pool.</p>
    pub fn get_source_account_pool_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.source_account_pool_id
    }
    /// Consumes the builder and constructs a [`EnvironmentResolvedAccount`](crate::types::EnvironmentResolvedAccount).
    /// This method will fail if any of the following fields are not set:
    /// - [`aws_account_id`](crate::types::builders::EnvironmentResolvedAccountBuilder::aws_account_id)
    /// - [`region_name`](crate::types::builders::EnvironmentResolvedAccountBuilder::region_name)
    pub fn build(self) -> ::std::result::Result<crate::types::EnvironmentResolvedAccount, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::EnvironmentResolvedAccount {
            aws_account_id: self.aws_account_id.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "aws_account_id",
                    "aws_account_id was not specified but it is required when building EnvironmentResolvedAccount",
                )
            })?,
            region_name: self.region_name.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "region_name",
                    "region_name was not specified but it is required when building EnvironmentResolvedAccount",
                )
            })?,
            source_account_pool_id: self.source_account_pool_id,
        })
    }
}
