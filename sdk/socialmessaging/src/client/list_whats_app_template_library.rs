// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ListWhatsAppTemplateLibrary`](crate::operation::list_whats_app_template_library::builders::ListWhatsAppTemplateLibraryFluentBuilder) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::operation::list_whats_app_template_library::builders::ListWhatsAppTemplateLibraryFluentBuilder::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`next_token(impl Into<String>)`](crate::operation::list_whats_app_template_library::builders::ListWhatsAppTemplateLibraryFluentBuilder::next_token) / [`set_next_token(Option<String>)`](crate::operation::list_whats_app_template_library::builders::ListWhatsAppTemplateLibraryFluentBuilder::set_next_token):<br>required: **false**<br><p>The token for the next page of results.</p><br>
    ///   - [`max_results(i32)`](crate::operation::list_whats_app_template_library::builders::ListWhatsAppTemplateLibraryFluentBuilder::max_results) / [`set_max_results(Option<i32>)`](crate::operation::list_whats_app_template_library::builders::ListWhatsAppTemplateLibraryFluentBuilder::set_max_results):<br>required: **false**<br><p>The maximum number of results to return per page (1-100).</p><br>
    ///   - [`id(impl Into<String>)`](crate::operation::list_whats_app_template_library::builders::ListWhatsAppTemplateLibraryFluentBuilder::id) / [`set_id(Option<String>)`](crate::operation::list_whats_app_template_library::builders::ListWhatsAppTemplateLibraryFluentBuilder::set_id):<br>required: **true**<br><p>The ID of the WhatsApp Business Account to list library templates for.</p><br>
    ///   - [`filters(impl Into<String>, impl Into<String>)`](crate::operation::list_whats_app_template_library::builders::ListWhatsAppTemplateLibraryFluentBuilder::filters) / [`set_filters(Option<HashMap::<String, String>>)`](crate::operation::list_whats_app_template_library::builders::ListWhatsAppTemplateLibraryFluentBuilder::set_filters):<br>required: **false**<br><p>Map of filters to apply (searchKey, topic, usecase, industry, language).</p><br>
    /// - On success, responds with [`ListWhatsAppTemplateLibraryOutput`](crate::operation::list_whats_app_template_library::ListWhatsAppTemplateLibraryOutput) with field(s):
    ///   - [`meta_library_templates(Option<Vec::<MetaLibraryTemplateDefinition>>)`](crate::operation::list_whats_app_template_library::ListWhatsAppTemplateLibraryOutput::meta_library_templates): <p>A list of templates from Meta's library.</p>
    ///   - [`next_token(Option<String>)`](crate::operation::list_whats_app_template_library::ListWhatsAppTemplateLibraryOutput::next_token): <p>The token to retrieve the next page of results, if any.</p>
    /// - On failure, responds with [`SdkError<ListWhatsAppTemplateLibraryError>`](crate::operation::list_whats_app_template_library::ListWhatsAppTemplateLibraryError)
    pub fn list_whats_app_template_library(
        &self,
    ) -> crate::operation::list_whats_app_template_library::builders::ListWhatsAppTemplateLibraryFluentBuilder {
        crate::operation::list_whats_app_template_library::builders::ListWhatsAppTemplateLibraryFluentBuilder::new(self.handle.clone())
    }
}
