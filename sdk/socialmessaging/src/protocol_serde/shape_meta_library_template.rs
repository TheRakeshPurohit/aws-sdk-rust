// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_meta_library_template(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::types::MetaLibraryTemplate,
) -> ::std::result::Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    {
        object.key("templateName").string(input.template_name.as_str());
    }
    {
        object.key("libraryTemplateName").string(input.library_template_name.as_str());
    }
    {
        object.key("templateCategory").string(input.template_category.as_str());
    }
    {
        object.key("templateLanguage").string(input.template_language.as_str());
    }
    if let Some(var_1) = &input.library_template_button_inputs {
        let mut array_2 = object.key("libraryTemplateButtonInputs").start_array();
        for item_3 in var_1 {
            {
                #[allow(unused_mut)]
                let mut object_4 = array_2.value().start_object();
                crate::protocol_serde::shape_library_template_button_input::ser_library_template_button_input(&mut object_4, item_3)?;
                object_4.finish();
            }
        }
        array_2.finish();
    }
    if let Some(var_5) = &input.library_template_body_inputs {
        #[allow(unused_mut)]
        let mut object_6 = object.key("libraryTemplateBodyInputs").start_object();
        crate::protocol_serde::shape_library_template_body_inputs::ser_library_template_body_inputs(&mut object_6, var_5)?;
        object_6.finish();
    }
    Ok(())
}
