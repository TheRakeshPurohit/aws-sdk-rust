// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct CreateWhatsAppMessageTemplateFromLibraryInput {
    /// <p>The template configuration from Meta's library, including customizations for buttons and body text.</p>
    pub meta_library_template: ::std::option::Option<crate::types::MetaLibraryTemplate>,
    /// <p>The ID of the WhatsApp Business Account to associate with this template.</p>
    pub id: ::std::option::Option<::std::string::String>,
}
impl CreateWhatsAppMessageTemplateFromLibraryInput {
    /// <p>The template configuration from Meta's library, including customizations for buttons and body text.</p>
    pub fn meta_library_template(&self) -> ::std::option::Option<&crate::types::MetaLibraryTemplate> {
        self.meta_library_template.as_ref()
    }
    /// <p>The ID of the WhatsApp Business Account to associate with this template.</p>
    pub fn id(&self) -> ::std::option::Option<&str> {
        self.id.as_deref()
    }
}
impl CreateWhatsAppMessageTemplateFromLibraryInput {
    /// Creates a new builder-style object to manufacture [`CreateWhatsAppMessageTemplateFromLibraryInput`](crate::operation::create_whats_app_message_template_from_library::CreateWhatsAppMessageTemplateFromLibraryInput).
    pub fn builder(
    ) -> crate::operation::create_whats_app_message_template_from_library::builders::CreateWhatsAppMessageTemplateFromLibraryInputBuilder {
        crate::operation::create_whats_app_message_template_from_library::builders::CreateWhatsAppMessageTemplateFromLibraryInputBuilder::default()
    }
}

/// A builder for [`CreateWhatsAppMessageTemplateFromLibraryInput`](crate::operation::create_whats_app_message_template_from_library::CreateWhatsAppMessageTemplateFromLibraryInput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct CreateWhatsAppMessageTemplateFromLibraryInputBuilder {
    pub(crate) meta_library_template: ::std::option::Option<crate::types::MetaLibraryTemplate>,
    pub(crate) id: ::std::option::Option<::std::string::String>,
}
impl CreateWhatsAppMessageTemplateFromLibraryInputBuilder {
    /// <p>The template configuration from Meta's library, including customizations for buttons and body text.</p>
    /// This field is required.
    pub fn meta_library_template(mut self, input: crate::types::MetaLibraryTemplate) -> Self {
        self.meta_library_template = ::std::option::Option::Some(input);
        self
    }
    /// <p>The template configuration from Meta's library, including customizations for buttons and body text.</p>
    pub fn set_meta_library_template(mut self, input: ::std::option::Option<crate::types::MetaLibraryTemplate>) -> Self {
        self.meta_library_template = input;
        self
    }
    /// <p>The template configuration from Meta's library, including customizations for buttons and body text.</p>
    pub fn get_meta_library_template(&self) -> &::std::option::Option<crate::types::MetaLibraryTemplate> {
        &self.meta_library_template
    }
    /// <p>The ID of the WhatsApp Business Account to associate with this template.</p>
    /// This field is required.
    pub fn id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The ID of the WhatsApp Business Account to associate with this template.</p>
    pub fn set_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.id = input;
        self
    }
    /// <p>The ID of the WhatsApp Business Account to associate with this template.</p>
    pub fn get_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.id
    }
    /// Consumes the builder and constructs a [`CreateWhatsAppMessageTemplateFromLibraryInput`](crate::operation::create_whats_app_message_template_from_library::CreateWhatsAppMessageTemplateFromLibraryInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::create_whats_app_message_template_from_library::CreateWhatsAppMessageTemplateFromLibraryInput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(
            crate::operation::create_whats_app_message_template_from_library::CreateWhatsAppMessageTemplateFromLibraryInput {
                meta_library_template: self.meta_library_template,
                id: self.id,
            },
        )
    }
}
