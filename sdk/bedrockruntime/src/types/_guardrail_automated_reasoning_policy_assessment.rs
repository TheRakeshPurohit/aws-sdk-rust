// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Contains the results of automated reasoning policy evaluation, including logical findings about the validity of claims made in the input content.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct GuardrailAutomatedReasoningPolicyAssessment {
    /// <p>List of logical validation results produced by evaluating the input content against automated reasoning policies.</p>
    pub findings: ::std::option::Option<::std::vec::Vec<crate::types::GuardrailAutomatedReasoningFinding>>,
}
impl GuardrailAutomatedReasoningPolicyAssessment {
    /// <p>List of logical validation results produced by evaluating the input content against automated reasoning policies.</p>
    ///
    /// If no value was sent for this field, a default will be set. If you want to determine if no value was sent, use `.findings.is_none()`.
    pub fn findings(&self) -> &[crate::types::GuardrailAutomatedReasoningFinding] {
        self.findings.as_deref().unwrap_or_default()
    }
}
impl GuardrailAutomatedReasoningPolicyAssessment {
    /// Creates a new builder-style object to manufacture [`GuardrailAutomatedReasoningPolicyAssessment`](crate::types::GuardrailAutomatedReasoningPolicyAssessment).
    pub fn builder() -> crate::types::builders::GuardrailAutomatedReasoningPolicyAssessmentBuilder {
        crate::types::builders::GuardrailAutomatedReasoningPolicyAssessmentBuilder::default()
    }
}

/// A builder for [`GuardrailAutomatedReasoningPolicyAssessment`](crate::types::GuardrailAutomatedReasoningPolicyAssessment).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct GuardrailAutomatedReasoningPolicyAssessmentBuilder {
    pub(crate) findings: ::std::option::Option<::std::vec::Vec<crate::types::GuardrailAutomatedReasoningFinding>>,
}
impl GuardrailAutomatedReasoningPolicyAssessmentBuilder {
    /// Appends an item to `findings`.
    ///
    /// To override the contents of this collection use [`set_findings`](Self::set_findings).
    ///
    /// <p>List of logical validation results produced by evaluating the input content against automated reasoning policies.</p>
    pub fn findings(mut self, input: crate::types::GuardrailAutomatedReasoningFinding) -> Self {
        let mut v = self.findings.unwrap_or_default();
        v.push(input);
        self.findings = ::std::option::Option::Some(v);
        self
    }
    /// <p>List of logical validation results produced by evaluating the input content against automated reasoning policies.</p>
    pub fn set_findings(mut self, input: ::std::option::Option<::std::vec::Vec<crate::types::GuardrailAutomatedReasoningFinding>>) -> Self {
        self.findings = input;
        self
    }
    /// <p>List of logical validation results produced by evaluating the input content against automated reasoning policies.</p>
    pub fn get_findings(&self) -> &::std::option::Option<::std::vec::Vec<crate::types::GuardrailAutomatedReasoningFinding>> {
        &self.findings
    }
    /// Consumes the builder and constructs a [`GuardrailAutomatedReasoningPolicyAssessment`](crate::types::GuardrailAutomatedReasoningPolicyAssessment).
    pub fn build(self) -> crate::types::GuardrailAutomatedReasoningPolicyAssessment {
        crate::types::GuardrailAutomatedReasoningPolicyAssessment { findings: self.findings }
    }
}
