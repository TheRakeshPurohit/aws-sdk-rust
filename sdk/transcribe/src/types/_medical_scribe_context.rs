// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The <code>MedicalScribeContext</code> object that contains contextual information used to generate customized clinical notes.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct MedicalScribeContext {
    /// <p>Contains patient-specific information.</p>
    pub patient_context: ::std::option::Option<crate::types::MedicalScribePatientContext>,
}
impl MedicalScribeContext {
    /// <p>Contains patient-specific information.</p>
    pub fn patient_context(&self) -> ::std::option::Option<&crate::types::MedicalScribePatientContext> {
        self.patient_context.as_ref()
    }
}
impl MedicalScribeContext {
    /// Creates a new builder-style object to manufacture [`MedicalScribeContext`](crate::types::MedicalScribeContext).
    pub fn builder() -> crate::types::builders::MedicalScribeContextBuilder {
        crate::types::builders::MedicalScribeContextBuilder::default()
    }
}

/// A builder for [`MedicalScribeContext`](crate::types::MedicalScribeContext).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct MedicalScribeContextBuilder {
    pub(crate) patient_context: ::std::option::Option<crate::types::MedicalScribePatientContext>,
}
impl MedicalScribeContextBuilder {
    /// <p>Contains patient-specific information.</p>
    pub fn patient_context(mut self, input: crate::types::MedicalScribePatientContext) -> Self {
        self.patient_context = ::std::option::Option::Some(input);
        self
    }
    /// <p>Contains patient-specific information.</p>
    pub fn set_patient_context(mut self, input: ::std::option::Option<crate::types::MedicalScribePatientContext>) -> Self {
        self.patient_context = input;
        self
    }
    /// <p>Contains patient-specific information.</p>
    pub fn get_patient_context(&self) -> &::std::option::Option<crate::types::MedicalScribePatientContext> {
        &self.patient_context
    }
    /// Consumes the builder and constructs a [`MedicalScribeContext`](crate::types::MedicalScribeContext).
    pub fn build(self) -> crate::types::MedicalScribeContext {
        crate::types::MedicalScribeContext {
            patient_context: self.patient_context,
        }
    }
}
