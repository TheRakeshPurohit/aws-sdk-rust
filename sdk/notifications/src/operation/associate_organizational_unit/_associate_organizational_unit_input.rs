// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct AssociateOrganizationalUnitInput {
    /// <p>The unique identifier of the organizational unit to associate.</p>
    pub organizational_unit_id: ::std::option::Option<::std::string::String>,
    /// <p>The Amazon Resource Name (ARN) of the notification configuration to associate with the organizational unit.</p>
    pub notification_configuration_arn: ::std::option::Option<::std::string::String>,
}
impl AssociateOrganizationalUnitInput {
    /// <p>The unique identifier of the organizational unit to associate.</p>
    pub fn organizational_unit_id(&self) -> ::std::option::Option<&str> {
        self.organizational_unit_id.as_deref()
    }
    /// <p>The Amazon Resource Name (ARN) of the notification configuration to associate with the organizational unit.</p>
    pub fn notification_configuration_arn(&self) -> ::std::option::Option<&str> {
        self.notification_configuration_arn.as_deref()
    }
}
impl AssociateOrganizationalUnitInput {
    /// Creates a new builder-style object to manufacture [`AssociateOrganizationalUnitInput`](crate::operation::associate_organizational_unit::AssociateOrganizationalUnitInput).
    pub fn builder() -> crate::operation::associate_organizational_unit::builders::AssociateOrganizationalUnitInputBuilder {
        crate::operation::associate_organizational_unit::builders::AssociateOrganizationalUnitInputBuilder::default()
    }
}

/// A builder for [`AssociateOrganizationalUnitInput`](crate::operation::associate_organizational_unit::AssociateOrganizationalUnitInput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct AssociateOrganizationalUnitInputBuilder {
    pub(crate) organizational_unit_id: ::std::option::Option<::std::string::String>,
    pub(crate) notification_configuration_arn: ::std::option::Option<::std::string::String>,
}
impl AssociateOrganizationalUnitInputBuilder {
    /// <p>The unique identifier of the organizational unit to associate.</p>
    /// This field is required.
    pub fn organizational_unit_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.organizational_unit_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The unique identifier of the organizational unit to associate.</p>
    pub fn set_organizational_unit_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.organizational_unit_id = input;
        self
    }
    /// <p>The unique identifier of the organizational unit to associate.</p>
    pub fn get_organizational_unit_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.organizational_unit_id
    }
    /// <p>The Amazon Resource Name (ARN) of the notification configuration to associate with the organizational unit.</p>
    /// This field is required.
    pub fn notification_configuration_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.notification_configuration_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the notification configuration to associate with the organizational unit.</p>
    pub fn set_notification_configuration_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.notification_configuration_arn = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the notification configuration to associate with the organizational unit.</p>
    pub fn get_notification_configuration_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.notification_configuration_arn
    }
    /// Consumes the builder and constructs a [`AssociateOrganizationalUnitInput`](crate::operation::associate_organizational_unit::AssociateOrganizationalUnitInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::associate_organizational_unit::AssociateOrganizationalUnitInput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(crate::operation::associate_organizational_unit::AssociateOrganizationalUnitInput {
            organizational_unit_id: self.organizational_unit_id,
            notification_configuration_arn: self.notification_configuration_arn,
        })
    }
}
